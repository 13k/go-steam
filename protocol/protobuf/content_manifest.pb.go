// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content_manifest.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package protobuf is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package protobuf to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContentManifestPayload struct {
	Mappings             []*ContentManifestPayload_FileMapping `protobuf:"bytes,1,rep,name=mappings" json:"mappings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ContentManifestPayload) Reset()         { *m = ContentManifestPayload{} }
func (m *ContentManifestPayload) String() string { return proto.CompactTextString(m) }
func (*ContentManifestPayload) ProtoMessage()    {}
func (*ContentManifestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{0}
}

func (m *ContentManifestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentManifestPayload.Unmarshal(m, b)
}
func (m *ContentManifestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentManifestPayload.Marshal(b, m, deterministic)
}
func (m *ContentManifestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentManifestPayload.Merge(m, src)
}
func (m *ContentManifestPayload) XXX_Size() int {
	return xxx_messageInfo_ContentManifestPayload.Size(m)
}
func (m *ContentManifestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentManifestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ContentManifestPayload proto.InternalMessageInfo

func (m *ContentManifestPayload) GetMappings() []*ContentManifestPayload_FileMapping {
	if m != nil {
		return m.Mappings
	}
	return nil
}

type ContentManifestPayload_FileMapping struct {
	Filename             *string                                         `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Size                 *uint64                                         `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Flags                *uint32                                         `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	ShaFilename          []byte                                          `protobuf:"bytes,4,opt,name=sha_filename,json=shaFilename" json:"sha_filename,omitempty"`
	ShaContent           []byte                                          `protobuf:"bytes,5,opt,name=sha_content,json=shaContent" json:"sha_content,omitempty"`
	Chunks               []*ContentManifestPayload_FileMapping_ChunkData `protobuf:"bytes,6,rep,name=chunks" json:"chunks,omitempty"`
	Linktarget           *string                                         `protobuf:"bytes,7,opt,name=linktarget" json:"linktarget,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *ContentManifestPayload_FileMapping) Reset()         { *m = ContentManifestPayload_FileMapping{} }
func (m *ContentManifestPayload_FileMapping) String() string { return proto.CompactTextString(m) }
func (*ContentManifestPayload_FileMapping) ProtoMessage()    {}
func (*ContentManifestPayload_FileMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{0, 0}
}

func (m *ContentManifestPayload_FileMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentManifestPayload_FileMapping.Unmarshal(m, b)
}
func (m *ContentManifestPayload_FileMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentManifestPayload_FileMapping.Marshal(b, m, deterministic)
}
func (m *ContentManifestPayload_FileMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentManifestPayload_FileMapping.Merge(m, src)
}
func (m *ContentManifestPayload_FileMapping) XXX_Size() int {
	return xxx_messageInfo_ContentManifestPayload_FileMapping.Size(m)
}
func (m *ContentManifestPayload_FileMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentManifestPayload_FileMapping.DiscardUnknown(m)
}

var xxx_messageInfo_ContentManifestPayload_FileMapping proto.InternalMessageInfo

func (m *ContentManifestPayload_FileMapping) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *ContentManifestPayload_FileMapping) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *ContentManifestPayload_FileMapping) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *ContentManifestPayload_FileMapping) GetShaFilename() []byte {
	if m != nil {
		return m.ShaFilename
	}
	return nil
}

func (m *ContentManifestPayload_FileMapping) GetShaContent() []byte {
	if m != nil {
		return m.ShaContent
	}
	return nil
}

func (m *ContentManifestPayload_FileMapping) GetChunks() []*ContentManifestPayload_FileMapping_ChunkData {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func (m *ContentManifestPayload_FileMapping) GetLinktarget() string {
	if m != nil && m.Linktarget != nil {
		return *m.Linktarget
	}
	return ""
}

type ContentManifestPayload_FileMapping_ChunkData struct {
	Sha                  []byte   `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
	Crc                  *uint32  `protobuf:"fixed32,2,opt,name=crc" json:"crc,omitempty"`
	Offset               *uint64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	CbOriginal           *uint32  `protobuf:"varint,4,opt,name=cb_original,json=cbOriginal" json:"cb_original,omitempty"`
	CbCompressed         *uint32  `protobuf:"varint,5,opt,name=cb_compressed,json=cbCompressed" json:"cb_compressed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentManifestPayload_FileMapping_ChunkData) Reset() {
	*m = ContentManifestPayload_FileMapping_ChunkData{}
}
func (m *ContentManifestPayload_FileMapping_ChunkData) String() string {
	return proto.CompactTextString(m)
}
func (*ContentManifestPayload_FileMapping_ChunkData) ProtoMessage() {}
func (*ContentManifestPayload_FileMapping_ChunkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{0, 0, 0}
}

func (m *ContentManifestPayload_FileMapping_ChunkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData.Unmarshal(m, b)
}
func (m *ContentManifestPayload_FileMapping_ChunkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData.Marshal(b, m, deterministic)
}
func (m *ContentManifestPayload_FileMapping_ChunkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData.Merge(m, src)
}
func (m *ContentManifestPayload_FileMapping_ChunkData) XXX_Size() int {
	return xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData.Size(m)
}
func (m *ContentManifestPayload_FileMapping_ChunkData) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData.DiscardUnknown(m)
}

var xxx_messageInfo_ContentManifestPayload_FileMapping_ChunkData proto.InternalMessageInfo

func (m *ContentManifestPayload_FileMapping_ChunkData) GetSha() []byte {
	if m != nil {
		return m.Sha
	}
	return nil
}

func (m *ContentManifestPayload_FileMapping_ChunkData) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

func (m *ContentManifestPayload_FileMapping_ChunkData) GetOffset() uint64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ContentManifestPayload_FileMapping_ChunkData) GetCbOriginal() uint32 {
	if m != nil && m.CbOriginal != nil {
		return *m.CbOriginal
	}
	return 0
}

func (m *ContentManifestPayload_FileMapping_ChunkData) GetCbCompressed() uint32 {
	if m != nil && m.CbCompressed != nil {
		return *m.CbCompressed
	}
	return 0
}

type ContentManifestMetadata struct {
	DepotId              *uint32  `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	GidManifest          *uint64  `protobuf:"varint,2,opt,name=gid_manifest,json=gidManifest" json:"gid_manifest,omitempty"`
	CreationTime         *uint32  `protobuf:"varint,3,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	FilenamesEncrypted   *bool    `protobuf:"varint,4,opt,name=filenames_encrypted,json=filenamesEncrypted" json:"filenames_encrypted,omitempty"`
	CbDiskOriginal       *uint64  `protobuf:"varint,5,opt,name=cb_disk_original,json=cbDiskOriginal" json:"cb_disk_original,omitempty"`
	CbDiskCompressed     *uint64  `protobuf:"varint,6,opt,name=cb_disk_compressed,json=cbDiskCompressed" json:"cb_disk_compressed,omitempty"`
	UniqueChunks         *uint32  `protobuf:"varint,7,opt,name=unique_chunks,json=uniqueChunks" json:"unique_chunks,omitempty"`
	CrcEncrypted         *uint32  `protobuf:"varint,8,opt,name=crc_encrypted,json=crcEncrypted" json:"crc_encrypted,omitempty"`
	CrcClear             *uint32  `protobuf:"varint,9,opt,name=crc_clear,json=crcClear" json:"crc_clear,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentManifestMetadata) Reset()         { *m = ContentManifestMetadata{} }
func (m *ContentManifestMetadata) String() string { return proto.CompactTextString(m) }
func (*ContentManifestMetadata) ProtoMessage()    {}
func (*ContentManifestMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{1}
}

func (m *ContentManifestMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentManifestMetadata.Unmarshal(m, b)
}
func (m *ContentManifestMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentManifestMetadata.Marshal(b, m, deterministic)
}
func (m *ContentManifestMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentManifestMetadata.Merge(m, src)
}
func (m *ContentManifestMetadata) XXX_Size() int {
	return xxx_messageInfo_ContentManifestMetadata.Size(m)
}
func (m *ContentManifestMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentManifestMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ContentManifestMetadata proto.InternalMessageInfo

func (m *ContentManifestMetadata) GetDepotId() uint32 {
	if m != nil && m.DepotId != nil {
		return *m.DepotId
	}
	return 0
}

func (m *ContentManifestMetadata) GetGidManifest() uint64 {
	if m != nil && m.GidManifest != nil {
		return *m.GidManifest
	}
	return 0
}

func (m *ContentManifestMetadata) GetCreationTime() uint32 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *ContentManifestMetadata) GetFilenamesEncrypted() bool {
	if m != nil && m.FilenamesEncrypted != nil {
		return *m.FilenamesEncrypted
	}
	return false
}

func (m *ContentManifestMetadata) GetCbDiskOriginal() uint64 {
	if m != nil && m.CbDiskOriginal != nil {
		return *m.CbDiskOriginal
	}
	return 0
}

func (m *ContentManifestMetadata) GetCbDiskCompressed() uint64 {
	if m != nil && m.CbDiskCompressed != nil {
		return *m.CbDiskCompressed
	}
	return 0
}

func (m *ContentManifestMetadata) GetUniqueChunks() uint32 {
	if m != nil && m.UniqueChunks != nil {
		return *m.UniqueChunks
	}
	return 0
}

func (m *ContentManifestMetadata) GetCrcEncrypted() uint32 {
	if m != nil && m.CrcEncrypted != nil {
		return *m.CrcEncrypted
	}
	return 0
}

func (m *ContentManifestMetadata) GetCrcClear() uint32 {
	if m != nil && m.CrcClear != nil {
		return *m.CrcClear
	}
	return 0
}

type ContentManifestSignature struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentManifestSignature) Reset()         { *m = ContentManifestSignature{} }
func (m *ContentManifestSignature) String() string { return proto.CompactTextString(m) }
func (*ContentManifestSignature) ProtoMessage()    {}
func (*ContentManifestSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{2}
}

func (m *ContentManifestSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentManifestSignature.Unmarshal(m, b)
}
func (m *ContentManifestSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentManifestSignature.Marshal(b, m, deterministic)
}
func (m *ContentManifestSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentManifestSignature.Merge(m, src)
}
func (m *ContentManifestSignature) XXX_Size() int {
	return xxx_messageInfo_ContentManifestSignature.Size(m)
}
func (m *ContentManifestSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentManifestSignature.DiscardUnknown(m)
}

var xxx_messageInfo_ContentManifestSignature proto.InternalMessageInfo

func (m *ContentManifestSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ContentDeltaChunks struct {
	DepotId              *uint32                          `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	ManifestIdSource     *uint64                          `protobuf:"varint,2,opt,name=manifest_id_source,json=manifestIdSource" json:"manifest_id_source,omitempty"`
	ManifestIdTarget     *uint64                          `protobuf:"varint,3,opt,name=manifest_id_target,json=manifestIdTarget" json:"manifest_id_target,omitempty"`
	DeltaChunks          []*ContentDeltaChunks_DeltaChunk `protobuf:"bytes,4,rep,name=deltaChunks" json:"deltaChunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ContentDeltaChunks) Reset()         { *m = ContentDeltaChunks{} }
func (m *ContentDeltaChunks) String() string { return proto.CompactTextString(m) }
func (*ContentDeltaChunks) ProtoMessage()    {}
func (*ContentDeltaChunks) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{3}
}

func (m *ContentDeltaChunks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentDeltaChunks.Unmarshal(m, b)
}
func (m *ContentDeltaChunks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentDeltaChunks.Marshal(b, m, deterministic)
}
func (m *ContentDeltaChunks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentDeltaChunks.Merge(m, src)
}
func (m *ContentDeltaChunks) XXX_Size() int {
	return xxx_messageInfo_ContentDeltaChunks.Size(m)
}
func (m *ContentDeltaChunks) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentDeltaChunks.DiscardUnknown(m)
}

var xxx_messageInfo_ContentDeltaChunks proto.InternalMessageInfo

func (m *ContentDeltaChunks) GetDepotId() uint32 {
	if m != nil && m.DepotId != nil {
		return *m.DepotId
	}
	return 0
}

func (m *ContentDeltaChunks) GetManifestIdSource() uint64 {
	if m != nil && m.ManifestIdSource != nil {
		return *m.ManifestIdSource
	}
	return 0
}

func (m *ContentDeltaChunks) GetManifestIdTarget() uint64 {
	if m != nil && m.ManifestIdTarget != nil {
		return *m.ManifestIdTarget
	}
	return 0
}

func (m *ContentDeltaChunks) GetDeltaChunks() []*ContentDeltaChunks_DeltaChunk {
	if m != nil {
		return m.DeltaChunks
	}
	return nil
}

type ContentDeltaChunks_DeltaChunk struct {
	ShaSource            []byte   `protobuf:"bytes,1,opt,name=sha_source,json=shaSource" json:"sha_source,omitempty"`
	ShaTarget            []byte   `protobuf:"bytes,2,opt,name=sha_target,json=shaTarget" json:"sha_target,omitempty"`
	SizeOriginal         *uint32  `protobuf:"varint,3,opt,name=size_original,json=sizeOriginal" json:"size_original,omitempty"`
	PatchMethod          *uint32  `protobuf:"varint,4,opt,name=patch_method,json=patchMethod" json:"patch_method,omitempty"`
	Chunk                []byte   `protobuf:"bytes,5,opt,name=chunk" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentDeltaChunks_DeltaChunk) Reset()         { *m = ContentDeltaChunks_DeltaChunk{} }
func (m *ContentDeltaChunks_DeltaChunk) String() string { return proto.CompactTextString(m) }
func (*ContentDeltaChunks_DeltaChunk) ProtoMessage()    {}
func (*ContentDeltaChunks_DeltaChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3cda137a29253ba, []int{3, 0}
}

func (m *ContentDeltaChunks_DeltaChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentDeltaChunks_DeltaChunk.Unmarshal(m, b)
}
func (m *ContentDeltaChunks_DeltaChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentDeltaChunks_DeltaChunk.Marshal(b, m, deterministic)
}
func (m *ContentDeltaChunks_DeltaChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentDeltaChunks_DeltaChunk.Merge(m, src)
}
func (m *ContentDeltaChunks_DeltaChunk) XXX_Size() int {
	return xxx_messageInfo_ContentDeltaChunks_DeltaChunk.Size(m)
}
func (m *ContentDeltaChunks_DeltaChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentDeltaChunks_DeltaChunk.DiscardUnknown(m)
}

var xxx_messageInfo_ContentDeltaChunks_DeltaChunk proto.InternalMessageInfo

func (m *ContentDeltaChunks_DeltaChunk) GetShaSource() []byte {
	if m != nil {
		return m.ShaSource
	}
	return nil
}

func (m *ContentDeltaChunks_DeltaChunk) GetShaTarget() []byte {
	if m != nil {
		return m.ShaTarget
	}
	return nil
}

func (m *ContentDeltaChunks_DeltaChunk) GetSizeOriginal() uint32 {
	if m != nil && m.SizeOriginal != nil {
		return *m.SizeOriginal
	}
	return 0
}

func (m *ContentDeltaChunks_DeltaChunk) GetPatchMethod() uint32 {
	if m != nil && m.PatchMethod != nil {
		return *m.PatchMethod
	}
	return 0
}

func (m *ContentDeltaChunks_DeltaChunk) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func init() {
	proto.RegisterType((*ContentManifestPayload)(nil), "ContentManifestPayload")
	proto.RegisterType((*ContentManifestPayload_FileMapping)(nil), "ContentManifestPayload.FileMapping")
	proto.RegisterType((*ContentManifestPayload_FileMapping_ChunkData)(nil), "ContentManifestPayload.FileMapping.ChunkData")
	proto.RegisterType((*ContentManifestMetadata)(nil), "ContentManifestMetadata")
	proto.RegisterType((*ContentManifestSignature)(nil), "ContentManifestSignature")
	proto.RegisterType((*ContentDeltaChunks)(nil), "ContentDeltaChunks")
	proto.RegisterType((*ContentDeltaChunks_DeltaChunk)(nil), "ContentDeltaChunks.DeltaChunk")
}

func init() { proto.RegisterFile("content_manifest.proto", fileDescriptor_e3cda137a29253ba) }

var fileDescriptor_e3cda137a29253ba = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x66, 0xf3, 0x9f, 0x49, 0x82, 0x22, 0x83, 0xca, 0x12, 0xa0, 0xa4, 0xe9, 0x25, 0x87, 0x12,
	0x24, 0x4e, 0xdc, 0x40, 0x24, 0xad, 0xe8, 0x21, 0x02, 0xb9, 0xbd, 0xaf, 0x1c, 0xdb, 0xd9, 0xb5,
	0xb2, 0x7f, 0xac, 0x9d, 0x43, 0x39, 0xf1, 0x02, 0xf0, 0x1c, 0x3c, 0x1b, 0xe2, 0x01, 0x38, 0x22,
	0x7b, 0xed, 0xdd, 0x28, 0x20, 0xc4, 0xcd, 0xf3, 0xcd, 0x37, 0xf6, 0xf7, 0x79, 0xc6, 0x86, 0x13,
	0x9a, 0xa5, 0x8a, 0xa7, 0x2a, 0x48, 0x48, 0x2a, 0xb6, 0x5c, 0xaa, 0x45, 0x5e, 0x64, 0x2a, 0x9b,
	0xfd, 0x68, 0xc2, 0xc9, 0xb2, 0x4c, 0xad, 0x6d, 0xe6, 0x23, 0xb9, 0x8b, 0x33, 0xc2, 0xd0, 0x1b,
	0xe8, 0x25, 0x24, 0xcf, 0x45, 0x1a, 0x4a, 0xdf, 0x9b, 0x36, 0xe7, 0x83, 0x57, 0xe7, 0x8b, 0xbf,
	0x53, 0x17, 0x57, 0x22, 0xe6, 0xeb, 0x92, 0x8b, 0xab, 0xa2, 0xc9, 0xb7, 0x26, 0x0c, 0x0e, 0x32,
	0x68, 0x02, 0xbd, 0xad, 0x88, 0x79, 0x4a, 0x12, 0xee, 0x7b, 0x53, 0x6f, 0xde, 0xc7, 0x55, 0x8c,
	0x10, 0xb4, 0xa4, 0xf8, 0xcc, 0xfd, 0xc6, 0xd4, 0x9b, 0xb7, 0xb0, 0x59, 0xa3, 0x87, 0xd0, 0xde,
	0xc6, 0x24, 0x94, 0x7e, 0x73, 0xea, 0xcd, 0x47, 0xb8, 0x0c, 0xd0, 0x19, 0x0c, 0x65, 0x44, 0x82,
	0x6a, 0xa7, 0xd6, 0xd4, 0x9b, 0x0f, 0xf1, 0x40, 0x46, 0xe4, 0xca, 0x6d, 0xf6, 0x1c, 0x74, 0x18,
	0x58, 0xcb, 0x7e, 0xdb, 0x30, 0x40, 0x46, 0xc4, 0xca, 0x47, 0x97, 0xd0, 0xa1, 0xd1, 0x3e, 0xdd,
	0x49, 0xbf, 0x63, 0x8c, 0xbd, 0xf8, 0x0f, 0x63, 0x8b, 0xa5, 0xae, 0x58, 0x11, 0x45, 0xb0, 0x2d,
	0x46, 0xa7, 0x00, 0xb1, 0x48, 0x77, 0x8a, 0x14, 0x21, 0x57, 0x7e, 0xd7, 0x58, 0x3a, 0x40, 0x26,
	0x5f, 0x3d, 0xe8, 0x57, 0x55, 0x68, 0x0c, 0x4d, 0x19, 0x11, 0xe3, 0x7c, 0x88, 0xf5, 0x52, 0x23,
	0xb4, 0xa0, 0xc6, 0x73, 0x17, 0xeb, 0x25, 0x3a, 0x81, 0x4e, 0xb6, 0xdd, 0x4a, 0xae, 0x8c, 0xe7,
	0x16, 0xb6, 0x91, 0x76, 0x44, 0x37, 0x41, 0x56, 0x88, 0x50, 0xa4, 0x24, 0x36, 0x9e, 0x47, 0x18,
	0xe8, 0xe6, 0x83, 0x45, 0xd0, 0x39, 0x8c, 0xe8, 0x26, 0xa0, 0x59, 0x92, 0x17, 0x5c, 0x4a, 0xce,
	0x8c, 0xe9, 0x11, 0x1e, 0xd2, 0xcd, 0xb2, 0xc2, 0x66, 0x3f, 0x1b, 0xf0, 0xe8, 0xc8, 0xe8, 0x9a,
	0x2b, 0xc2, 0xb4, 0xba, 0xc7, 0xd0, 0x63, 0x3c, 0xcf, 0x54, 0x20, 0x98, 0x91, 0x38, 0xc2, 0x5d,
	0x13, 0x5f, 0x33, 0x7d, 0xe3, 0xa1, 0x60, 0xd5, 0xe4, 0xd8, 0x1e, 0x0d, 0x42, 0xc1, 0xdc, 0x2e,
	0xe6, 0xf8, 0x82, 0x13, 0x25, 0xb2, 0x34, 0x50, 0x22, 0xe1, 0xb6, 0x65, 0x43, 0x07, 0xde, 0x8a,
	0x84, 0xa3, 0x97, 0xf0, 0xc0, 0x75, 0x4d, 0x06, 0x3c, 0xa5, 0xc5, 0x5d, 0xae, 0x38, 0x33, 0x66,
	0x7a, 0x18, 0x55, 0xa9, 0x4b, 0x97, 0x41, 0x73, 0x18, 0xd3, 0x4d, 0xc0, 0x84, 0xdc, 0xd5, 0xd6,
	0xdb, 0xe6, 0xf0, 0xfb, 0x74, 0xb3, 0x12, 0x72, 0x57, 0xd9, 0xbf, 0x00, 0xe4, 0x98, 0x07, 0x77,
	0xd0, 0x31, 0xdc, 0x71, 0xc9, 0xad, 0xef, 0x41, 0xab, 0xdd, 0xa7, 0xe2, 0xd3, 0x9e, 0x07, 0x76,
	0x0a, 0xba, 0xa5, 0xda, 0x12, 0x5c, 0x96, 0xcd, 0x35, 0x96, 0xe8, 0x81, 0xce, 0x9e, 0xb3, 0x44,
	0x6b, 0x85, 0x4f, 0xa0, 0xaf, 0x49, 0x34, 0xe6, 0xa4, 0xf0, 0xfb, 0x86, 0xd0, 0xa3, 0x05, 0x5d,
	0xea, 0x78, 0xf6, 0x1a, 0xfc, 0xa3, 0xdb, 0xbe, 0x11, 0x61, 0x4a, 0xd4, 0xbe, 0xe0, 0xe8, 0x29,
	0xf4, 0xa5, 0x0b, 0xec, 0x48, 0xd4, 0xc0, 0xec, 0x57, 0x03, 0x90, 0x2d, 0x5d, 0xf1, 0x58, 0x11,
	0x2b, 0xe9, 0x1f, 0x3d, 0xba, 0x00, 0xe4, 0xfa, 0x13, 0x08, 0x16, 0xc8, 0x6c, 0x5f, 0x50, 0xf7,
	0x9a, 0xc6, 0x2e, 0x73, 0xcd, 0x6e, 0x0c, 0x7e, 0xcc, 0xb6, 0x03, 0xdc, 0x3c, 0x66, 0xdf, 0x1a,
	0x1c, 0xbd, 0x85, 0x01, 0xab, 0x55, 0xf8, 0x2d, 0xf3, 0x64, 0x4e, 0x17, 0x7f, 0x0a, 0x5c, 0xd4,
	0x6b, 0x7c, 0x58, 0x32, 0xf9, 0xee, 0x01, 0xd4, 0x39, 0xf4, 0x0c, 0xf4, 0x63, 0x74, 0x22, 0x9d,
	0xfb, 0x88, 0x58, 0x75, 0x36, 0x6d, 0x55, 0x35, 0xaa, 0xb4, 0x95, 0x73, 0x0e, 0x23, 0xfd, 0x3d,
	0xd4, 0x23, 0x61, 0x67, 0x4d, 0x83, 0xd5, 0x40, 0x9c, 0xc1, 0x30, 0x27, 0x8a, 0x46, 0x41, 0xc2,
	0x55, 0x94, 0x31, 0xfb, 0x62, 0x06, 0x06, 0x5b, 0x1b, 0x48, 0x7f, 0x2f, 0xa6, 0xfd, 0xf6, 0x7f,
	0x28, 0x83, 0x77, 0xed, 0xf7, 0xde, 0x17, 0xef, 0xde, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2,
	0x8b, 0x9e, 0x33, 0x30, 0x05, 0x00, 0x00,
}
