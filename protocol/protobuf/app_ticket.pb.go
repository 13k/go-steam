// Code generated by protoc-gen-go.
// source: encrypted_app_ticket.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package protobuf is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package protobuf to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EncryptedAppTicket struct {
	TicketVersionNo               *uint32 `protobuf:"varint,1,opt,name=ticket_version_no,json=ticketVersionNo" json:"ticket_version_no,omitempty"`
	CrcEncryptedticket            *uint32 `protobuf:"varint,2,opt,name=crc_encryptedticket,json=crcEncryptedticket" json:"crc_encryptedticket,omitempty"`
	CbEncrypteduserdata           *uint32 `protobuf:"varint,3,opt,name=cb_encrypteduserdata,json=cbEncrypteduserdata" json:"cb_encrypteduserdata,omitempty"`
	CbEncryptedAppownershipticket *uint32 `protobuf:"varint,4,opt,name=cb_encrypted_appownershipticket,json=cbEncryptedAppownershipticket" json:"cb_encrypted_appownershipticket,omitempty"`
	EncryptedTicket               []byte  `protobuf:"bytes,5,opt,name=encrypted_ticket,json=encryptedTicket" json:"encrypted_ticket,omitempty"`
	XXX_unrecognized              []byte  `json:"-"`
}

func (m *EncryptedAppTicket) Reset()                    { *m = EncryptedAppTicket{} }
func (m *EncryptedAppTicket) String() string            { return proto.CompactTextString(m) }
func (*EncryptedAppTicket) ProtoMessage()               {}
func (*EncryptedAppTicket) Descriptor() ([]byte, []int) { return app_ticket_fileDescriptor0, []int{0} }

func (m *EncryptedAppTicket) GetTicketVersionNo() uint32 {
	if m != nil && m.TicketVersionNo != nil {
		return *m.TicketVersionNo
	}
	return 0
}

func (m *EncryptedAppTicket) GetCrcEncryptedticket() uint32 {
	if m != nil && m.CrcEncryptedticket != nil {
		return *m.CrcEncryptedticket
	}
	return 0
}

func (m *EncryptedAppTicket) GetCbEncrypteduserdata() uint32 {
	if m != nil && m.CbEncrypteduserdata != nil {
		return *m.CbEncrypteduserdata
	}
	return 0
}

func (m *EncryptedAppTicket) GetCbEncryptedAppownershipticket() uint32 {
	if m != nil && m.CbEncryptedAppownershipticket != nil {
		return *m.CbEncryptedAppownershipticket
	}
	return 0
}

func (m *EncryptedAppTicket) GetEncryptedTicket() []byte {
	if m != nil {
		return m.EncryptedTicket
	}
	return nil
}

func init() {
	proto.RegisterType((*EncryptedAppTicket)(nil), "EncryptedAppTicket")
}

func init() { proto.RegisterFile("encrypted_app_ticket.proto", app_ticket_fileDescriptor0) }

var app_ticket_fileDescriptor0 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4a, 0xcd, 0x4b, 0x2e,
	0xaa, 0x2c, 0x28, 0x49, 0x4d, 0x89, 0x4f, 0x2c, 0x28, 0x88, 0x2f, 0xc9, 0x4c, 0xce, 0x4e, 0x2d,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x9a, 0xce, 0xc4, 0x25, 0xe4, 0x0a, 0x93, 0x76, 0x2c,
	0x28, 0x08, 0x01, 0x4b, 0x0a, 0x69, 0x71, 0x09, 0x42, 0x94, 0xc5, 0x97, 0xa5, 0x16, 0x15, 0x67,
	0xe6, 0xe7, 0xc5, 0xe7, 0xe5, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06, 0xf1, 0x43, 0x24, 0xc2,
	0x20, 0xe2, 0x7e, 0xf9, 0x42, 0xfa, 0x5c, 0xc2, 0xc9, 0x45, 0xc9, 0xf1, 0x70, 0x4b, 0x20, 0xf2,
	0x12, 0x4c, 0x60, 0xd5, 0x42, 0x40, 0x29, 0x57, 0x54, 0x19, 0x21, 0x43, 0x2e, 0x91, 0xe4, 0x24,
	0x84, 0xfa, 0xd2, 0xe2, 0xd4, 0xa2, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x66, 0xb0, 0x0e, 0xe1, 0xe4,
	0x24, 0x57, 0x74, 0x29, 0x21, 0x37, 0x2e, 0x79, 0x64, 0x2d, 0x20, 0x7f, 0xe4, 0x97, 0xe7, 0x01,
	0x9d, 0x90, 0x91, 0x59, 0x00, 0xb5, 0x8f, 0x05, 0xac, 0x5b, 0x16, 0x49, 0xb7, 0x23, 0x86, 0x22,
	0x21, 0x4d, 0x2e, 0x01, 0x84, 0x21, 0x50, 0x8d, 0xac, 0x40, 0x8d, 0x3c, 0x41, 0xfc, 0x70, 0x71,
	0x48, 0x10, 0x38, 0xb1, 0x7a, 0x30, 0x36, 0x30, 0x32, 0x00, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe8,
	0x03, 0x98, 0x21, 0x3d, 0x01, 0x00, 0x00,
}
