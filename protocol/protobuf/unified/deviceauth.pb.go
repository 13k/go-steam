// Code generated by protoc-gen-go.
// source: steammessages_deviceauth.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package unified is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package unified to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CDeviceAuth_GetOwnAuthorizedDevices_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeCanceled  *bool   `protobuf:"varint,2,opt,name=include_canceled,json=includeCanceled" json:"include_canceled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Request{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Request) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{0}
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) GetIncludeCanceled() bool {
	if m != nil && m.IncludeCanceled != nil {
		return *m.IncludeCanceled
	}
	return false
}

type CDeviceAuth_GetOwnAuthorizedDevices_Response struct {
	Devices          []*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	XXX_unrecognized []byte                                                 `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Response{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{1}
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) GetDevices() []*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type CDeviceAuth_GetOwnAuthorizedDevices_Response_Device struct {
	AuthDeviceToken  *uint64 `protobuf:"fixed64,1,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	DeviceName       *string `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	IsPending        *bool   `protobuf:"varint,3,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	IsCanceled       *bool   `protobuf:"varint,4,opt,name=is_canceled,json=isCanceled" json:"is_canceled,omitempty"`
	LastTimeUsed     *uint32 `protobuf:"varint,5,opt,name=last_time_used,json=lastTimeUsed" json:"last_time_used,omitempty"`
	LastBorrowerId   *uint64 `protobuf:"fixed64,6,opt,name=last_borrower_id,json=lastBorrowerId" json:"last_borrower_id,omitempty"`
	LastAppPlayed    *uint32 `protobuf:"varint,7,opt,name=last_app_played,json=lastAppPlayed" json:"last_app_played,omitempty"`
	IsLimited        *bool   `protobuf:"varint,8,opt,name=is_limited,json=isLimited" json:"is_limited,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Response_Device{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{1, 0}
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsPending() bool {
	if m != nil && m.IsPending != nil {
		return *m.IsPending
	}
	return false
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsCanceled() bool {
	if m != nil && m.IsCanceled != nil {
		return *m.IsCanceled
	}
	return false
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastTimeUsed() uint32 {
	if m != nil && m.LastTimeUsed != nil {
		return *m.LastTimeUsed
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastBorrowerId() uint64 {
	if m != nil && m.LastBorrowerId != nil {
		return *m.LastBorrowerId
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastAppPlayed() uint32 {
	if m != nil && m.LastAppPlayed != nil {
		return *m.LastAppPlayed
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsLimited() bool {
	if m != nil && m.IsLimited != nil {
		return *m.IsLimited
	}
	return false
}

type CDeviceAuth_AcceptAuthorizationRequest_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken  *uint64 `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	AuthCode         *uint64 `protobuf:"fixed64,3,opt,name=auth_code,json=authCode" json:"auth_code,omitempty"`
	FromSteamid      *uint64 `protobuf:"fixed64,4,opt,name=from_steamid,json=fromSteamid" json:"from_steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) Reset() {
	*m = CDeviceAuth_AcceptAuthorizationRequest_Request{}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AcceptAuthorizationRequest_Request) ProtoMessage() {}
func (*CDeviceAuth_AcceptAuthorizationRequest_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{2}
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetAuthCode() uint64 {
	if m != nil && m.AuthCode != nil {
		return *m.AuthCode
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetFromSteamid() uint64 {
	if m != nil && m.FromSteamid != nil {
		return *m.FromSteamid
	}
	return 0
}

type CDeviceAuth_AcceptAuthorizationRequest_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) Reset() {
	*m = CDeviceAuth_AcceptAuthorizationRequest_Response{}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AcceptAuthorizationRequest_Response) ProtoMessage() {}
func (*CDeviceAuth_AcceptAuthorizationRequest_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{3}
}

type CDeviceAuth_AuthorizeRemoteDevice_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken  *uint64 `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) Reset() {
	*m = CDeviceAuth_AuthorizeRemoteDevice_Request{}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) String() string { return proto.CompactTextString(m) }
func (*CDeviceAuth_AuthorizeRemoteDevice_Request) ProtoMessage()    {}
func (*CDeviceAuth_AuthorizeRemoteDevice_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{4}
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

type CDeviceAuth_AuthorizeRemoteDevice_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) Reset() {
	*m = CDeviceAuth_AuthorizeRemoteDevice_Response{}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AuthorizeRemoteDevice_Response) ProtoMessage() {}
func (*CDeviceAuth_AuthorizeRemoteDevice_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{5}
}

type CDeviceAuth_DeauthorizeRemoteDevice_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken  *uint64 `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) Reset() {
	*m = CDeviceAuth_DeauthorizeRemoteDevice_Request{}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Request) ProtoMessage() {}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{6}
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

type CDeviceAuth_DeauthorizeRemoteDevice_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) Reset() {
	*m = CDeviceAuth_DeauthorizeRemoteDevice_Response{}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Response) ProtoMessage() {}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{7}
}

type CDeviceAuth_GetUsedAuthorizedDevices_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Request{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Request) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{8}
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CDeviceAuth_GetUsedAuthorizedDevices_Response struct {
	Devices          []*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Response{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{9}
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) GetDevices() []*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type CDeviceAuth_GetUsedAuthorizedDevices_Response_Device struct {
	AuthDeviceToken  *uint64 `protobuf:"fixed64,1,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	DeviceName       *string `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	OwnerSteamid     *uint64 `protobuf:"fixed64,3,opt,name=owner_steamid,json=ownerSteamid" json:"owner_steamid,omitempty"`
	LastTimeUsed     *uint32 `protobuf:"varint,4,opt,name=last_time_used,json=lastTimeUsed" json:"last_time_used,omitempty"`
	LastAppPlayed    *uint32 `protobuf:"varint,5,opt,name=last_app_played,json=lastAppPlayed" json:"last_app_played,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Response_Device{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{9, 0}
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetOwnerSteamid() uint64 {
	if m != nil && m.OwnerSteamid != nil {
		return *m.OwnerSteamid
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetLastTimeUsed() uint32 {
	if m != nil && m.LastTimeUsed != nil {
		return *m.LastTimeUsed
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetLastAppPlayed() uint32 {
	if m != nil && m.LastAppPlayed != nil {
		return *m.LastAppPlayed
	}
	return 0
}

type CDeviceAuth_GetAuthorizedBorrowers_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeCanceled  *bool   `protobuf:"varint,2,opt,name=include_canceled,json=includeCanceled" json:"include_canceled,omitempty"`
	IncludePending   *bool   `protobuf:"varint,3,opt,name=include_pending,json=includePending" json:"include_pending,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{10}
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetIncludeCanceled() bool {
	if m != nil && m.IncludeCanceled != nil {
		return *m.IncludeCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetIncludePending() bool {
	if m != nil && m.IncludePending != nil {
		return *m.IncludePending
	}
	return false
}

type CDeviceAuth_GetAuthorizedBorrowers_Response struct {
	Borrowers        []*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower `protobuf:"bytes,1,rep,name=borrowers" json:"borrowers,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{11}
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) GetBorrowers() []*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower {
	if m != nil {
		return m.Borrowers
	}
	return nil
}

type CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IsPending        *bool   `protobuf:"varint,2,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	IsCanceled       *bool   `protobuf:"varint,3,opt,name=is_canceled,json=isCanceled" json:"is_canceled,omitempty"`
	TimeCreated      *uint32 `protobuf:"varint,4,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{11, 0}
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetIsPending() bool {
	if m != nil && m.IsPending != nil {
		return *m.IsPending
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetIsCanceled() bool {
	if m != nil && m.IsCanceled != nil {
		return *m.IsCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

type CDeviceAuth_AddAuthorizedBorrowers_Request struct {
	Steamid          *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	SteamidBorrower  []uint64 `protobuf:"fixed64,2,rep,name=steamid_borrower,json=steamidBorrower" json:"steamid_borrower,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_AddAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AddAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_AddAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{12}
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) GetSteamidBorrower() []uint64 {
	if m != nil {
		return m.SteamidBorrower
	}
	return nil
}

type CDeviceAuth_AddAuthorizedBorrowers_Response struct {
	SecondsToWait    *int32 `protobuf:"varint,1,opt,name=seconds_to_wait,json=secondsToWait" json:"seconds_to_wait,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_AddAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AddAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_AddAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{13}
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) GetSecondsToWait() int32 {
	if m != nil && m.SecondsToWait != nil {
		return *m.SecondsToWait
	}
	return 0
}

type CDeviceAuth_RemoveAuthorizedBorrowers_Request struct {
	Steamid          *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	SteamidBorrower  []uint64 `protobuf:"fixed64,2,rep,name=steamid_borrower,json=steamidBorrower" json:"steamid_borrower,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_RemoveAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{14}
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) GetSteamidBorrower() []uint64 {
	if m != nil {
		return m.SteamidBorrower
	}
	return nil
}

type CDeviceAuth_RemoveAuthorizedBorrowers_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_RemoveAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return deviceauth_fileDescriptor0, []int{15}
}

func init() {
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Request)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Request")
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Response)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Response")
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Response.Device")
	proto.RegisterType((*CDeviceAuth_AcceptAuthorizationRequest_Request)(nil), "CDeviceAuth_AcceptAuthorizationRequest_Request")
	proto.RegisterType((*CDeviceAuth_AcceptAuthorizationRequest_Response)(nil), "CDeviceAuth_AcceptAuthorizationRequest_Response")
	proto.RegisterType((*CDeviceAuth_AuthorizeRemoteDevice_Request)(nil), "CDeviceAuth_AuthorizeRemoteDevice_Request")
	proto.RegisterType((*CDeviceAuth_AuthorizeRemoteDevice_Response)(nil), "CDeviceAuth_AuthorizeRemoteDevice_Response")
	proto.RegisterType((*CDeviceAuth_DeauthorizeRemoteDevice_Request)(nil), "CDeviceAuth_DeauthorizeRemoteDevice_Request")
	proto.RegisterType((*CDeviceAuth_DeauthorizeRemoteDevice_Response)(nil), "CDeviceAuth_DeauthorizeRemoteDevice_Response")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Request)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Request")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Response)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Response")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Response.Device")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Request)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Response)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Response")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower")
	proto.RegisterType((*CDeviceAuth_AddAuthorizedBorrowers_Request)(nil), "CDeviceAuth_AddAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_AddAuthorizedBorrowers_Response)(nil), "CDeviceAuth_AddAuthorizedBorrowers_Response")
	proto.RegisterType((*CDeviceAuth_RemoveAuthorizedBorrowers_Request)(nil), "CDeviceAuth_RemoveAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_RemoveAuthorizedBorrowers_Response)(nil), "CDeviceAuth_RemoveAuthorizedBorrowers_Response")
}

func init() { proto.RegisterFile("steammessages_deviceauth.steamclient.proto", deviceauth_fileDescriptor0) }

var deviceauth_fileDescriptor0 = []byte{
	// 1053 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0x96, 0x77, 0xf3, 0x3b, 0x9b, 0x34, 0x65, 0x24, 0x60, 0x31, 0x82, 0x0e, 0x6e, 0x05, 0x69,
	0xb2, 0x71, 0x42, 0x15, 0xc4, 0x3f, 0x22, 0x4d, 0x25, 0x40, 0xaa, 0xda, 0xca, 0x49, 0xc5, 0xa5,
	0x35, 0xb1, 0x27, 0xd9, 0x11, 0xbb, 0xb6, 0xeb, 0x99, 0x4d, 0x14, 0xae, 0x10, 0x37, 0xdc, 0xf0,
	0x04, 0xf0, 0x06, 0x08, 0x24, 0x84, 0x54, 0xb8, 0x80, 0x07, 0x40, 0xe2, 0xa5, 0x38, 0x9e, 0x19,
	0x6f, 0xea, 0x5d, 0x7b, 0x77, 0x1d, 0x25, 0x57, 0xd9, 0x7c, 0xf3, 0xcd, 0x99, 0x6f, 0xce, 0x9c,
	0xf3, 0x1d, 0xa3, 0x0d, 0x21, 0x19, 0xed, 0xf7, 0x99, 0x10, 0xf4, 0x84, 0x09, 0x3f, 0x64, 0xa7,
	0x3c, 0x60, 0x74, 0x20, 0xbb, 0xae, 0x5a, 0x08, 0x7a, 0x9c, 0x45, 0xd2, 0x4d, 0xd2, 0x58, 0xc6,
	0x76, 0xa7, 0xc8, 0x1d, 0x44, 0xfc, 0x98, 0xb3, 0xd0, 0x3f, 0xa2, 0x82, 0x8d, 0xb3, 0x9d, 0x14,
	0x6d, 0xee, 0x3f, 0x50, 0xe1, 0xf6, 0x20, 0x9c, 0xff, 0x05, 0x93, 0x8f, 0xcf, 0xa2, 0xec, 0x67,
	0x9c, 0xf2, 0x6f, 0x59, 0xa8, 0x97, 0x84, 0xef, 0xb1, 0x67, 0x03, 0x26, 0x24, 0x6e, 0xa3, 0x45,
	0x15, 0x83, 0x87, 0x6d, 0x8b, 0x58, 0xeb, 0x0b, 0x5e, 0xfe, 0x2f, 0xbe, 0x8b, 0x6e, 0xf2, 0x28,
	0xe8, 0x0d, 0x42, 0xe6, 0x07, 0x34, 0x0a, 0x58, 0x8f, 0x85, 0xed, 0x06, 0x50, 0x96, 0xbc, 0x35,
	0x83, 0xef, 0x1b, 0xd8, 0xf9, 0xad, 0x89, 0x3a, 0xb3, 0x1d, 0x2a, 0x92, 0x38, 0x12, 0x0c, 0x3f,
	0x42, 0x8b, 0xfa, 0xca, 0x02, 0x4e, 0x6d, 0xae, 0xb7, 0xee, 0xed, 0xba, 0x75, 0xf6, 0xbb, 0x1a,
	0xf0, 0xf2, 0x20, 0xf6, 0xaf, 0x0d, 0xb4, 0xa0, 0x31, 0xbc, 0x81, 0x5e, 0xca, 0xf2, 0x68, 0x52,
	0xea, 0xcb, 0xf8, 0x1b, 0x16, 0x99, 0xab, 0xad, 0x65, 0x0b, 0x9a, 0x76, 0x98, 0xc1, 0xf8, 0x16,
	0x6a, 0x19, 0x5a, 0x44, 0xfb, 0x4c, 0xdd, 0x6e, 0xd9, 0x43, 0x1a, 0x7a, 0x04, 0x08, 0x7e, 0x03,
	0x21, 0x2e, 0xfc, 0x84, 0x45, 0x21, 0x8f, 0x4e, 0xda, 0x4d, 0x75, 0xfb, 0x65, 0x2e, 0x9e, 0x68,
	0x20, 0xdb, 0x0f, 0xcb, 0xc3, 0xec, 0xcc, 0xa9, 0x75, 0xd8, 0x91, 0x27, 0x06, 0xdf, 0x41, 0x37,
	0x7a, 0x54, 0x48, 0x5f, 0xf2, 0x3e, 0xf3, 0x07, 0x02, 0x38, 0xf3, 0xc0, 0x59, 0xf5, 0x56, 0x32,
	0xf4, 0x10, 0xc0, 0xa7, 0x80, 0xe1, 0x75, 0x74, 0x53, 0xb1, 0x8e, 0xe2, 0x34, 0x8d, 0xcf, 0x58,
	0xea, 0xc3, 0x63, 0x2c, 0x28, 0xc5, 0x6a, 0xf7, 0x7d, 0x03, 0x7f, 0x15, 0xe2, 0xb7, 0xd1, 0x9a,
	0x62, 0xd2, 0x24, 0xf1, 0x93, 0x1e, 0x3d, 0x87, 0x80, 0x8b, 0x2a, 0xe0, 0x6a, 0x06, 0xef, 0x25,
	0xc9, 0x13, 0x05, 0x1a, 0xdd, 0x3d, 0xde, 0xe7, 0x12, 0x28, 0x4b, 0xb9, 0xee, 0x87, 0x1a, 0x70,
	0xfe, 0xb4, 0x50, 0x21, 0xdf, 0x7b, 0x41, 0xc0, 0x12, 0x99, 0xe7, 0x9b, 0x4a, 0x1e, 0x47, 0xa6,
	0x3e, 0x66, 0xa8, 0x93, 0xd2, 0x84, 0x37, 0xca, 0x13, 0xfe, 0x3a, 0x5a, 0x56, 0xdc, 0x20, 0x0e,
	0x99, 0x4a, 0xe7, 0x82, 0xb7, 0x94, 0x01, 0xfb, 0xf0, 0x3f, 0x7e, 0x0b, 0xad, 0x1c, 0xa7, 0x71,
	0xdf, 0xcf, 0xcf, 0x99, 0x53, 0xeb, 0xad, 0x0c, 0x3b, 0xd0, 0x90, 0xf3, 0x2e, 0xda, 0x9e, 0x59,
	0xb7, 0x2e, 0x15, 0xe7, 0x19, 0xba, 0x5b, 0xd8, 0x92, 0x17, 0x95, 0xc7, 0xfa, 0xb1, 0x64, 0x7a,
	0xe5, 0x6a, 0x6f, 0xe9, 0x74, 0xd0, 0xc6, 0x2c, 0x47, 0x1a, 0x81, 0xa2, 0xd8, 0xb0, 0x0f, 0x94,
	0x0d, 0x5c, 0xb7, 0x44, 0xb7, 0xd8, 0xb0, 0xd5, 0x87, 0x1a, 0x91, 0x5f, 0x8e, 0x35, 0x78, 0x56,
	0xb9, 0x97, 0xb0, 0x15, 0xe7, 0xbf, 0x06, 0xda, 0x9a, 0x31, 0x94, 0x31, 0x8b, 0xc7, 0xa3, 0x66,
	0xf1, 0x9e, 0x5b, 0x2b, 0xc0, 0x98, 0x5b, 0xfc, 0x6b, 0x5d, 0x8f, 0x5b, 0xdc, 0x46, 0xab, 0xf1,
	0x59, 0x04, 0xfd, 0x9b, 0x5f, 0x5d, 0x57, 0xf8, 0x8a, 0x02, 0x4d, 0x09, 0x97, 0x58, 0xc2, 0x5c,
	0x89, 0x25, 0x94, 0x34, 0xfa, 0x7c, 0x49, 0xa3, 0x3b, 0x3f, 0x59, 0xc5, 0x5a, 0x83, 0x64, 0x5c,
	0x24, 0x22, 0x37, 0x8e, 0xab, 0x75, 0x7b, 0xfc, 0x0e, 0xca, 0xa1, 0x11, 0x67, 0xbc, 0x61, 0x60,
	0x63, 0x8f, 0xce, 0x8f, 0x8d, 0xb1, 0x59, 0x54, 0x2e, 0xce, 0x3c, 0xf4, 0x01, 0x5a, 0xce, 0x2d,
	0xb0, 0xf2, 0xa9, 0x27, 0x05, 0x70, 0x73, 0xc8, 0xbb, 0x88, 0x63, 0xff, 0x60, 0xa1, 0xa5, 0x1c,
	0x9f, 0x70, 0xff, 0xa2, 0xd3, 0x37, 0xa6, 0x38, 0x7d, 0x73, 0xcc, 0xe9, 0xc1, 0xbc, 0xd4, 0x8b,
	0x06, 0x29, 0xa3, 0x72, 0xf8, 0xa8, 0xad, 0x0c, 0xdb, 0xd7, 0x10, 0x38, 0x51, 0xd1, 0x16, 0xc2,
	0xf0, 0xd2, 0x4f, 0x65, 0x7e, 0x0e, 0x27, 0x06, 0x08, 0x6e, 0x66, 0x25, 0x6b, 0xf0, 0x3c, 0x9a,
	0xf3, 0xb4, 0xf8, 0x00, 0x95, 0x47, 0x9a, 0x07, 0x80, 0xaa, 0x13, 0x2c, 0x88, 0xa3, 0x50, 0x40,
	0x27, 0xf8, 0x67, 0x94, 0x4b, 0x75, 0xf6, 0xbc, 0xb7, 0x6a, 0xe0, 0xc3, 0xf8, 0x6b, 0x00, 0x1d,
	0x59, 0x6c, 0xe1, 0xcc, 0x32, 0x4e, 0xd9, 0xb5, 0x5f, 0x66, 0xa7, 0x38, 0xb4, 0x26, 0x9d, 0xaa,
	0xef, 0x73, 0xef, 0xaf, 0x16, 0x42, 0x17, 0x3b, 0x30, 0x34, 0xcb, 0xab, 0x15, 0x9f, 0x16, 0xb8,
	0xe3, 0xd6, 0xf8, 0x6a, 0xb2, 0xb7, 0x6a, 0x7d, 0xae, 0x38, 0xce, 0xf7, 0xcf, 0xdb, 0x6f, 0x02,
	0x8b, 0xf4, 0xb8, 0x90, 0x24, 0x3e, 0x26, 0x43, 0xb7, 0x0d, 0x89, 0x31, 0x25, 0xfc, 0xdc, 0x42,
	0x76, 0xf5, 0x3c, 0xc3, 0xdb, 0x35, 0x07, 0xb6, 0xbd, 0xe3, 0xd6, 0x9d, 0x94, 0xbb, 0xa0, 0x72,
	0x47, 0x13, 0x09, 0x8d, 0x86, 0x1a, 0x15, 0x99, 0xa4, 0x9a, 0x4d, 0x8e, 0xce, 0x61, 0x2d, 0x96,
	0x5d, 0x96, 0x12, 0x30, 0xaf, 0x54, 0xe0, 0x5f, 0x2c, 0xf4, 0x72, 0xe9, 0x84, 0xc3, 0x1b, 0xee,
	0xcc, 0x83, 0xd7, 0xde, 0x74, 0x6b, 0x4c, 0xcc, 0x0f, 0x40, 0xe8, 0xee, 0x90, 0x43, 0xc0, 0x5e,
	0x41, 0x5e, 0x46, 0x34, 0xc9, 0x24, 0xb2, 0x4b, 0x25, 0xe9, 0x52, 0x41, 0x4c, 0x3f, 0xe7, 0xea,
	0xf1, 0xcf, 0x50, 0x01, 0x15, 0xb3, 0x6e, 0xa4, 0x02, 0xa6, 0x8c, 0xe1, 0x91, 0x0a, 0x98, 0x3a,
	0x3f, 0x6f, 0x83, 0xe4, 0x5b, 0x1e, 0x3b, 0x85, 0x41, 0xa2, 0xf4, 0x1a, 0xa1, 0x85, 0x1c, 0xe3,
	0xbf, 0x2d, 0xd4, 0xae, 0x9a, 0x66, 0x78, 0xcb, 0xad, 0x33, 0x80, 0x6d, 0xb7, 0xde, 0x8c, 0x74,
	0x3e, 0x07, 0x81, 0x9f, 0x4c, 0x2e, 0x51, 0xf5, 0xe0, 0x44, 0x4f, 0x23, 0x62, 0x9a, 0x35, 0x24,
	0x27, 0x30, 0xf9, 0x04, 0x01, 0xf5, 0x7f, 0x58, 0xe8, 0x95, 0x72, 0x83, 0xc6, 0x9b, 0xee, 0xec,
	0x33, 0xca, 0xee, 0xd4, 0xb1, 0x7c, 0xe7, 0x53, 0xd0, 0xfd, 0xe1, 0x8b, 0xba, 0x55, 0x55, 0xea,
	0x0a, 0x00, 0xbb, 0x36, 0x3a, 0x41, 0xdf, 0x8b, 0x25, 0x3d, 0xbc, 0x13, 0xfe, 0x1d, 0x44, 0x97,
	0xbb, 0xe2, 0x88, 0xe8, 0xc9, 0x6e, 0x3d, 0x22, 0x7a, 0x8a, 0xcf, 0x3a, 0x1f, 0x83, 0xe8, 0xf7,
	0x81, 0x54, 0x2d, 0xd6, 0x7c, 0xba, 0x97, 0x19, 0xc5, 0x3f, 0x16, 0x7a, 0xad, 0xd2, 0xfb, 0xb0,
	0xeb, 0xd6, 0x72, 0x66, 0x7b, 0xbb, 0xa6, 0xa7, 0x3a, 0x9f, 0x81, 0xf6, 0x8f, 0x34, 0xef, 0x32,
	0xf2, 0xed, 0x3b, 0xb0, 0x9f, 0x3c, 0xe4, 0x47, 0x29, 0x4d, 0xcf, 0xc9, 0x41, 0x97, 0xa6, 0x59,
	0x7f, 0x0a, 0x26, 0x25, 0xfc, 0x15, 0xf0, 0x23, 0xcd, 0x68, 0xf7, 0x9b, 0xdf, 0x59, 0xd6, 0xff,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xda, 0xec, 0x25, 0x8c, 0x25, 0x0f, 0x00, 0x00,
}
