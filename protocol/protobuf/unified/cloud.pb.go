// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_cloud.steamclient.proto

package unified

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package unified is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package unified to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CCloud_GetUploadServerInfo_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_GetUploadServerInfo_Request) Reset()         { *m = CCloud_GetUploadServerInfo_Request{} }
func (m *CCloud_GetUploadServerInfo_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetUploadServerInfo_Request) ProtoMessage()    {}
func (*CCloud_GetUploadServerInfo_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{0}
}

func (m *CCloud_GetUploadServerInfo_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Request.Unmarshal(m, b)
}
func (m *CCloud_GetUploadServerInfo_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_GetUploadServerInfo_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetUploadServerInfo_Request.Merge(m, src)
}
func (m *CCloud_GetUploadServerInfo_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Request.Size(m)
}
func (m *CCloud_GetUploadServerInfo_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetUploadServerInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetUploadServerInfo_Request proto.InternalMessageInfo

func (m *CCloud_GetUploadServerInfo_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_GetUploadServerInfo_Response struct {
	ServerUrl            *string  `protobuf:"bytes,1,opt,name=server_url,json=serverUrl" json:"server_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_GetUploadServerInfo_Response) Reset()         { *m = CCloud_GetUploadServerInfo_Response{} }
func (m *CCloud_GetUploadServerInfo_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetUploadServerInfo_Response) ProtoMessage()    {}
func (*CCloud_GetUploadServerInfo_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{1}
}

func (m *CCloud_GetUploadServerInfo_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Response.Unmarshal(m, b)
}
func (m *CCloud_GetUploadServerInfo_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_GetUploadServerInfo_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetUploadServerInfo_Response.Merge(m, src)
}
func (m *CCloud_GetUploadServerInfo_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetUploadServerInfo_Response.Size(m)
}
func (m *CCloud_GetUploadServerInfo_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetUploadServerInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetUploadServerInfo_Response proto.InternalMessageInfo

func (m *CCloud_GetUploadServerInfo_Response) GetServerUrl() string {
	if m != nil && m.ServerUrl != nil {
		return *m.ServerUrl
	}
	return ""
}

type CCloud_BeginHTTPUpload_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	FileSize             *uint32  `protobuf:"varint,2,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	Filename             *string  `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	FileSha              *string  `protobuf:"bytes,4,opt,name=file_sha,json=fileSha" json:"file_sha,omitempty"`
	IsPublic             *bool    `protobuf:"varint,5,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	PlatformsToSync      []string `protobuf:"bytes,6,rep,name=platforms_to_sync,json=platformsToSync" json:"platforms_to_sync,omitempty"`
	RequestHeadersNames  []string `protobuf:"bytes,7,rep,name=request_headers_names,json=requestHeadersNames" json:"request_headers_names,omitempty"`
	RequestHeadersValues []string `protobuf:"bytes,8,rep,name=request_headers_values,json=requestHeadersValues" json:"request_headers_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_BeginHTTPUpload_Request) Reset()         { *m = CCloud_BeginHTTPUpload_Request{} }
func (m *CCloud_BeginHTTPUpload_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_BeginHTTPUpload_Request) ProtoMessage()    {}
func (*CCloud_BeginHTTPUpload_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{2}
}

func (m *CCloud_BeginHTTPUpload_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Request.Unmarshal(m, b)
}
func (m *CCloud_BeginHTTPUpload_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_BeginHTTPUpload_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Request.Merge(m, src)
}
func (m *CCloud_BeginHTTPUpload_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Request.Size(m)
}
func (m *CCloud_BeginHTTPUpload_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_BeginHTTPUpload_Request proto.InternalMessageInfo

func (m *CCloud_BeginHTTPUpload_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_BeginHTTPUpload_Request) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *CCloud_BeginHTTPUpload_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_BeginHTTPUpload_Request) GetFileSha() string {
	if m != nil && m.FileSha != nil {
		return *m.FileSha
	}
	return ""
}

func (m *CCloud_BeginHTTPUpload_Request) GetIsPublic() bool {
	if m != nil && m.IsPublic != nil {
		return *m.IsPublic
	}
	return false
}

func (m *CCloud_BeginHTTPUpload_Request) GetPlatformsToSync() []string {
	if m != nil {
		return m.PlatformsToSync
	}
	return nil
}

func (m *CCloud_BeginHTTPUpload_Request) GetRequestHeadersNames() []string {
	if m != nil {
		return m.RequestHeadersNames
	}
	return nil
}

func (m *CCloud_BeginHTTPUpload_Request) GetRequestHeadersValues() []string {
	if m != nil {
		return m.RequestHeadersValues
	}
	return nil
}

type CCloud_BeginHTTPUpload_Response struct {
	Ugcid                *uint64                                        `protobuf:"fixed64,1,opt,name=ugcid" json:"ugcid,omitempty"`
	Timestamp            *uint32                                        `protobuf:"fixed32,2,opt,name=timestamp" json:"timestamp,omitempty"`
	UrlHost              *string                                        `protobuf:"bytes,3,opt,name=url_host,json=urlHost" json:"url_host,omitempty"`
	UrlPath              *string                                        `protobuf:"bytes,4,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	UseHttps             *bool                                          `protobuf:"varint,5,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	RequestHeaders       []*CCloud_BeginHTTPUpload_Response_HTTPHeaders `protobuf:"bytes,6,rep,name=request_headers,json=requestHeaders" json:"request_headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CCloud_BeginHTTPUpload_Response) Reset()         { *m = CCloud_BeginHTTPUpload_Response{} }
func (m *CCloud_BeginHTTPUpload_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_BeginHTTPUpload_Response) ProtoMessage()    {}
func (*CCloud_BeginHTTPUpload_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{3}
}

func (m *CCloud_BeginHTTPUpload_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response.Unmarshal(m, b)
}
func (m *CCloud_BeginHTTPUpload_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_BeginHTTPUpload_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Response.Merge(m, src)
}
func (m *CCloud_BeginHTTPUpload_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response.Size(m)
}
func (m *CCloud_BeginHTTPUpload_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_BeginHTTPUpload_Response proto.InternalMessageInfo

func (m *CCloud_BeginHTTPUpload_Response) GetUgcid() uint64 {
	if m != nil && m.Ugcid != nil {
		return *m.Ugcid
	}
	return 0
}

func (m *CCloud_BeginHTTPUpload_Response) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CCloud_BeginHTTPUpload_Response) GetUrlHost() string {
	if m != nil && m.UrlHost != nil {
		return *m.UrlHost
	}
	return ""
}

func (m *CCloud_BeginHTTPUpload_Response) GetUrlPath() string {
	if m != nil && m.UrlPath != nil {
		return *m.UrlPath
	}
	return ""
}

func (m *CCloud_BeginHTTPUpload_Response) GetUseHttps() bool {
	if m != nil && m.UseHttps != nil {
		return *m.UseHttps
	}
	return false
}

func (m *CCloud_BeginHTTPUpload_Response) GetRequestHeaders() []*CCloud_BeginHTTPUpload_Response_HTTPHeaders {
	if m != nil {
		return m.RequestHeaders
	}
	return nil
}

type CCloud_BeginHTTPUpload_Response_HTTPHeaders struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) Reset() {
	*m = CCloud_BeginHTTPUpload_Response_HTTPHeaders{}
}
func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) String() string {
	return proto.CompactTextString(m)
}
func (*CCloud_BeginHTTPUpload_Response_HTTPHeaders) ProtoMessage() {}
func (*CCloud_BeginHTTPUpload_Response_HTTPHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{3, 0}
}

func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders.Unmarshal(m, b)
}
func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders.Marshal(b, m, deterministic)
}
func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders.Merge(m, src)
}
func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) XXX_Size() int {
	return xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders.Size(m)
}
func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_BeginHTTPUpload_Response_HTTPHeaders proto.InternalMessageInfo

func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCloud_BeginHTTPUpload_Response_HTTPHeaders) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCloud_CommitHTTPUpload_Request struct {
	TransferSucceeded    *bool    `protobuf:"varint,1,opt,name=transfer_succeeded,json=transferSucceeded" json:"transfer_succeeded,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	FileSha              *string  `protobuf:"bytes,3,opt,name=file_sha,json=fileSha" json:"file_sha,omitempty"`
	Filename             *string  `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_CommitHTTPUpload_Request) Reset()         { *m = CCloud_CommitHTTPUpload_Request{} }
func (m *CCloud_CommitHTTPUpload_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_CommitHTTPUpload_Request) ProtoMessage()    {}
func (*CCloud_CommitHTTPUpload_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{4}
}

func (m *CCloud_CommitHTTPUpload_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Request.Unmarshal(m, b)
}
func (m *CCloud_CommitHTTPUpload_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_CommitHTTPUpload_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_CommitHTTPUpload_Request.Merge(m, src)
}
func (m *CCloud_CommitHTTPUpload_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Request.Size(m)
}
func (m *CCloud_CommitHTTPUpload_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_CommitHTTPUpload_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_CommitHTTPUpload_Request proto.InternalMessageInfo

func (m *CCloud_CommitHTTPUpload_Request) GetTransferSucceeded() bool {
	if m != nil && m.TransferSucceeded != nil {
		return *m.TransferSucceeded
	}
	return false
}

func (m *CCloud_CommitHTTPUpload_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_CommitHTTPUpload_Request) GetFileSha() string {
	if m != nil && m.FileSha != nil {
		return *m.FileSha
	}
	return ""
}

func (m *CCloud_CommitHTTPUpload_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type CCloud_CommitHTTPUpload_Response struct {
	FileCommitted        *bool    `protobuf:"varint,1,opt,name=file_committed,json=fileCommitted" json:"file_committed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_CommitHTTPUpload_Response) Reset()         { *m = CCloud_CommitHTTPUpload_Response{} }
func (m *CCloud_CommitHTTPUpload_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_CommitHTTPUpload_Response) ProtoMessage()    {}
func (*CCloud_CommitHTTPUpload_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{5}
}

func (m *CCloud_CommitHTTPUpload_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Response.Unmarshal(m, b)
}
func (m *CCloud_CommitHTTPUpload_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_CommitHTTPUpload_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_CommitHTTPUpload_Response.Merge(m, src)
}
func (m *CCloud_CommitHTTPUpload_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_CommitHTTPUpload_Response.Size(m)
}
func (m *CCloud_CommitHTTPUpload_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_CommitHTTPUpload_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_CommitHTTPUpload_Response proto.InternalMessageInfo

func (m *CCloud_CommitHTTPUpload_Response) GetFileCommitted() bool {
	if m != nil && m.FileCommitted != nil {
		return *m.FileCommitted
	}
	return false
}

type CCloud_GetFileDetails_Request struct {
	Ugcid                *uint64  `protobuf:"varint,1,opt,name=ugcid" json:"ugcid,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_GetFileDetails_Request) Reset()         { *m = CCloud_GetFileDetails_Request{} }
func (m *CCloud_GetFileDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetFileDetails_Request) ProtoMessage()    {}
func (*CCloud_GetFileDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{6}
}

func (m *CCloud_GetFileDetails_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetFileDetails_Request.Unmarshal(m, b)
}
func (m *CCloud_GetFileDetails_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetFileDetails_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_GetFileDetails_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetFileDetails_Request.Merge(m, src)
}
func (m *CCloud_GetFileDetails_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetFileDetails_Request.Size(m)
}
func (m *CCloud_GetFileDetails_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetFileDetails_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetFileDetails_Request proto.InternalMessageInfo

func (m *CCloud_GetFileDetails_Request) GetUgcid() uint64 {
	if m != nil && m.Ugcid != nil {
		return *m.Ugcid
	}
	return 0
}

func (m *CCloud_GetFileDetails_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_UserFile struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Ugcid                *uint64  `protobuf:"varint,2,opt,name=ugcid" json:"ugcid,omitempty"`
	Filename             *string  `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	Timestamp            *uint64  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	FileSize             *uint32  `protobuf:"varint,5,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	Url                  *string  `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	SteamidCreator       *uint64  `protobuf:"fixed64,7,opt,name=steamid_creator,json=steamidCreator" json:"steamid_creator,omitempty"`
	Flags                *uint32  `protobuf:"varint,8,opt,name=flags" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_UserFile) Reset()         { *m = CCloud_UserFile{} }
func (m *CCloud_UserFile) String() string { return proto.CompactTextString(m) }
func (*CCloud_UserFile) ProtoMessage()    {}
func (*CCloud_UserFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{7}
}

func (m *CCloud_UserFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_UserFile.Unmarshal(m, b)
}
func (m *CCloud_UserFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_UserFile.Marshal(b, m, deterministic)
}
func (m *CCloud_UserFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_UserFile.Merge(m, src)
}
func (m *CCloud_UserFile) XXX_Size() int {
	return xxx_messageInfo_CCloud_UserFile.Size(m)
}
func (m *CCloud_UserFile) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_UserFile.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_UserFile proto.InternalMessageInfo

func (m *CCloud_UserFile) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_UserFile) GetUgcid() uint64 {
	if m != nil && m.Ugcid != nil {
		return *m.Ugcid
	}
	return 0
}

func (m *CCloud_UserFile) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_UserFile) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CCloud_UserFile) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *CCloud_UserFile) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CCloud_UserFile) GetSteamidCreator() uint64 {
	if m != nil && m.SteamidCreator != nil {
		return *m.SteamidCreator
	}
	return 0
}

func (m *CCloud_UserFile) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type CCloud_GetFileDetails_Response struct {
	Details              *CCloud_UserFile `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CCloud_GetFileDetails_Response) Reset()         { *m = CCloud_GetFileDetails_Response{} }
func (m *CCloud_GetFileDetails_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetFileDetails_Response) ProtoMessage()    {}
func (*CCloud_GetFileDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{8}
}

func (m *CCloud_GetFileDetails_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetFileDetails_Response.Unmarshal(m, b)
}
func (m *CCloud_GetFileDetails_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetFileDetails_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_GetFileDetails_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetFileDetails_Response.Merge(m, src)
}
func (m *CCloud_GetFileDetails_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetFileDetails_Response.Size(m)
}
func (m *CCloud_GetFileDetails_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetFileDetails_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetFileDetails_Response proto.InternalMessageInfo

func (m *CCloud_GetFileDetails_Response) GetDetails() *CCloud_UserFile {
	if m != nil {
		return m.Details
	}
	return nil
}

type CCloud_EnumerateUserFiles_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ExtendedDetails      *bool    `protobuf:"varint,2,opt,name=extended_details,json=extendedDetails" json:"extended_details,omitempty"`
	Count                *uint32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	StartIndex           *uint32  `protobuf:"varint,4,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_EnumerateUserFiles_Request) Reset()         { *m = CCloud_EnumerateUserFiles_Request{} }
func (m *CCloud_EnumerateUserFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserFiles_Request) ProtoMessage()    {}
func (*CCloud_EnumerateUserFiles_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{9}
}

func (m *CCloud_EnumerateUserFiles_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Request.Unmarshal(m, b)
}
func (m *CCloud_EnumerateUserFiles_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_EnumerateUserFiles_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_EnumerateUserFiles_Request.Merge(m, src)
}
func (m *CCloud_EnumerateUserFiles_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Request.Size(m)
}
func (m *CCloud_EnumerateUserFiles_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_EnumerateUserFiles_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_EnumerateUserFiles_Request proto.InternalMessageInfo

func (m *CCloud_EnumerateUserFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_EnumerateUserFiles_Request) GetExtendedDetails() bool {
	if m != nil && m.ExtendedDetails != nil {
		return *m.ExtendedDetails
	}
	return false
}

func (m *CCloud_EnumerateUserFiles_Request) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CCloud_EnumerateUserFiles_Request) GetStartIndex() uint32 {
	if m != nil && m.StartIndex != nil {
		return *m.StartIndex
	}
	return 0
}

type CCloud_EnumerateUserFiles_Response struct {
	Files                []*CCloud_UserFile `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	TotalFiles           *uint32            `protobuf:"varint,2,opt,name=total_files,json=totalFiles" json:"total_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CCloud_EnumerateUserFiles_Response) Reset()         { *m = CCloud_EnumerateUserFiles_Response{} }
func (m *CCloud_EnumerateUserFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserFiles_Response) ProtoMessage()    {}
func (*CCloud_EnumerateUserFiles_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{10}
}

func (m *CCloud_EnumerateUserFiles_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Response.Unmarshal(m, b)
}
func (m *CCloud_EnumerateUserFiles_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_EnumerateUserFiles_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_EnumerateUserFiles_Response.Merge(m, src)
}
func (m *CCloud_EnumerateUserFiles_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_EnumerateUserFiles_Response.Size(m)
}
func (m *CCloud_EnumerateUserFiles_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_EnumerateUserFiles_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_EnumerateUserFiles_Response proto.InternalMessageInfo

func (m *CCloud_EnumerateUserFiles_Response) GetFiles() []*CCloud_UserFile {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *CCloud_EnumerateUserFiles_Response) GetTotalFiles() uint32 {
	if m != nil && m.TotalFiles != nil {
		return *m.TotalFiles
	}
	return 0
}

type CCloud_Delete_Request struct {
	Filename             *string  `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_Delete_Request) Reset()         { *m = CCloud_Delete_Request{} }
func (m *CCloud_Delete_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_Delete_Request) ProtoMessage()    {}
func (*CCloud_Delete_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{11}
}

func (m *CCloud_Delete_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_Delete_Request.Unmarshal(m, b)
}
func (m *CCloud_Delete_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_Delete_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_Delete_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_Delete_Request.Merge(m, src)
}
func (m *CCloud_Delete_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_Delete_Request.Size(m)
}
func (m *CCloud_Delete_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_Delete_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_Delete_Request proto.InternalMessageInfo

func (m *CCloud_Delete_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_Delete_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCloud_Delete_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_Delete_Response) Reset()         { *m = CCloud_Delete_Response{} }
func (m *CCloud_Delete_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_Delete_Response) ProtoMessage()    {}
func (*CCloud_Delete_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{12}
}

func (m *CCloud_Delete_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_Delete_Response.Unmarshal(m, b)
}
func (m *CCloud_Delete_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_Delete_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_Delete_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_Delete_Response.Merge(m, src)
}
func (m *CCloud_Delete_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_Delete_Response.Size(m)
}
func (m *CCloud_Delete_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_Delete_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_Delete_Response proto.InternalMessageInfo

type CCloud_GetClientEncryptionKey_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_GetClientEncryptionKey_Request) Reset()         { *m = CCloud_GetClientEncryptionKey_Request{} }
func (m *CCloud_GetClientEncryptionKey_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetClientEncryptionKey_Request) ProtoMessage()    {}
func (*CCloud_GetClientEncryptionKey_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{13}
}

func (m *CCloud_GetClientEncryptionKey_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Request.Unmarshal(m, b)
}
func (m *CCloud_GetClientEncryptionKey_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_GetClientEncryptionKey_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetClientEncryptionKey_Request.Merge(m, src)
}
func (m *CCloud_GetClientEncryptionKey_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Request.Size(m)
}
func (m *CCloud_GetClientEncryptionKey_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetClientEncryptionKey_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetClientEncryptionKey_Request proto.InternalMessageInfo

type CCloud_GetClientEncryptionKey_Response struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Crc                  *int32   `protobuf:"varint,2,opt,name=crc" json:"crc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_GetClientEncryptionKey_Response) Reset() {
	*m = CCloud_GetClientEncryptionKey_Response{}
}
func (m *CCloud_GetClientEncryptionKey_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_GetClientEncryptionKey_Response) ProtoMessage()    {}
func (*CCloud_GetClientEncryptionKey_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{14}
}

func (m *CCloud_GetClientEncryptionKey_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Response.Unmarshal(m, b)
}
func (m *CCloud_GetClientEncryptionKey_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_GetClientEncryptionKey_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_GetClientEncryptionKey_Response.Merge(m, src)
}
func (m *CCloud_GetClientEncryptionKey_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_GetClientEncryptionKey_Response.Size(m)
}
func (m *CCloud_GetClientEncryptionKey_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_GetClientEncryptionKey_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_GetClientEncryptionKey_Response proto.InternalMessageInfo

func (m *CCloud_GetClientEncryptionKey_Response) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CCloud_GetClientEncryptionKey_Response) GetCrc() int32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CCloud_CDNReport_Notification struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Url                  *string  `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Success              *bool    `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	HttpStatusCode       *uint32  `protobuf:"varint,4,opt,name=http_status_code,json=httpStatusCode" json:"http_status_code,omitempty"`
	ExpectedBytes        *uint64  `protobuf:"varint,5,opt,name=expected_bytes,json=expectedBytes" json:"expected_bytes,omitempty"`
	ReceivedBytes        *uint64  `protobuf:"varint,6,opt,name=received_bytes,json=receivedBytes" json:"received_bytes,omitempty"`
	Duration             *uint32  `protobuf:"varint,7,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_CDNReport_Notification) Reset()         { *m = CCloud_CDNReport_Notification{} }
func (m *CCloud_CDNReport_Notification) String() string { return proto.CompactTextString(m) }
func (*CCloud_CDNReport_Notification) ProtoMessage()    {}
func (*CCloud_CDNReport_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{15}
}

func (m *CCloud_CDNReport_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_CDNReport_Notification.Unmarshal(m, b)
}
func (m *CCloud_CDNReport_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_CDNReport_Notification.Marshal(b, m, deterministic)
}
func (m *CCloud_CDNReport_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_CDNReport_Notification.Merge(m, src)
}
func (m *CCloud_CDNReport_Notification) XXX_Size() int {
	return xxx_messageInfo_CCloud_CDNReport_Notification.Size(m)
}
func (m *CCloud_CDNReport_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_CDNReport_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_CDNReport_Notification proto.InternalMessageInfo

func (m *CCloud_CDNReport_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CCloud_CDNReport_Notification) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CCloud_CDNReport_Notification) GetHttpStatusCode() uint32 {
	if m != nil && m.HttpStatusCode != nil {
		return *m.HttpStatusCode
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetExpectedBytes() uint64 {
	if m != nil && m.ExpectedBytes != nil {
		return *m.ExpectedBytes
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetReceivedBytes() uint64 {
	if m != nil && m.ReceivedBytes != nil {
		return *m.ReceivedBytes
	}
	return 0
}

func (m *CCloud_CDNReport_Notification) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CCloud_ExternalStorageTransferReport_Notification struct {
	Host                 *string  `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	Path                 *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	IsUpload             *bool    `protobuf:"varint,3,opt,name=is_upload,json=isUpload" json:"is_upload,omitempty"`
	Success              *bool    `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
	HttpStatusCode       *uint32  `protobuf:"varint,5,opt,name=http_status_code,json=httpStatusCode" json:"http_status_code,omitempty"`
	BytesExpected        *uint64  `protobuf:"varint,6,opt,name=bytes_expected,json=bytesExpected" json:"bytes_expected,omitempty"`
	BytesActual          *uint64  `protobuf:"varint,7,opt,name=bytes_actual,json=bytesActual" json:"bytes_actual,omitempty"`
	DurationMs           *uint32  `protobuf:"varint,8,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	Cellid               *uint32  `protobuf:"varint,9,opt,name=cellid" json:"cellid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ExternalStorageTransferReport_Notification) Reset() {
	*m = CCloud_ExternalStorageTransferReport_Notification{}
}
func (m *CCloud_ExternalStorageTransferReport_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CCloud_ExternalStorageTransferReport_Notification) ProtoMessage() {}
func (*CCloud_ExternalStorageTransferReport_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{16}
}

func (m *CCloud_ExternalStorageTransferReport_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification.Unmarshal(m, b)
}
func (m *CCloud_ExternalStorageTransferReport_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification.Marshal(b, m, deterministic)
}
func (m *CCloud_ExternalStorageTransferReport_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification.Merge(m, src)
}
func (m *CCloud_ExternalStorageTransferReport_Notification) XXX_Size() int {
	return xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification.Size(m)
}
func (m *CCloud_ExternalStorageTransferReport_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ExternalStorageTransferReport_Notification proto.InternalMessageInfo

func (m *CCloud_ExternalStorageTransferReport_Notification) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetIsUpload() bool {
	if m != nil && m.IsUpload != nil {
		return *m.IsUpload
	}
	return false
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetHttpStatusCode() uint32 {
	if m != nil && m.HttpStatusCode != nil {
		return *m.HttpStatusCode
	}
	return 0
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetBytesExpected() uint64 {
	if m != nil && m.BytesExpected != nil {
		return *m.BytesExpected
	}
	return 0
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetBytesActual() uint64 {
	if m != nil && m.BytesActual != nil {
		return *m.BytesActual
	}
	return 0
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetDurationMs() uint32 {
	if m != nil && m.DurationMs != nil {
		return *m.DurationMs
	}
	return 0
}

func (m *CCloud_ExternalStorageTransferReport_Notification) GetCellid() uint32 {
	if m != nil && m.Cellid != nil {
		return *m.Cellid
	}
	return 0
}

type CCloud_ClientBeginFileUpload_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	FileSize             *uint32  `protobuf:"varint,2,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	RawFileSize          *uint32  `protobuf:"varint,3,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	FileSha              []byte   `protobuf:"bytes,4,opt,name=file_sha,json=fileSha" json:"file_sha,omitempty"`
	TimeStamp            *uint64  `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	Filename             *string  `protobuf:"bytes,6,opt,name=filename" json:"filename,omitempty"`
	PlatformsToSync      *uint32  `protobuf:"varint,7,opt,name=platforms_to_sync,json=platformsToSync,def=4294967295" json:"platforms_to_sync,omitempty"`
	CellId               *uint32  `protobuf:"varint,9,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	CanEncrypt           *bool    `protobuf:"varint,10,opt,name=can_encrypt,json=canEncrypt" json:"can_encrypt,omitempty"`
	IsSharedFile         *bool    `protobuf:"varint,11,opt,name=is_shared_file,json=isSharedFile" json:"is_shared_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientBeginFileUpload_Request) Reset()         { *m = CCloud_ClientBeginFileUpload_Request{} }
func (m *CCloud_ClientBeginFileUpload_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientBeginFileUpload_Request) ProtoMessage()    {}
func (*CCloud_ClientBeginFileUpload_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{17}
}

func (m *CCloud_ClientBeginFileUpload_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Request.Unmarshal(m, b)
}
func (m *CCloud_ClientBeginFileUpload_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientBeginFileUpload_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientBeginFileUpload_Request.Merge(m, src)
}
func (m *CCloud_ClientBeginFileUpload_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Request.Size(m)
}
func (m *CCloud_ClientBeginFileUpload_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientBeginFileUpload_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientBeginFileUpload_Request proto.InternalMessageInfo

const Default_CCloud_ClientBeginFileUpload_Request_PlatformsToSync uint32 = 4294967295

func (m *CCloud_ClientBeginFileUpload_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientBeginFileUpload_Request) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *CCloud_ClientBeginFileUpload_Request) GetRawFileSize() uint32 {
	if m != nil && m.RawFileSize != nil {
		return *m.RawFileSize
	}
	return 0
}

func (m *CCloud_ClientBeginFileUpload_Request) GetFileSha() []byte {
	if m != nil {
		return m.FileSha
	}
	return nil
}

func (m *CCloud_ClientBeginFileUpload_Request) GetTimeStamp() uint64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *CCloud_ClientBeginFileUpload_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_ClientBeginFileUpload_Request) GetPlatformsToSync() uint32 {
	if m != nil && m.PlatformsToSync != nil {
		return *m.PlatformsToSync
	}
	return Default_CCloud_ClientBeginFileUpload_Request_PlatformsToSync
}

func (m *CCloud_ClientBeginFileUpload_Request) GetCellId() uint32 {
	if m != nil && m.CellId != nil {
		return *m.CellId
	}
	return 0
}

func (m *CCloud_ClientBeginFileUpload_Request) GetCanEncrypt() bool {
	if m != nil && m.CanEncrypt != nil {
		return *m.CanEncrypt
	}
	return false
}

func (m *CCloud_ClientBeginFileUpload_Request) GetIsSharedFile() bool {
	if m != nil && m.IsSharedFile != nil {
		return *m.IsSharedFile
	}
	return false
}

type ClientCloudFileUploadBlockDetails struct {
	UrlHost              *string                                          `protobuf:"bytes,1,opt,name=url_host,json=urlHost" json:"url_host,omitempty"`
	UrlPath              *string                                          `protobuf:"bytes,2,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	UseHttps             *bool                                            `protobuf:"varint,3,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	HttpMethod           *int32                                           `protobuf:"varint,4,opt,name=http_method,json=httpMethod" json:"http_method,omitempty"`
	RequestHeaders       []*ClientCloudFileUploadBlockDetails_HTTPHeaders `protobuf:"bytes,5,rep,name=request_headers,json=requestHeaders" json:"request_headers,omitempty"`
	BlockOffset          *uint64                                          `protobuf:"varint,6,opt,name=block_offset,json=blockOffset" json:"block_offset,omitempty"`
	BlockLength          *uint32                                          `protobuf:"varint,7,opt,name=block_length,json=blockLength" json:"block_length,omitempty"`
	ExplicitBodyData     []byte                                           `protobuf:"bytes,8,opt,name=explicit_body_data,json=explicitBodyData" json:"explicit_body_data,omitempty"`
	MayParallelize       *bool                                            `protobuf:"varint,9,opt,name=may_parallelize,json=mayParallelize" json:"may_parallelize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *ClientCloudFileUploadBlockDetails) Reset()         { *m = ClientCloudFileUploadBlockDetails{} }
func (m *ClientCloudFileUploadBlockDetails) String() string { return proto.CompactTextString(m) }
func (*ClientCloudFileUploadBlockDetails) ProtoMessage()    {}
func (*ClientCloudFileUploadBlockDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{18}
}

func (m *ClientCloudFileUploadBlockDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails.Unmarshal(m, b)
}
func (m *ClientCloudFileUploadBlockDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails.Marshal(b, m, deterministic)
}
func (m *ClientCloudFileUploadBlockDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCloudFileUploadBlockDetails.Merge(m, src)
}
func (m *ClientCloudFileUploadBlockDetails) XXX_Size() int {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails.Size(m)
}
func (m *ClientCloudFileUploadBlockDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCloudFileUploadBlockDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCloudFileUploadBlockDetails proto.InternalMessageInfo

func (m *ClientCloudFileUploadBlockDetails) GetUrlHost() string {
	if m != nil && m.UrlHost != nil {
		return *m.UrlHost
	}
	return ""
}

func (m *ClientCloudFileUploadBlockDetails) GetUrlPath() string {
	if m != nil && m.UrlPath != nil {
		return *m.UrlPath
	}
	return ""
}

func (m *ClientCloudFileUploadBlockDetails) GetUseHttps() bool {
	if m != nil && m.UseHttps != nil {
		return *m.UseHttps
	}
	return false
}

func (m *ClientCloudFileUploadBlockDetails) GetHttpMethod() int32 {
	if m != nil && m.HttpMethod != nil {
		return *m.HttpMethod
	}
	return 0
}

func (m *ClientCloudFileUploadBlockDetails) GetRequestHeaders() []*ClientCloudFileUploadBlockDetails_HTTPHeaders {
	if m != nil {
		return m.RequestHeaders
	}
	return nil
}

func (m *ClientCloudFileUploadBlockDetails) GetBlockOffset() uint64 {
	if m != nil && m.BlockOffset != nil {
		return *m.BlockOffset
	}
	return 0
}

func (m *ClientCloudFileUploadBlockDetails) GetBlockLength() uint32 {
	if m != nil && m.BlockLength != nil {
		return *m.BlockLength
	}
	return 0
}

func (m *ClientCloudFileUploadBlockDetails) GetExplicitBodyData() []byte {
	if m != nil {
		return m.ExplicitBodyData
	}
	return nil
}

func (m *ClientCloudFileUploadBlockDetails) GetMayParallelize() bool {
	if m != nil && m.MayParallelize != nil {
		return *m.MayParallelize
	}
	return false
}

type ClientCloudFileUploadBlockDetails_HTTPHeaders struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) Reset() {
	*m = ClientCloudFileUploadBlockDetails_HTTPHeaders{}
}
func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) String() string {
	return proto.CompactTextString(m)
}
func (*ClientCloudFileUploadBlockDetails_HTTPHeaders) ProtoMessage() {}
func (*ClientCloudFileUploadBlockDetails_HTTPHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{18, 0}
}

func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders.Unmarshal(m, b)
}
func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders.Marshal(b, m, deterministic)
}
func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders.Merge(m, src)
}
func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) XXX_Size() int {
	return xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders.Size(m)
}
func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCloudFileUploadBlockDetails_HTTPHeaders proto.InternalMessageInfo

func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ClientCloudFileUploadBlockDetails_HTTPHeaders) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCloud_ClientBeginFileUpload_Response struct {
	EncryptFile          *bool                                `protobuf:"varint,1,opt,name=encrypt_file,json=encryptFile" json:"encrypt_file,omitempty"`
	BlockRequests        []*ClientCloudFileUploadBlockDetails `protobuf:"bytes,2,rep,name=block_requests,json=blockRequests" json:"block_requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CCloud_ClientBeginFileUpload_Response) Reset()         { *m = CCloud_ClientBeginFileUpload_Response{} }
func (m *CCloud_ClientBeginFileUpload_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientBeginFileUpload_Response) ProtoMessage()    {}
func (*CCloud_ClientBeginFileUpload_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{19}
}

func (m *CCloud_ClientBeginFileUpload_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Response.Unmarshal(m, b)
}
func (m *CCloud_ClientBeginFileUpload_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientBeginFileUpload_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientBeginFileUpload_Response.Merge(m, src)
}
func (m *CCloud_ClientBeginFileUpload_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientBeginFileUpload_Response.Size(m)
}
func (m *CCloud_ClientBeginFileUpload_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientBeginFileUpload_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientBeginFileUpload_Response proto.InternalMessageInfo

func (m *CCloud_ClientBeginFileUpload_Response) GetEncryptFile() bool {
	if m != nil && m.EncryptFile != nil {
		return *m.EncryptFile
	}
	return false
}

func (m *CCloud_ClientBeginFileUpload_Response) GetBlockRequests() []*ClientCloudFileUploadBlockDetails {
	if m != nil {
		return m.BlockRequests
	}
	return nil
}

type CCloud_ClientCommitFileUpload_Request struct {
	TransferSucceeded    *bool    `protobuf:"varint,1,opt,name=transfer_succeeded,json=transferSucceeded" json:"transfer_succeeded,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	FileSha              []byte   `protobuf:"bytes,3,opt,name=file_sha,json=fileSha" json:"file_sha,omitempty"`
	Filename             *string  `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientCommitFileUpload_Request) Reset()         { *m = CCloud_ClientCommitFileUpload_Request{} }
func (m *CCloud_ClientCommitFileUpload_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientCommitFileUpload_Request) ProtoMessage()    {}
func (*CCloud_ClientCommitFileUpload_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{20}
}

func (m *CCloud_ClientCommitFileUpload_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Request.Unmarshal(m, b)
}
func (m *CCloud_ClientCommitFileUpload_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientCommitFileUpload_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientCommitFileUpload_Request.Merge(m, src)
}
func (m *CCloud_ClientCommitFileUpload_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Request.Size(m)
}
func (m *CCloud_ClientCommitFileUpload_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientCommitFileUpload_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientCommitFileUpload_Request proto.InternalMessageInfo

func (m *CCloud_ClientCommitFileUpload_Request) GetTransferSucceeded() bool {
	if m != nil && m.TransferSucceeded != nil {
		return *m.TransferSucceeded
	}
	return false
}

func (m *CCloud_ClientCommitFileUpload_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientCommitFileUpload_Request) GetFileSha() []byte {
	if m != nil {
		return m.FileSha
	}
	return nil
}

func (m *CCloud_ClientCommitFileUpload_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type CCloud_ClientCommitFileUpload_Response struct {
	FileCommitted        *bool    `protobuf:"varint,1,opt,name=file_committed,json=fileCommitted" json:"file_committed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientCommitFileUpload_Response) Reset() {
	*m = CCloud_ClientCommitFileUpload_Response{}
}
func (m *CCloud_ClientCommitFileUpload_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientCommitFileUpload_Response) ProtoMessage()    {}
func (*CCloud_ClientCommitFileUpload_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{21}
}

func (m *CCloud_ClientCommitFileUpload_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Response.Unmarshal(m, b)
}
func (m *CCloud_ClientCommitFileUpload_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientCommitFileUpload_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientCommitFileUpload_Response.Merge(m, src)
}
func (m *CCloud_ClientCommitFileUpload_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientCommitFileUpload_Response.Size(m)
}
func (m *CCloud_ClientCommitFileUpload_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientCommitFileUpload_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientCommitFileUpload_Response proto.InternalMessageInfo

func (m *CCloud_ClientCommitFileUpload_Response) GetFileCommitted() bool {
	if m != nil && m.FileCommitted != nil {
		return *m.FileCommitted
	}
	return false
}

type CCloud_ClientFileDownload_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Filename             *string  `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientFileDownload_Request) Reset()         { *m = CCloud_ClientFileDownload_Request{} }
func (m *CCloud_ClientFileDownload_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientFileDownload_Request) ProtoMessage()    {}
func (*CCloud_ClientFileDownload_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{22}
}

func (m *CCloud_ClientFileDownload_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientFileDownload_Request.Unmarshal(m, b)
}
func (m *CCloud_ClientFileDownload_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientFileDownload_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientFileDownload_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientFileDownload_Request.Merge(m, src)
}
func (m *CCloud_ClientFileDownload_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientFileDownload_Request.Size(m)
}
func (m *CCloud_ClientFileDownload_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientFileDownload_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientFileDownload_Request proto.InternalMessageInfo

func (m *CCloud_ClientFileDownload_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientFileDownload_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type CCloud_ClientFileDownload_Response struct {
	Appid                *uint32                                           `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	FileSize             *uint32                                           `protobuf:"varint,2,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	RawFileSize          *uint32                                           `protobuf:"varint,3,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	ShaFile              []byte                                            `protobuf:"bytes,4,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	TimeStamp            *uint64                                           `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	IsExplicitDelete     *bool                                             `protobuf:"varint,6,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
	UrlHost              *string                                           `protobuf:"bytes,7,opt,name=url_host,json=urlHost" json:"url_host,omitempty"`
	UrlPath              *string                                           `protobuf:"bytes,8,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	UseHttps             *bool                                             `protobuf:"varint,9,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	RequestHeaders       []*CCloud_ClientFileDownload_Response_HTTPHeaders `protobuf:"bytes,10,rep,name=request_headers,json=requestHeaders" json:"request_headers,omitempty"`
	Encrypted            *bool                                             `protobuf:"varint,11,opt,name=encrypted" json:"encrypted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CCloud_ClientFileDownload_Response) Reset()         { *m = CCloud_ClientFileDownload_Response{} }
func (m *CCloud_ClientFileDownload_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientFileDownload_Response) ProtoMessage()    {}
func (*CCloud_ClientFileDownload_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{23}
}

func (m *CCloud_ClientFileDownload_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response.Unmarshal(m, b)
}
func (m *CCloud_ClientFileDownload_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientFileDownload_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientFileDownload_Response.Merge(m, src)
}
func (m *CCloud_ClientFileDownload_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response.Size(m)
}
func (m *CCloud_ClientFileDownload_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientFileDownload_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientFileDownload_Response proto.InternalMessageInfo

func (m *CCloud_ClientFileDownload_Response) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientFileDownload_Response) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *CCloud_ClientFileDownload_Response) GetRawFileSize() uint32 {
	if m != nil && m.RawFileSize != nil {
		return *m.RawFileSize
	}
	return 0
}

func (m *CCloud_ClientFileDownload_Response) GetShaFile() []byte {
	if m != nil {
		return m.ShaFile
	}
	return nil
}

func (m *CCloud_ClientFileDownload_Response) GetTimeStamp() uint64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *CCloud_ClientFileDownload_Response) GetIsExplicitDelete() bool {
	if m != nil && m.IsExplicitDelete != nil {
		return *m.IsExplicitDelete
	}
	return false
}

func (m *CCloud_ClientFileDownload_Response) GetUrlHost() string {
	if m != nil && m.UrlHost != nil {
		return *m.UrlHost
	}
	return ""
}

func (m *CCloud_ClientFileDownload_Response) GetUrlPath() string {
	if m != nil && m.UrlPath != nil {
		return *m.UrlPath
	}
	return ""
}

func (m *CCloud_ClientFileDownload_Response) GetUseHttps() bool {
	if m != nil && m.UseHttps != nil {
		return *m.UseHttps
	}
	return false
}

func (m *CCloud_ClientFileDownload_Response) GetRequestHeaders() []*CCloud_ClientFileDownload_Response_HTTPHeaders {
	if m != nil {
		return m.RequestHeaders
	}
	return nil
}

func (m *CCloud_ClientFileDownload_Response) GetEncrypted() bool {
	if m != nil && m.Encrypted != nil {
		return *m.Encrypted
	}
	return false
}

type CCloud_ClientFileDownload_Response_HTTPHeaders struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) Reset() {
	*m = CCloud_ClientFileDownload_Response_HTTPHeaders{}
}
func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) String() string {
	return proto.CompactTextString(m)
}
func (*CCloud_ClientFileDownload_Response_HTTPHeaders) ProtoMessage() {}
func (*CCloud_ClientFileDownload_Response_HTTPHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{23, 0}
}

func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders.Unmarshal(m, b)
}
func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders.Merge(m, src)
}
func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders.Size(m)
}
func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientFileDownload_Response_HTTPHeaders proto.InternalMessageInfo

func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCloud_ClientFileDownload_Response_HTTPHeaders) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCloud_ClientDeleteFile_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Filename             *string  `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
	IsExplicitDelete     *bool    `protobuf:"varint,3,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientDeleteFile_Request) Reset()         { *m = CCloud_ClientDeleteFile_Request{} }
func (m *CCloud_ClientDeleteFile_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientDeleteFile_Request) ProtoMessage()    {}
func (*CCloud_ClientDeleteFile_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{24}
}

func (m *CCloud_ClientDeleteFile_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Request.Unmarshal(m, b)
}
func (m *CCloud_ClientDeleteFile_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientDeleteFile_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientDeleteFile_Request.Merge(m, src)
}
func (m *CCloud_ClientDeleteFile_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Request.Size(m)
}
func (m *CCloud_ClientDeleteFile_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientDeleteFile_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientDeleteFile_Request proto.InternalMessageInfo

func (m *CCloud_ClientDeleteFile_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientDeleteFile_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCloud_ClientDeleteFile_Request) GetIsExplicitDelete() bool {
	if m != nil && m.IsExplicitDelete != nil {
		return *m.IsExplicitDelete
	}
	return false
}

type CCloud_ClientDeleteFile_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientDeleteFile_Response) Reset()         { *m = CCloud_ClientDeleteFile_Response{} }
func (m *CCloud_ClientDeleteFile_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_ClientDeleteFile_Response) ProtoMessage()    {}
func (*CCloud_ClientDeleteFile_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{25}
}

func (m *CCloud_ClientDeleteFile_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Response.Unmarshal(m, b)
}
func (m *CCloud_ClientDeleteFile_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientDeleteFile_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientDeleteFile_Response.Merge(m, src)
}
func (m *CCloud_ClientDeleteFile_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientDeleteFile_Response.Size(m)
}
func (m *CCloud_ClientDeleteFile_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientDeleteFile_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientDeleteFile_Response proto.InternalMessageInfo

type CCloud_ClientConflictResolution_Notification struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ChoseLocalFiles      *bool    `protobuf:"varint,2,opt,name=chose_local_files,json=choseLocalFiles" json:"chose_local_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_ClientConflictResolution_Notification) Reset() {
	*m = CCloud_ClientConflictResolution_Notification{}
}
func (m *CCloud_ClientConflictResolution_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CCloud_ClientConflictResolution_Notification) ProtoMessage() {}
func (*CCloud_ClientConflictResolution_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{26}
}

func (m *CCloud_ClientConflictResolution_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_ClientConflictResolution_Notification.Unmarshal(m, b)
}
func (m *CCloud_ClientConflictResolution_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_ClientConflictResolution_Notification.Marshal(b, m, deterministic)
}
func (m *CCloud_ClientConflictResolution_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_ClientConflictResolution_Notification.Merge(m, src)
}
func (m *CCloud_ClientConflictResolution_Notification) XXX_Size() int {
	return xxx_messageInfo_CCloud_ClientConflictResolution_Notification.Size(m)
}
func (m *CCloud_ClientConflictResolution_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_ClientConflictResolution_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_ClientConflictResolution_Notification proto.InternalMessageInfo

func (m *CCloud_ClientConflictResolution_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_ClientConflictResolution_Notification) GetChoseLocalFiles() bool {
	if m != nil && m.ChoseLocalFiles != nil {
		return *m.ChoseLocalFiles
	}
	return false
}

type CCloud_EnumerateUserApps_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_EnumerateUserApps_Request) Reset()         { *m = CCloud_EnumerateUserApps_Request{} }
func (m *CCloud_EnumerateUserApps_Request) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserApps_Request) ProtoMessage()    {}
func (*CCloud_EnumerateUserApps_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{27}
}

func (m *CCloud_EnumerateUserApps_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Request.Unmarshal(m, b)
}
func (m *CCloud_EnumerateUserApps_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Request.Marshal(b, m, deterministic)
}
func (m *CCloud_EnumerateUserApps_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_EnumerateUserApps_Request.Merge(m, src)
}
func (m *CCloud_EnumerateUserApps_Request) XXX_Size() int {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Request.Size(m)
}
func (m *CCloud_EnumerateUserApps_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_EnumerateUserApps_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_EnumerateUserApps_Request proto.InternalMessageInfo

type CCloud_EnumerateUserApps_Response struct {
	Apps                 []*CCloud_EnumerateUserApps_Response_Apps `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CCloud_EnumerateUserApps_Response) Reset()         { *m = CCloud_EnumerateUserApps_Response{} }
func (m *CCloud_EnumerateUserApps_Response) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserApps_Response) ProtoMessage()    {}
func (*CCloud_EnumerateUserApps_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{28}
}

func (m *CCloud_EnumerateUserApps_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response.Unmarshal(m, b)
}
func (m *CCloud_EnumerateUserApps_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response.Marshal(b, m, deterministic)
}
func (m *CCloud_EnumerateUserApps_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_EnumerateUserApps_Response.Merge(m, src)
}
func (m *CCloud_EnumerateUserApps_Response) XXX_Size() int {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response.Size(m)
}
func (m *CCloud_EnumerateUserApps_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_EnumerateUserApps_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_EnumerateUserApps_Response proto.InternalMessageInfo

func (m *CCloud_EnumerateUserApps_Response) GetApps() []*CCloud_EnumerateUserApps_Response_Apps {
	if m != nil {
		return m.Apps
	}
	return nil
}

type CCloud_EnumerateUserApps_Response_Apps struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Totalcount           *int32   `protobuf:"varint,2,opt,name=totalcount" json:"totalcount,omitempty"`
	Totalsize            *int64   `protobuf:"varint,3,opt,name=totalsize" json:"totalsize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCloud_EnumerateUserApps_Response_Apps) Reset() {
	*m = CCloud_EnumerateUserApps_Response_Apps{}
}
func (m *CCloud_EnumerateUserApps_Response_Apps) String() string { return proto.CompactTextString(m) }
func (*CCloud_EnumerateUserApps_Response_Apps) ProtoMessage()    {}
func (*CCloud_EnumerateUserApps_Response_Apps) Descriptor() ([]byte, []int) {
	return fileDescriptor_f68a7f6c78d1a1ba, []int{28, 0}
}

func (m *CCloud_EnumerateUserApps_Response_Apps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps.Unmarshal(m, b)
}
func (m *CCloud_EnumerateUserApps_Response_Apps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps.Marshal(b, m, deterministic)
}
func (m *CCloud_EnumerateUserApps_Response_Apps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps.Merge(m, src)
}
func (m *CCloud_EnumerateUserApps_Response_Apps) XXX_Size() int {
	return xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps.Size(m)
}
func (m *CCloud_EnumerateUserApps_Response_Apps) XXX_DiscardUnknown() {
	xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps.DiscardUnknown(m)
}

var xxx_messageInfo_CCloud_EnumerateUserApps_Response_Apps proto.InternalMessageInfo

func (m *CCloud_EnumerateUserApps_Response_Apps) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCloud_EnumerateUserApps_Response_Apps) GetTotalcount() int32 {
	if m != nil && m.Totalcount != nil {
		return *m.Totalcount
	}
	return 0
}

func (m *CCloud_EnumerateUserApps_Response_Apps) GetTotalsize() int64 {
	if m != nil && m.Totalsize != nil {
		return *m.Totalsize
	}
	return 0
}

func init() {
	proto.RegisterType((*CCloud_GetUploadServerInfo_Request)(nil), "CCloud_GetUploadServerInfo_Request")
	proto.RegisterType((*CCloud_GetUploadServerInfo_Response)(nil), "CCloud_GetUploadServerInfo_Response")
	proto.RegisterType((*CCloud_BeginHTTPUpload_Request)(nil), "CCloud_BeginHTTPUpload_Request")
	proto.RegisterType((*CCloud_BeginHTTPUpload_Response)(nil), "CCloud_BeginHTTPUpload_Response")
	proto.RegisterType((*CCloud_BeginHTTPUpload_Response_HTTPHeaders)(nil), "CCloud_BeginHTTPUpload_Response.HTTPHeaders")
	proto.RegisterType((*CCloud_CommitHTTPUpload_Request)(nil), "CCloud_CommitHTTPUpload_Request")
	proto.RegisterType((*CCloud_CommitHTTPUpload_Response)(nil), "CCloud_CommitHTTPUpload_Response")
	proto.RegisterType((*CCloud_GetFileDetails_Request)(nil), "CCloud_GetFileDetails_Request")
	proto.RegisterType((*CCloud_UserFile)(nil), "CCloud_UserFile")
	proto.RegisterType((*CCloud_GetFileDetails_Response)(nil), "CCloud_GetFileDetails_Response")
	proto.RegisterType((*CCloud_EnumerateUserFiles_Request)(nil), "CCloud_EnumerateUserFiles_Request")
	proto.RegisterType((*CCloud_EnumerateUserFiles_Response)(nil), "CCloud_EnumerateUserFiles_Response")
	proto.RegisterType((*CCloud_Delete_Request)(nil), "CCloud_Delete_Request")
	proto.RegisterType((*CCloud_Delete_Response)(nil), "CCloud_Delete_Response")
	proto.RegisterType((*CCloud_GetClientEncryptionKey_Request)(nil), "CCloud_GetClientEncryptionKey_Request")
	proto.RegisterType((*CCloud_GetClientEncryptionKey_Response)(nil), "CCloud_GetClientEncryptionKey_Response")
	proto.RegisterType((*CCloud_CDNReport_Notification)(nil), "CCloud_CDNReport_Notification")
	proto.RegisterType((*CCloud_ExternalStorageTransferReport_Notification)(nil), "CCloud_ExternalStorageTransferReport_Notification")
	proto.RegisterType((*CCloud_ClientBeginFileUpload_Request)(nil), "CCloud_ClientBeginFileUpload_Request")
	proto.RegisterType((*ClientCloudFileUploadBlockDetails)(nil), "ClientCloudFileUploadBlockDetails")
	proto.RegisterType((*ClientCloudFileUploadBlockDetails_HTTPHeaders)(nil), "ClientCloudFileUploadBlockDetails.HTTPHeaders")
	proto.RegisterType((*CCloud_ClientBeginFileUpload_Response)(nil), "CCloud_ClientBeginFileUpload_Response")
	proto.RegisterType((*CCloud_ClientCommitFileUpload_Request)(nil), "CCloud_ClientCommitFileUpload_Request")
	proto.RegisterType((*CCloud_ClientCommitFileUpload_Response)(nil), "CCloud_ClientCommitFileUpload_Response")
	proto.RegisterType((*CCloud_ClientFileDownload_Request)(nil), "CCloud_ClientFileDownload_Request")
	proto.RegisterType((*CCloud_ClientFileDownload_Response)(nil), "CCloud_ClientFileDownload_Response")
	proto.RegisterType((*CCloud_ClientFileDownload_Response_HTTPHeaders)(nil), "CCloud_ClientFileDownload_Response.HTTPHeaders")
	proto.RegisterType((*CCloud_ClientDeleteFile_Request)(nil), "CCloud_ClientDeleteFile_Request")
	proto.RegisterType((*CCloud_ClientDeleteFile_Response)(nil), "CCloud_ClientDeleteFile_Response")
	proto.RegisterType((*CCloud_ClientConflictResolution_Notification)(nil), "CCloud_ClientConflictResolution_Notification")
	proto.RegisterType((*CCloud_EnumerateUserApps_Request)(nil), "CCloud_EnumerateUserApps_Request")
	proto.RegisterType((*CCloud_EnumerateUserApps_Response)(nil), "CCloud_EnumerateUserApps_Response")
	proto.RegisterType((*CCloud_EnumerateUserApps_Response_Apps)(nil), "CCloud_EnumerateUserApps_Response.Apps")
}

func init() {
	proto.RegisterFile("steammessages_cloud.steamclient.proto", fileDescriptor_f68a7f6c78d1a1ba)
}

var fileDescriptor_f68a7f6c78d1a1ba = []byte{
	// 4022 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7a, 0xcf, 0x6f, 0x1c, 0x47,
	0x76, 0x3f, 0x46, 0x22, 0x45, 0xb2, 0x28, 0x51, 0x52, 0xaf, 0xa5, 0x6f, 0x2f, 0xd7, 0xb6, 0x4a,
	0x6d, 0x4b, 0x94, 0xbd, 0x54, 0x5b, 0xd2, 0x4a, 0xf2, 0xca, 0xfa, 0x1a, 0x0e, 0x87, 0xa4, 0x24,
	0x26, 0x92, 0xac, 0xed, 0x21, 0x77, 0x93, 0x75, 0x36, 0x8d, 0x62, 0x77, 0x0d, 0xa7, 0xc2, 0x9e,
	0xae, 0x71, 0x55, 0x35, 0xc9, 0x31, 0x16, 0xbb, 0x4e, 0x07, 0x88, 0x13, 0xe4, 0x17, 0x12, 0x20,
	0x87, 0x2c, 0x82, 0xe4, 0x1a, 0x60, 0x37, 0xc7, 0x46, 0x80, 0x20, 0x40, 0xfe, 0x81, 0x5c, 0x72,
	0xcd, 0x39, 0xf9, 0x0b, 0x02, 0x04, 0xd8, 0x5b, 0x50, 0xaf, 0xaa, 0x7f, 0xcc, 0x70, 0x28, 0xd2,
	0xf2, 0x3a, 0xc8, 0x85, 0x60, 0x57, 0xbd, 0x7a, 0xf5, 0xea, 0xd5, 0xfb, 0xf1, 0x79, 0xaf, 0x06,
	0x5d, 0x93, 0x8a, 0x92, 0x7e, 0x9f, 0x4a, 0x49, 0x76, 0xa8, 0x0c, 0xa3, 0x84, 0x67, 0xb1, 0x0f,
	0x63, 0x51, 0xc2, 0x68, 0xaa, 0xfc, 0x81, 0xe0, 0x8a, 0x2f, 0x2e, 0x8f, 0x92, 0x65, 0x29, 0xeb,
	0x32, 0x1a, 0x87, 0xdb, 0x44, 0xd2, 0xc3, 0xd4, 0xde, 0x2e, 0xf2, 0x56, 0x57, 0x35, 0xa7, 0xf0,
	0x31, 0x55, 0x5b, 0x83, 0x84, 0x93, 0xb8, 0x43, 0xc5, 0x1e, 0x15, 0x1b, 0x69, 0x97, 0x87, 0x01,
	0xfd, 0x34, 0xa3, 0x52, 0x39, 0xeb, 0x68, 0x9a, 0x0c, 0x06, 0x2c, 0x76, 0x5b, 0xb8, 0x75, 0xe3,
	0x5c, 0xfb, 0xbd, 0xbc, 0x70, 0xbf, 0xbd, 0x32, 0x18, 0xe0, 0x8d, 0x35, 0xac, 0x38, 0xde, 0xef,
	0xb1, 0xa8, 0x87, 0x09, 0xee, 0xb2, 0x84, 0xe2, 0x7d, 0x96, 0x24, 0x78, 0x9b, 0xe2, 0x0c, 0x78,
	0xd1, 0x18, 0x2b, 0xee, 0x07, 0x66, 0xb5, 0xb7, 0x86, 0xde, 0x7a, 0xe9, 0x66, 0x72, 0xc0, 0x53,
	0x49, 0x9d, 0x37, 0x10, 0x92, 0x30, 0x1c, 0x66, 0x22, 0x81, 0x2d, 0xe7, 0x82, 0x39, 0x33, 0xb2,
	0x25, 0x12, 0xef, 0xf3, 0x19, 0xf4, 0xa6, 0x65, 0xd3, 0xa6, 0x3b, 0x2c, 0x7d, 0xb2, 0xb9, 0xf9,
	0xc2, 0x30, 0xab, 0xe4, 0x7d, 0x34, 0x2a, 0xef, 0xad, 0xbc, 0x70, 0x97, 0xad, 0xbc, 0x5d, 0x2e,
	0xac, 0xc0, 0xaa, 0x47, 0x8d, 0xc8, 0x4c, 0xe2, 0x6d, 0xca, 0xd2, 0x9d, 0x4a, 0xe6, 0x52, 0x60,
	0xe7, 0x43, 0x34, 0xa7, 0x29, 0x42, 0xc9, 0x3e, 0xa3, 0xee, 0x29, 0xe0, 0x85, 0xf3, 0xc2, 0x7d,
	0xfd, 0x63, 0xc1, 0x76, 0x58, 0x4a, 0x12, 0xb3, 0x5e, 0xcf, 0x62, 0x96, 0xe2, 0xed, 0xa1, 0xa2,
	0xd2, 0x0f, 0x66, 0xf5, 0x60, 0x87, 0x7d, 0x46, 0x9d, 0xc7, 0x08, 0xfe, 0x4f, 0x49, 0x9f, 0xba,
	0xa7, 0xf5, 0x31, 0xda, 0xdf, 0xce, 0x0b, 0x77, 0xe9, 0x39, 0xe9, 0x53, 0xcc, 0xbb, 0xb5, 0x00,
	0x8a, 0x63, 0xa9, 0xb8, 0x00, 0x26, 0x7a, 0xd0, 0x5c, 0x6d, 0x50, 0x2d, 0x76, 0x42, 0xc3, 0x28,
	0x94, 0x3d, 0xe2, 0x4e, 0x01, 0xa3, 0xb5, 0xbc, 0x70, 0x7f, 0xed, 0x09, 0x3d, 0xc0, 0x52, 0x09,
	0x2d, 0xfa, 0x8d, 0xbb, 0xb7, 0x70, 0xcc, 0x76, 0x98, 0x92, 0xef, 0x60, 0x41, 0x07, 0x82, 0x4a,
	0x9a, 0x2a, 0x3d, 0xa1, 0xf9, 0x75, 0x9e, 0xac, 0xdc, 0xd6, 0xb3, 0x54, 0xaa, 0xe6, 0xbe, 0x7e,
	0x30, 0x03, 0xa2, 0xf6, 0x88, 0xd3, 0x45, 0x73, 0x4c, 0x86, 0x83, 0x6c, 0x3b, 0x61, 0x91, 0x3b,
	0x8d, 0x5b, 0x37, 0x66, 0xdb, 0x1b, 0x79, 0xe1, 0xae, 0x6f, 0x8a, 0x8c, 0x62, 0xd6, 0x10, 0x55,
	0xf6, 0x78, 0x96, 0xc4, 0xfa, 0x82, 0xfb, 0x44, 0xec, 0xd2, 0x18, 0x9b, 0x35, 0x98, 0x1b, 0xc9,
	0xb7, 0x1e, 0x75, 0x96, 0x71, 0x97, 0x24, 0x92, 0x62, 0xae, 0x7a, 0x54, 0xec, 0x33, 0x49, 0xfd,
	0x60, 0x96, 0xc9, 0x17, 0x40, 0xe6, 0xfc, 0x71, 0x0b, 0x5d, 0x1c, 0x24, 0x44, 0x75, 0xb9, 0xe8,
	0xcb, 0x50, 0xf1, 0x50, 0x0e, 0xd3, 0xc8, 0x3d, 0x83, 0x4f, 0xdf, 0x98, 0x6b, 0x87, 0x79, 0xe1,
	0x7e, 0xb2, 0x22, 0x04, 0x19, 0x6a, 0x21, 0xed, 0xb9, 0xe4, 0x80, 0x46, 0xac, 0x3b, 0xd4, 0xff,
	0x9a, 0x5b, 0xab, 0x56, 0x83, 0xd6, 0x86, 0x69, 0xf4, 0x10, 0xef, 0x91, 0x24, 0xa3, 0xe6, 0xaf,
	0xfc, 0x00, 0x93, 0x24, 0x59, 0xc6, 0xfb, 0x2c, 0x8d, 0xf9, 0xbe, 0x5c, 0xc6, 0x5c, 0x1e, 0x2c,
	0xe3, 0x84, 0xa5, 0xd9, 0x81, 0x1f, 0x9c, 0xaf, 0xd6, 0x6e, 0xf2, 0xce, 0x30, 0x8d, 0x9c, 0x2f,
	0x5a, 0xe8, 0x92, 0x30, 0x26, 0x13, 0xf6, 0x28, 0x89, 0xa9, 0x90, 0xa1, 0xd6, 0xb7, 0x74, 0x67,
	0x40, 0xa2, 0x4e, 0x5e, 0xb8, 0x1f, 0xeb, 0xdb, 0x92, 0x60, 0x36, 0x96, 0x04, 0x0f, 0x79, 0xb6,
	0x94, 0x24, 0x78, 0x9f, 0xa4, 0x0a, 0x84, 0xa0, 0x4a, 0x1f, 0x7f, 0xc8, 0x33, 0x61, 0x2d, 0x08,
	0x5b, 0xa6, 0x3e, 0x7e, 0x46, 0x86, 0x5a, 0x57, 0x09, 0xed, 0x2a, 0xbc, 0x9d, 0x90, 0x74, 0xd7,
	0x0f, 0xbe, 0x61, 0x27, 0x9f, 0x18, 0x6e, 0xc0, 0xde, 0xf9, 0x45, 0x0b, 0x5d, 0x1e, 0x97, 0xc4,
	0x1c, 0xc8, 0x9d, 0x05, 0x51, 0xf6, 0xf2, 0xc2, 0x15, 0xdf, 0x87, 0x91, 0x57, 0x95, 0x65, 0xb3,
	0x47, 0x71, 0x9a, 0xf5, 0xb7, 0xa9, 0xd0, 0xfa, 0x85, 0x73, 0xe2, 0x7e, 0x26, 0x15, 0xa6, 0x9f,
	0x66, 0x24, 0x81, 0xeb, 0xab, 0xa7, 0xcd, 0xe6, 0x7e, 0xf0, 0xda, 0xa8, 0xb4, 0x46, 0x02, 0xef,
	0x3f, 0xa6, 0xd0, 0x95, 0x23, 0x5d, 0xd0, 0x7a, 0xf1, 0x7d, 0x34, 0x9d, 0xed, 0x44, 0xd6, 0x07,
	0xcf, 0x18, 0xbf, 0xd9, 0x7a, 0xbc, 0xaa, 0x7d, 0xd0, 0xda, 0x60, 0x15, 0x22, 0x8c, 0x31, 0x1a,
	0x72, 0xe7, 0x21, 0x9a, 0x53, 0xac, 0x4f, 0xa5, 0x22, 0xfd, 0x01, 0xf8, 0xdc, 0x4c, 0xfb, 0x8d,
	0xbc, 0x70, 0xbf, 0x69, 0x22, 0x05, 0xae, 0xe6, 0x34, 0x17, 0xb3, 0xb0, 0xa6, 0x77, 0x08, 0x9a,
	0xcd, 0x44, 0x12, 0xf6, 0xb8, 0x54, 0xd6, 0xe3, 0x1e, 0xe5, 0x85, 0xdb, 0x7e, 0xc2, 0xa5, 0x82,
	0x13, 0x83, 0x65, 0x59, 0x46, 0x65, 0xe0, 0x1a, 0xb3, 0xeb, 0x4a, 0xaa, 0x3d, 0x46, 0xb0, 0x3e,
	0x18, 0x7e, 0xb1, 0xb5, 0xe9, 0x07, 0x33, 0x99, 0x48, 0x34, 0x1b, 0xe7, 0x37, 0xcd, 0x16, 0x03,
	0xa2, 0x7a, 0xd6, 0x17, 0x3f, 0xcc, 0x0b, 0xf7, 0x41, 0x40, 0x13, 0xa2, 0xd8, 0x1e, 0xc5, 0x7a,
	0x42, 0xdf, 0xc1, 0x09, 0xb7, 0x31, 0x9c, 0x5f, 0x10, 0xd5, 0x73, 0x9e, 0xa0, 0xb9, 0x4c, 0xd2,
	0xb0, 0xa7, 0xd4, 0x40, 0x5a, 0x27, 0x84, 0x78, 0xb1, 0xd1, 0xc5, 0x4a, 0x64, 0x74, 0x19, 0x67,
	0x92, 0x62, 0x98, 0x5d, 0xae, 0xbd, 0xab, 0x1a, 0xf4, 0x83, 0xd9, 0x4c, 0xd2, 0x27, 0x7a, 0x5a,
	0xbb, 0xd9, 0xf9, 0x31, 0x73, 0x02, 0x27, 0x9b, 0xbf, 0xb3, 0xec, 0x1f, 0x73, 0x6f, 0xbe, 0x1e,
	0xb3, 0xb7, 0xdd, 0xbe, 0x9b, 0x17, 0xee, 0x2d, 0x6d, 0xa1, 0x37, 0x8d, 0x8f, 0x0d, 0x08, 0x13,
	0xe0, 0x78, 0xdb, 0x14, 0xeb, 0x00, 0xa3, 0x03, 0x56, 0xa9, 0xa2, 0xca, 0xd0, 0x82, 0x85, 0x51,
	0x9b, 0x59, 0x7c, 0x1f, 0xcd, 0x37, 0x98, 0x3a, 0x0e, 0x9a, 0x82, 0x88, 0x68, 0x02, 0x3b, 0xfc,
	0xef, 0xbc, 0x86, 0xa6, 0x61, 0x07, 0xb8, 0xf0, 0xb9, 0xc0, 0x7c, 0x78, 0xff, 0x5e, 0x9b, 0xd9,
	0x2a, 0xef, 0xf7, 0x99, 0x9a, 0x10, 0xea, 0xff, 0xb1, 0x85, 0x1c, 0x25, 0x48, 0x2a, 0xbb, 0x54,
	0x84, 0x32, 0x8b, 0x22, 0x4a, 0x63, 0x6a, 0x8c, 0x6e, 0xb6, 0xfd, 0x45, 0x2b, 0x2f, 0xdc, 0xbc,
	0xd5, 0x8c, 0x62, 0x95, 0xb8, 0x8a, 0x37, 0x8c, 0x10, 0x6f, 0x05, 0x4f, 0x71, 0xb5, 0x1a, 0xdf,
	0xd0, 0x9f, 0x03, 0xc1, 0xf7, 0x98, 0xfe, 0x62, 0x29, 0x16, 0x56, 0x3b, 0x7a, 0x15, 0x08, 0xe4,
	0x8f, 0xe9, 0xef, 0x9d, 0x32, 0xec, 0xb1, 0xae, 0xce, 0x84, 0x84, 0x25, 0x99, 0xa0, 0x98, 0x47,
	0x51, 0x26, 0x84, 0xbe, 0xe4, 0x8b, 0xa5, 0x8c, 0x9d, 0x72, 0x13, 0xe7, 0xa7, 0x65, 0x92, 0x32,
	0x89, 0x85, 0xe5, 0x85, 0x4b, 0xbf, 0x4c, 0x92, 0xc2, 0xcf, 0xb4, 0xf3, 0xf6, 0x89, 0xb2, 0x64,
	0xc4, 0xac, 0xad, 0xc4, 0x3e, 0x4a, 0xd4, 0x2a, 0xbb, 0xfd, 0x6d, 0xab, 0x91, 0x56, 0x8c, 0xb7,
	0xe4, 0x5a, 0x61, 0x3f, 0xf9, 0xaa, 0x79, 0x65, 0x5c, 0xb2, 0x26, 0xdd, 0x09, 0xc4, 0xab, 0xb2,
	0xd2, 0x27, 0x8d, 0xfc, 0x69, 0x5c, 0xed, 0xa3, 0xbc, 0x70, 0x1f, 0x3e, 0xb2, 0x63, 0x98, 0x48,
	0x9b, 0x1f, 0x98, 0xb9, 0x25, 0xbd, 0xd7, 0x44, 0x9e, 0xb5, 0x6d, 0x56, 0x0c, 0xbd, 0x3f, 0x69,
	0x21, 0x7c, 0xb4, 0x71, 0xd9, 0x20, 0xd6, 0x43, 0x0b, 0xa0, 0xa1, 0x08, 0x28, 0x54, 0x65, 0x58,
	0x2b, 0x79, 0xe1, 0x7e, 0x78, 0x28, 0x39, 0xee, 0x6b, 0x81, 0xf4, 0xfd, 0x4a, 0xd9, 0xcd, 0x92,
	0x64, 0x88, 0xab, 0x65, 0x13, 0x92, 0xe2, 0x39, 0xbd, 0x64, 0xb5, 0x24, 0xf0, 0x7e, 0xd6, 0x42,
	0x6f, 0xd4, 0xe0, 0x48, 0x1f, 0x71, 0x8d, 0x2a, 0xc2, 0x12, 0x59, 0x59, 0x7a, 0xbb, 0x19, 0x50,
	0xa7, 0xda, 0xcb, 0x79, 0xe1, 0xde, 0xa8, 0x83, 0x29, 0x2c, 0xad, 0xe0, 0xc4, 0x0e, 0x55, 0x38,
	0x36, 0xeb, 0xb5, 0x31, 0x55, 0xc1, 0xf5, 0xde, 0xa8, 0xcd, 0x5d, 0xc9, 0x0b, 0xf7, 0x5b, 0x25,
	0x90, 0x2b, 0x4f, 0xb1, 0x4d, 0x13, 0x9e, 0xee, 0xc8, 0x26, 0x70, 0xfb, 0xcf, 0x16, 0x3a, 0x6f,
	0x85, 0xdb, 0x92, 0x54, 0x68, 0xe9, 0xb4, 0xcb, 0x36, 0x30, 0x56, 0x69, 0x53, 0xaf, 0x95, 0x42,
	0xea, 0x0d, 0xa6, 0xca, 0x6d, 0x17, 0xc7, 0x81, 0x50, 0x03, 0xdb, 0xbc, 0xde, 0x8c, 0xf7, 0x53,
	0xb0, 0xaa, 0x11, 0xd0, 0xbf, 0xd5, 0x44, 0x60, 0xd3, 0xb0, 0x53, 0x8d, 0xaf, 0x2e, 0xa0, 0xd3,
	0x1a, 0x21, 0x9e, 0x01, 0x8e, 0xfa, 0x5f, 0x67, 0x09, 0x9d, 0x07, 0x8c, 0xcb, 0xe2, 0x30, 0x12,
	0x94, 0x28, 0x2e, 0xdc, 0x19, 0x9d, 0x7e, 0x82, 0x05, 0x3b, 0xbc, 0x6a, 0x46, 0xb5, 0x9c, 0xdd,
	0x84, 0xec, 0xe8, 0xf4, 0x0a, 0xd2, 0xc3, 0x87, 0xf7, 0xb4, 0x42, 0x96, 0x87, 0xee, 0xc0, 0x1a,
	0xc4, 0xbb, 0x68, 0xc6, 0xea, 0x15, 0xce, 0x3d, 0x7f, 0xe7, 0x82, 0x3f, 0xa6, 0x98, 0xa0, 0x24,
	0xf0, 0xfe, 0x6a, 0x0a, 0x5d, 0xb5, 0x93, 0xeb, 0x69, 0xd6, 0xa7, 0x82, 0x28, 0x5a, 0x52, 0xd5,
	0xd7, 0xfa, 0x70, 0x14, 0xab, 0x5e, 0xcb, 0x0b, 0xf7, 0x6a, 0x8d, 0xad, 0x69, 0xb9, 0xb0, 0xba,
	0x1f, 0x89, 0x79, 0xb7, 0x72, 0xe1, 0x5f, 0xb4, 0xd0, 0x05, 0x7a, 0xa0, 0x68, 0x1a, 0xd3, 0x38,
	0x2c, 0x05, 0x3b, 0x05, 0x26, 0xfa, 0xb9, 0x76, 0xe5, 0x1f, 0xdf, 0xf8, 0x78, 0xa0, 0x18, 0x4f,
	0x49, 0xf2, 0x0e, 0x7e, 0x4c, 0x15, 0x2e, 0x69, 0x2b, 0xe3, 0xd8, 0x26, 0xd1, 0x6e, 0x09, 0xde,
	0x0c, 0xf7, 0x2e, 0xcf, 0xd2, 0xd8, 0xc7, 0x6b, 0xb4, 0x4b, 0xb2, 0x44, 0x41, 0xb4, 0xe7, 0x69,
	0x32, 0xc4, 0x82, 0xaa, 0x4c, 0xa4, 0xda, 0x71, 0xcb, 0x58, 0x13, 0x63, 0x92, 0xc6, 0x18, 0x72,
	0x7a, 0xdc, 0xf4, 0xff, 0x92, 0x47, 0x70, 0xbe, 0xdc, 0xce, 0xaa, 0xd1, 0xf9, 0xfd, 0x16, 0x9a,
	0x8e, 0x78, 0x96, 0x9a, 0xe4, 0x7c, 0xae, 0xdd, 0xcf, 0x0b, 0x97, 0x35, 0x44, 0x7c, 0x46, 0x0e,
	0x58, 0x3f, 0xeb, 0x37, 0x70, 0x88, 0xa0, 0xb2, 0x94, 0xc2, 0x08, 0x60, 0x84, 0x65, 0x12, 0x47,
	0x24, 0x49, 0x46, 0xc5, 0x24, 0xb8, 0x6f, 0xd7, 0xf3, 0x2e, 0xbe, 0x77, 0xeb, 0x96, 0x15, 0xa6,
	0x14, 0xdc, 0x0f, 0xcc, 0xde, 0xce, 0x4f, 0xd0, 0xbc, 0x54, 0x44, 0xa8, 0x90, 0xa5, 0x31, 0x3d,
	0x00, 0x9b, 0x3b, 0xd7, 0xfe, 0x51, 0x5e, 0xb8, 0xbf, 0xd5, 0x10, 0xa5, 0xa3, 0x29, 0x74, 0xa0,
	0x03, 0x22, 0x93, 0xf3, 0x76, 0x58, 0x5a, 0x5d, 0x08, 0xe3, 0x29, 0x26, 0x6a, 0x54, 0x00, 0xad,
	0x00, 0xa0, 0x4a, 0xf5, 0x42, 0xab, 0x91, 0x84, 0xe9, 0xb8, 0x83, 0x60, 0xc7, 0x0d, 0xcd, 0xcb,
	0xeb, 0x57, 0x35, 0xd7, 0x44, 0xb3, 0xb0, 0x96, 0x76, 0x1d, 0x4d, 0x83, 0xfc, 0x6e, 0x0b, 0x12,
	0xf7, 0x61, 0x3b, 0x33, 0xd3, 0xce, 0x15, 0x34, 0xaf, 0xb8, 0x22, 0x49, 0x68, 0xa8, 0xc1, 0xb1,
	0x03, 0x04, 0x43, 0xc0, 0xd1, 0xfb, 0x5d, 0x74, 0xc9, 0x2e, 0x5d, 0xa3, 0x09, 0x55, 0xb4, 0xb2,
	0xbc, 0xa6, 0x57, 0xb6, 0xc6, 0xbc, 0xf2, 0x15, 0x03, 0x85, 0x8b, 0x2e, 0x8f, 0xef, 0x65, 0x8e,
	0xe3, 0x2d, 0xa1, 0x6b, 0xb5, 0x6b, 0xad, 0x42, 0x09, 0xba, 0x9e, 0x46, 0x62, 0x08, 0x0a, 0xff,
	0x0d, 0x3a, 0x2c, 0xa5, 0xf2, 0x0e, 0xd0, 0xf5, 0xe3, 0x08, 0xad, 0x86, 0x96, 0xd1, 0xe9, 0x5d,
	0x3a, 0x04, 0xd1, 0xcf, 0xb6, 0x17, 0xf3, 0xc2, 0xbd, 0xbc, 0xb2, 0xde, 0xb9, 0x79, 0xe7, 0xde,
	0x7d, 0x4c, 0xab, 0x05, 0x78, 0x97, 0x0e, 0x03, 0x4d, 0xe6, 0x60, 0x74, 0x3a, 0x12, 0x11, 0x9c,
	0x67, 0xba, 0xbd, 0x90, 0x17, 0x2e, 0x5a, 0x0d, 0x56, 0xf5, 0x25, 0x01, 0x45, 0x24, 0x22, 0xef,
	0x97, 0x75, 0x08, 0x5e, 0x5d, 0x7b, 0x1e, 0xd0, 0x01, 0x17, 0x2a, 0x7c, 0xce, 0x15, 0xeb, 0xb2,
	0x08, 0x2e, 0xdc, 0x71, 0xd1, 0x8c, 0x8d, 0x23, 0x06, 0xd5, 0x06, 0xe5, 0x67, 0x19, 0x8a, 0x4e,
	0xd5, 0xa1, 0x48, 0xd3, 0x9a, 0x5c, 0x00, 0xc6, 0x3e, 0x1b, 0x94, 0x9f, 0xce, 0x0d, 0x74, 0x41,
	0x03, 0xb6, 0x50, 0x2a, 0xa2, 0x32, 0x19, 0x46, 0x3c, 0x36, 0xe9, 0xed, 0x5c, 0xb0, 0xa0, 0xc7,
	0x3b, 0x30, 0xbc, 0xca, 0x63, 0xea, 0x5c, 0x43, 0x0b, 0xf4, 0x60, 0x40, 0x23, 0xa5, 0x0b, 0x78,
	0x5d, 0x5d, 0x42, 0x08, 0x9c, 0x0a, 0xce, 0x95, 0xa3, 0x6d, 0x3d, 0xa8, 0xc9, 0x04, 0x8d, 0x28,
	0xdb, 0xab, 0xc8, 0xce, 0x18, 0xb2, 0x72, 0xd4, 0x90, 0x2d, 0xa2, 0xd9, 0x38, 0x33, 0xa6, 0x0b,
	0x51, 0xf1, 0x5c, 0x50, 0x7d, 0x7b, 0xff, 0x72, 0x0a, 0xdd, 0x2e, 0x8d, 0xf2, 0x40, 0x51, 0x91,
	0x92, 0xa4, 0xa3, 0xb8, 0x20, 0x3b, 0x74, 0xd3, 0x02, 0x97, 0x49, 0xfa, 0x70, 0xd0, 0x14, 0x40,
	0x6d, 0x0b, 0xe5, 0xf4, 0xff, 0x7a, 0x0c, 0xb0, 0xb1, 0x51, 0x05, 0xfc, 0xaf, 0xa3, 0x38, 0x93,
	0xa1, 0x41, 0x2e, 0x56, 0x1b, 0xb3, 0x4c, 0x9a, 0x64, 0xdb, 0x54, 0xd4, 0xd4, 0xf1, 0x8a, 0x9a,
	0x3e, 0x4a, 0x51, 0x70, 0xf0, 0xb0, 0x54, 0x4c, 0xa9, 0x01, 0x18, 0x5d, 0xb7, 0x83, 0xce, 0x55,
	0x74, 0xd6, 0x90, 0x91, 0x48, 0x65, 0x24, 0x01, 0x2d, 0x4c, 0x05, 0xf3, 0x30, 0xb6, 0x02, 0x43,
	0xda, 0x9d, 0x4a, 0xa5, 0x84, 0xfd, 0x32, 0x3d, 0xa0, 0x72, 0xe8, 0x99, 0x74, 0x2e, 0xa3, 0x33,
	0x11, 0x4d, 0x12, 0x16, 0xbb, 0x73, 0x30, 0x67, 0xbf, 0xbc, 0x9f, 0x9f, 0x41, 0x6f, 0x97, 0xd6,
	0x03, 0x56, 0x0b, 0x18, 0x44, 0xbb, 0xe0, 0xd7, 0xd4, 0x9c, 0x78, 0x7e, 0xb8, 0x39, 0x71, 0x3b,
	0x2f, 0xdc, 0x9b, 0x75, 0x4f, 0x82, 0x48, 0x0c, 0xb0, 0xd3, 0x40, 0x0c, 0x88, 0xd6, 0xd0, 0x67,
	0x00, 0xb0, 0xb4, 0xda, 0x68, 0x32, 0x40, 0x36, 0xfd, 0x04, 0x9d, 0x13, 0x64, 0x3f, 0xac, 0x79,
	0x9a, 0x18, 0xfd, 0x7e, 0x5e, 0xb8, 0xdf, 0xa9, 0x79, 0x6e, 0xd3, 0x2e, 0x17, 0x14, 0x93, 0x14,
	0xd0, 0x8d, 0x06, 0x84, 0x12, 0x42, 0x61, 0x1a, 0xbf, 0xc7, 0x45, 0xc3, 0xf1, 0xfc, 0x60, 0x5e,
	0x90, 0xfd, 0x47, 0x25, 0xf3, 0xdb, 0x63, 0x1d, 0x8c, 0xb3, 0xed, 0xcb, 0x79, 0xe1, 0x3a, 0x9d,
	0x27, 0x2b, 0x37, 0x6f, 0x43, 0x9c, 0x27, 0xfb, 0xe3, 0x3d, 0x89, 0x7b, 0x08, 0x69, 0x1c, 0x10,
	0x1a, 0x64, 0x00, 0x86, 0x6f, 0x16, 0x6d, 0x1e, 0x51, 0x02, 0x76, 0x00, 0x31, 0x34, 0x9b, 0x2e,
	0x67, 0xbe, 0x4a, 0xd3, 0xe5, 0xfe, 0xa4, 0x56, 0x05, 0xf8, 0xcd, 0x07, 0xe8, 0xee, 0x9d, 0x07,
	0x77, 0x1f, 0xdc, 0x7f, 0xff, 0xce, 0x83, 0x7b, 0x87, 0xbb, 0x0a, 0xcf, 0xd1, 0x8c, 0x36, 0x89,
	0xb0, 0xb4, 0x90, 0xf6, 0xbd, 0xbc, 0x70, 0x6f, 0x1b, 0x9b, 0x58, 0x92, 0x58, 0xcf, 0xe9, 0xbb,
	0x96, 0x1c, 0xef, 0x53, 0x1c, 0x91, 0x14, 0x0f, 0x58, 0xb4, 0x0b, 0xb2, 0x90, 0x1d, 0x8a, 0x13,
	0x6e, 0x7c, 0xcb, 0x37, 0x86, 0xb5, 0x11, 0x3b, 0x3f, 0x42, 0xf3, 0x11, 0x49, 0x43, 0xab, 0x5a,
	0x17, 0x41, 0x76, 0xff, 0xff, 0x79, 0xe1, 0x7e, 0x97, 0x95, 0x85, 0xa1, 0x69, 0xe9, 0x01, 0x33,
	0x4b, 0xd6, 0x8c, 0xd2, 0x70, 0x61, 0xc6, 0x7c, 0x20, 0xa1, 0xa9, 0x00, 0x45, 0x24, 0xb5, 0x41,
	0xd5, 0x51, 0x68, 0x81, 0x49, 0x7d, 0x2f, 0x82, 0xc6, 0x70, 0xf9, 0xee, 0x3c, 0xec, 0xf0, 0x3c,
	0x2f, 0xdc, 0x5f, 0xaf, 0x76, 0x80, 0x94, 0xcb, 0x24, 0xde, 0xe1, 0x00, 0xfe, 0xa1, 0x02, 0xd4,
	0x99, 0x9f, 0x0b, 0x4c, 0xb0, 0x8c, 0x04, 0xa5, 0xa9, 0xec, 0x71, 0xa5, 0xbf, 0x25, 0xef, 0x5b,
	0xa0, 0x8b, 0x0d, 0x57, 0x90, 0x23, 0x38, 0xcb, 0x64, 0x07, 0x3e, 0xb5, 0x4d, 0x78, 0xff, 0x35,
	0x83, 0xae, 0x1a, 0x95, 0x80, 0x1d, 0xd6, 0x6e, 0xd2, 0x4e, 0x78, 0xb4, 0x5b, 0xe2, 0x85, 0x66,
	0x39, 0xdf, 0xfa, 0xfa, 0xcb, 0xf9, 0x53, 0x5f, 0x5f, 0x39, 0x7f, 0xfa, 0xab, 0x94, 0xf3, 0x8f,
	0xd1, 0x3c, 0xc4, 0xc1, 0x3e, 0x55, 0x3d, 0x1e, 0x83, 0xff, 0x4c, 0xb7, 0xaf, 0xe7, 0x85, 0xeb,
	0xad, 0xeb, 0x13, 0x3d, 0x83, 0x61, 0x2d, 0x9a, 0x5e, 0xac, 0x63, 0x08, 0xdc, 0xd6, 0xb6, 0xd6,
	0xa4, 0x1f, 0x20, 0xbd, 0xd4, 0x90, 0x38, 0x7f, 0x3a, 0xa1, 0x2f, 0x30, 0x0d, 0xf0, 0xc2, 0xf7,
	0x8f, 0xbd, 0x8d, 0x5f, 0x7d, 0x67, 0xc0, 0x59, 0x47, 0x67, 0x41, 0xca, 0x90, 0x77, 0xbb, 0x92,
	0x2a, 0x13, 0xb4, 0xdb, 0x5e, 0x5e, 0xb8, 0x6f, 0x9a, 0x91, 0xd2, 0xc3, 0xcd, 0x61, 0xe0, 0x88,
	0x20, 0x57, 0x30, 0x0f, 0x03, 0x1f, 0x03, 0x91, 0xf3, 0x59, 0xc9, 0x26, 0xa1, 0xe9, 0x8e, 0xea,
	0x19, 0x27, 0x6d, 0xff, 0x20, 0x2f, 0xdc, 0x8e, 0x19, 0x39, 0x8a, 0x0d, 0xbe, 0xa9, 0xeb, 0xb7,
	0xcf, 0xa8, 0xe0, 0xcb, 0x38, 0xe5, 0x78, 0x40, 0xc4, 0x48, 0x21, 0xab, 0x0d, 0xbe, 0x1e, 0x2b,
	0x55, 0x6a, 0xf7, 0x7e, 0x0a, 0x9c, 0x9d, 0x4f, 0x91, 0x43, 0x0f, 0x06, 0x09, 0x8b, 0x98, 0x0a,
	0xb7, 0x79, 0x3c, 0x0c, 0x63, 0xa2, 0x08, 0xa4, 0x8d, 0xb3, 0xed, 0xd5, 0xbc, 0x70, 0x3f, 0x2a,
	0x67, 0xb1, 0x9e, 0xc5, 0x7a, 0xd6, 0xde, 0xd4, 0x32, 0x66, 0xa9, 0x86, 0x0f, 0x71, 0x25, 0x9d,
	0x9e, 0x5c, 0x1e, 0xbb, 0xc0, 0xe0, 0x42, 0xc9, 0xa0, 0xcd, 0xe3, 0xe1, 0x1a, 0x51, 0xc4, 0xf9,
	0x29, 0x3a, 0xdf, 0x27, 0xc3, 0x70, 0x40, 0x04, 0x49, 0x12, 0x9a, 0xe8, 0x50, 0x3d, 0x07, 0xe6,
	0xf5, 0xfd, 0xbc, 0x70, 0x83, 0x51, 0x97, 0xb5, 0x0a, 0xc7, 0x7d, 0xd3, 0x88, 0x8c, 0x79, 0x0a,
	0x01, 0xaf, 0x5c, 0x8b, 0xf7, 0x99, 0xd6, 0x8e, 0x71, 0x56, 0xd6, 0x67, 0x09, 0x11, 0xc9, 0xf0,
	0xa6, 0x6d, 0xed, 0xda, 0xb5, 0x32, 0x58, 0xe8, 0x93, 0xe1, 0x8b, 0x7a, 0xb7, 0x57, 0x6f, 0xe8,
	0xfc, 0xd1, 0xa9, 0x0a, 0x05, 0x1e, 0x95, 0x23, 0xab, 0xc2, 0xfb, 0xac, 0x8d, 0x64, 0x26, 0x26,
	0x99, 0xb2, 0x7b, 0x3d, 0x2f, 0xdc, 0x95, 0x8d, 0xfa, 0x80, 0x87, 0x9a, 0xd2, 0x76, 0x0d, 0x8d,
	0xf1, 0xf6, 0xd0, 0x46, 0x75, 0x88, 0x8c, 0x23, 0x41, 0x30, 0x98, 0xb7, 0x64, 0x50, 0xc7, 0xee,
	0xa1, 0x05, 0x63, 0x3c, 0xe5, 0x71, 0xdd, 0x53, 0xe0, 0x11, 0xde, 0xf1, 0x1e, 0x61, 0xfc, 0x19,
	0xcc, 0xbc, 0x5c, 0xac, 0xef, 0xb6, 0x4f, 0x76, 0x21, 0xbd, 0x0c, 0xa8, 0xd0, 0x79, 0xa1, 0xdc,
	0xf5, 0x9c, 0xb9, 0x4f, 0x4b, 0xe8, 0xfd, 0xf7, 0xe9, 0x31, 0x5d, 0x98, 0x5e, 0xc0, 0x04, 0xc0,
	0xa0, 0x5e, 0xd2, 0xe1, 0x02, 0x8d, 0x94, 0x8d, 0x08, 0x92, 0x24, 0xd6, 0xc2, 0xcd, 0x96, 0xb2,
	0x6e, 0x69, 0x35, 0xdb, 0x53, 0xe9, 0xd0, 0x1a, 0x79, 0x1f, 0x1a, 0x55, 0xff, 0x27, 0xda, 0x53,
	0xf5, 0xb1, 0x2b, 0x7c, 0x33, 0x1c, 0xeb, 0x4e, 0x9d, 0x6d, 0xff, 0x4e, 0x5e, 0xb8, 0x3f, 0x9c,
	0xd0, 0x74, 0xaa, 0xc0, 0xc3, 0x2b, 0x34, 0x9e, 0x9a, 0x1b, 0xff, 0xaa, 0x1a, 0x4f, 0x35, 0xcf,
	0x49, 0x8d, 0xa7, 0xbf, 0x6c, 0x55, 0x15, 0xce, 0x91, 0x17, 0xff, 0xbf, 0xde, 0x7e, 0xfa, 0x8b,
	0x56, 0xd5, 0xab, 0x30, 0x42, 0x41, 0xf7, 0x83, 0xef, 0xa7, 0x23, 0x96, 0x78, 0x6f, 0x14, 0xba,
	0x4e, 0xac, 0x0a, 0xeb, 0x98, 0x59, 0xdd, 0xe4, 0xbd, 0x86, 0x3a, 0x4d, 0x8e, 0xfd, 0x66, 0x5e,
	0xb8, 0x97, 0x2a, 0x75, 0x8e, 0xbc, 0x49, 0xd5, 0x8a, 0xfa, 0x62, 0xa6, 0x2a, 0x94, 0x27, 0xca,
	0x64, 0x95, 0xf4, 0x60, 0x54, 0xa8, 0xb7, 0xf2, 0xc2, 0xbd, 0xb2, 0x32, 0xd0, 0x31, 0xd3, 0x54,
	0xe9, 0x13, 0xea, 0xd5, 0x52, 0xb0, 0xef, 0x1d, 0x86, 0xd0, 0x90, 0xd8, 0x4e, 0x08, 0xa1, 0xab,
	0x6b, 0x6f, 0xa0, 0xe8, 0xcd, 0xc9, 0x28, 0x1a, 0x50, 0x7e, 0xcd, 0x76, 0xbf, 0x47, 0x53, 0x1c,
	0xd3, 0x12, 0x41, 0x1b, 0xce, 0x1a, 0x40, 0xc7, 0xd4, 0x06, 0xb0, 0x51, 0xf8, 0xfc, 0x2e, 0x9a,
	0x95, 0x3d, 0x62, 0x42, 0xa1, 0x81, 0xcf, 0xe7, 0xf3, 0xc2, 0x9d, 0xef, 0x3c, 0x59, 0x29, 0x93,
	0x47, 0x30, 0x23, 0x7b, 0x04, 0x02, 0xda, 0xdd, 0x09, 0xb8, 0xf9, 0x52, 0x5e, 0xb8, 0x17, 0x0f,
	0xe1, 0xe6, 0x26, 0x6c, 0xfe, 0x6d, 0xe4, 0x30, 0x28, 0x9f, 0x4c, 0x2a, 0x8b, 0xa1, 0x7c, 0x87,
	0x84, 0x3c, 0xdb, 0xf6, 0xf3, 0xc2, 0x7d, 0xb7, 0x36, 0x37, 0x83, 0x04, 0x35, 0xd6, 0xb4, 0xd4,
	0xc9, 0x10, 0x1b, 0x7a, 0x0b, 0xf5, 0x2e, 0x30, 0x5d, 0x72, 0xc1, 0x94, 0x69, 0x03, 0x38, 0xdf,
	0x6d, 0x00, 0xb9, 0x19, 0xb0, 0x00, 0x78, 0xd3, 0x01, 0x20, 0xa7, 0x38, 0x7e, 0xbc, 0xbe, 0x59,
	0x5f, 0x53, 0x57, 0xf0, 0xfe, 0x64, 0x7c, 0x36, 0x5b, 0xe3, 0xb3, 0x17, 0x16, 0x96, 0xa9, 0x1e,
	0x51, 0xb8, 0x67, 0xd9, 0xd8, 0xa4, 0x1a, 0x25, 0x19, 0x00, 0x5d, 0x68, 0xe2, 0x13, 0x41, 0xfa,
	0x54, 0x51, 0x21, 0x6d, 0xe8, 0xab, 0xf1, 0xd9, 0x4a, 0x13, 0x9f, 0x99, 0x04, 0xfa, 0x76, 0x5e,
	0xb8, 0x78, 0x43, 0x63, 0x4a, 0x65, 0xe0, 0x99, 0x8e, 0xed, 0x9d, 0x65, 0x4c, 0x13, 0x8b, 0xcc,
	0xf4, 0x77, 0x03, 0x98, 0xfd, 0xd9, 0x04, 0x3c, 0x85, 0x20, 0x7b, 0xbc, 0xe7, 0x1f, 0x6f, 0xb9,
	0xaf, 0x06, 0xa8, 0xb4, 0xae, 0x8e, 0x04, 0x54, 0xaf, 0xa3, 0xb9, 0x2a, 0x05, 0x1a, 0x1c, 0x1f,
	0xd4, 0x03, 0xaf, 0x9e, 0xb7, 0xff, 0xe0, 0x54, 0xfd, 0x10, 0x03, 0xe7, 0x31, 0xd7, 0xaa, 0x4f,
	0x75, 0x92, 0xdf, 0x08, 0xbc, 0x2c, 0x5f, 0x58, 0xc3, 0xa9, 0x62, 0xc5, 0xed, 0x43, 0xb1, 0x02,
	0x6c, 0xb7, 0x19, 0x2b, 0xc6, 0xe2, 0x84, 0xc3, 0x26, 0x9a, 0xae, 0x41, 0xdc, 0x0f, 0xf3, 0xc2,
	0x7d, 0x7f, 0x63, 0xbc, 0x8a, 0x21, 0x78, 0xc9, 0x50, 0x2d, 0x3d, 0xd4, 0x66, 0x01, 0xc1, 0x71,
	0x19, 0x33, 0x65, 0xe7, 0xba, 0x5c, 0xec, 0x50, 0xb5, 0x74, 0xd8, 0x8e, 0x3d, 0xaf, 0x7e, 0x33,
	0x38, 0xac, 0x07, 0xdb, 0xe9, 0xfa, 0x65, 0x0b, 0x2d, 0x8f, 0xc5, 0xf7, 0xb4, 0x9b, 0xb0, 0x48,
	0x05, 0x54, 0xf2, 0x24, 0x83, 0xce, 0xc2, 0x48, 0x17, 0xe5, 0xc4, 0x9a, 0x8b, 0x2c, 0x23, 0x88,
	0xf4, 0x42, 0x73, 0xdb, 0x6b, 0x68, 0xee, 0xf7, 0x5a, 0xe8, 0x62, 0xd4, 0xe3, 0x92, 0x86, 0xba,
	0x86, 0x6c, 0xf6, 0x03, 0x67, 0xdb, 0x5b, 0x79, 0xe1, 0x7e, 0x6f, 0x8d, 0x99, 0xe6, 0x6d, 0x26,
	0xa9, 0xc0, 0x51, 0x8f, 0x73, 0xf3, 0x9e, 0xb5, 0x4b, 0xe9, 0xa0, 0xd1, 0xbb, 0x85, 0xc5, 0x65,
	0x37, 0xb3, 0x4f, 0xa2, 0x1e, 0x4b, 0xa1, 0xf9, 0x3c, 0xc4, 0x44, 0x50, 0xed, 0x72, 0x82, 0xed,
	0xf4, 0x14, 0x4e, 0xf9, 0xfe, 0x47, 0xc1, 0x79, 0xd8, 0xef, 0xa9, 0x5e, 0x61, 0x7a, 0x8d, 0xb5,
	0x7e, 0x46, 0x5a, 0x9b, 0x2b, 0x83, 0x41, 0xd5, 0xf0, 0xf6, 0xfe, 0xb9, 0x35, 0xb9, 0x2d, 0x6e,
	0x89, 0x6c, 0x54, 0x7f, 0x88, 0xa6, 0xc8, 0x60, 0x50, 0x76, 0x3f, 0x97, 0xfc, 0x63, 0x57, 0xf8,
	0xfa, 0x2b, 0x80, 0x45, 0x8b, 0x3f, 0x44, 0x53, 0xfa, 0xeb, 0x88, 0x37, 0x8a, 0x37, 0x91, 0x69,
	0x8f, 0x9a, 0x4e, 0x34, 0x34, 0x04, 0x83, 0xc6, 0x08, 0xbc, 0x48, 0xe8, 0xaf, 0x2a, 0x7c, 0x9f,
	0x0e, 0xea, 0x81, 0x3b, 0x3f, 0x77, 0xd0, 0x34, 0xc8, 0xe2, 0xfc, 0x4d, 0x0b, 0x7d, 0x63, 0xc2,
	0x0f, 0x59, 0x9c, 0xb7, 0xfc, 0xe3, 0x7f, 0x52, 0xb3, 0xf8, 0xb6, 0x7f, 0x82, 0x9f, 0xc2, 0x78,
	0x1f, 0xe4, 0x85, 0x7b, 0x3f, 0x80, 0x06, 0xb6, 0x34, 0x3f, 0xb0, 0x08, 0x9e, 0x96, 0xe9, 0x72,
	0x20, 0xf8, 0x40, 0x5f, 0x24, 0x3c, 0xfc, 0xd8, 0xf2, 0xb4, 0x0b, 0xf5, 0xb8, 0xbe, 0x60, 0xdf,
	0xf9, 0xfb, 0x53, 0xe8, 0xfc, 0xd8, 0x3b, 0x98, 0x73, 0xc5, 0x7f, 0xf9, 0x2f, 0x67, 0x16, 0xf1,
	0x71, 0xef, 0xc3, 0xde, 0xbf, 0xb5, 0xf2, 0xc2, 0xfd, 0xd7, 0x16, 0xcc, 0xcb, 0x52, 0x10, 0x8d,
	0x39, 0xb4, 0x5c, 0x75, 0x97, 0x81, 0x54, 0x5d, 0x96, 0x8e, 0xa2, 0xa4, 0x0f, 0x2f, 0x0f, 0x22,
	0x25, 0x49, 0xd5, 0xe8, 0xd0, 0x12, 0xb3, 0x88, 0x4a, 0x1f, 0x3f, 0x3a, 0x41, 0xc5, 0x5e, 0x1a,
	0x64, 0xf5, 0x0a, 0xb1, 0x15, 0x3c, 0x5d, 0xc6, 0xa4, 0xab, 0x68, 0xd3, 0x41, 0x6c, 0x55, 0x07,
	0xbf, 0x6a, 0xd8, 0xd6, 0x06, 0x9d, 0x12, 0x5d, 0xb0, 0x40, 0x35, 0x40, 0xe0, 0xc5, 0x00, 0xd0,
	0xdf, 0xd8, 0x73, 0x9f, 0xef, 0xfc, 0x43, 0x0b, 0x5d, 0x18, 0x1f, 0x75, 0x2a, 0x55, 0x1c, 0xf5,
	0xf6, 0xbc, 0x78, 0xd5, 0x3f, 0xee, 0x01, 0xd1, 0xdb, 0xcc, 0x0b, 0xf7, 0x85, 0x99, 0x96, 0xa5,
	0x4e, 0xac, 0x94, 0x2c, 0x65, 0x8a, 0x11, 0x5b, 0xab, 0x8c, 0x3f, 0x58, 0x6a, 0xa0, 0x51, 0x62,
	0x72, 0x31, 0xde, 0xbd, 0x70, 0xf6, 0xd1, 0xc2, 0xe8, 0x03, 0x95, 0xf3, 0xa6, 0xff, 0xd2, 0xc7,
	0xc3, 0xc5, 0x2b, 0xfe, 0xcb, 0x1f, 0xb6, 0x3c, 0x48, 0x7d, 0xa5, 0xa5, 0x95, 0xaf, 0x43, 0x3c,
	0xc5, 0xa4, 0xf1, 0xb2, 0xe8, 0x3b, 0xff, 0xd4, 0x42, 0xce, 0xe1, 0x47, 0x0b, 0xc7, 0xf3, 0x8f,
	0x7d, 0xe7, 0x5a, 0x7c, 0xcb, 0x3f, 0xfe, 0xd1, 0xc3, 0xfb, 0x24, 0x2f, 0xdc, 0x1f, 0x54, 0x04,
	0xb2, 0xb1, 0xb7, 0x6c, 0xd8, 0xb6, 0xb6, 0x34, 0x82, 0x77, 0xd8, 0x1e, 0x4d, 0x6d, 0x59, 0xe1,
	0x57, 0xa2, 0x67, 0x03, 0x7d, 0xc5, 0xf5, 0xeb, 0x0f, 0x51, 0x98, 0xc0, 0x8f, 0x46, 0x7c, 0x27,
	0x46, 0x67, 0x2c, 0x1c, 0xb9, 0xec, 0x4f, 0x7c, 0x11, 0x59, 0xfc, 0x7f, 0xfe, 0x11, 0xaf, 0x17,
	0xef, 0xe4, 0x85, 0x7b, 0xcd, 0x0c, 0x56, 0xd7, 0xa8, 0x71, 0x4a, 0x15, 0x4f, 0x97, 0xa4, 0x6d,
	0x20, 0x3a, 0x7f, 0xdd, 0x42, 0x97, 0x27, 0xbf, 0x5c, 0x38, 0xd7, 0xfd, 0x13, 0x3d, 0x81, 0x2c,
	0x2e, 0xf9, 0x27, 0x7b, 0x01, 0xf1, 0x00, 0x98, 0x3d, 0xa6, 0x4a, 0x36, 0xe5, 0x68, 0xbc, 0x04,
	0x8f, 0xbe, 0x83, 0xf8, 0x4e, 0x84, 0xe6, 0xaa, 0x97, 0x8d, 0xda, 0x64, 0x26, 0x3f, 0x76, 0x2c,
	0xce, 0xfb, 0xcf, 0xf9, 0xa8, 0x02, 0x0c, 0x95, 0xb4, 0x8e, 0x28, 0xb3, 0x44, 0x99, 0x9b, 0x58,
	0x5d, 0x7b, 0x5e, 0x19, 0xab, 0xef, 0xfc, 0x5d, 0x0b, 0xbd, 0xf1, 0xd2, 0x37, 0x04, 0xe7, 0x8e,
	0xff, 0xa5, 0x9f, 0x1a, 0x46, 0xa5, 0xb1, 0x2d, 0xba, 0x89, 0xd2, 0xa4, 0x75, 0xa8, 0x31, 0x9a,
	0x28, 0x03, 0x4e, 0x2d, 0xe1, 0x1f, 0xb6, 0xd0, 0xa5, 0x89, 0xfd, 0x07, 0xe7, 0x9a, 0x7f, 0x92,
	0x16, 0xfe, 0xe2, 0x75, 0xff, 0x44, 0x5d, 0x0c, 0x0f, 0x7e, 0xf4, 0xb4, 0x61, 0xfd, 0x5c, 0x8b,
	0x66, 0x5d, 0xbf, 0x2a, 0x41, 0x9d, 0x9f, 0xb5, 0xd0, 0xe5, 0xc9, 0x55, 0xa0, 0x33, 0xb6, 0xc9,
	0x51, 0xed, 0x81, 0xda, 0x5a, 0x8e, 0xa9, 0x26, 0x3d, 0x00, 0x16, 0x66, 0xba, 0x06, 0x62, 0x56,
	0x22, 0x2e, 0x30, 0x4b, 0x63, 0xad, 0x6c, 0x5a, 0xfe, 0x7a, 0xc5, 0x77, 0x7e, 0x8c, 0x9c, 0xc3,
	0xf0, 0xb5, 0x76, 0xf6, 0xa3, 0x0b, 0xc5, 0xda, 0xd9, 0x5f, 0x02, 0x7f, 0x3d, 0x28, 0x01, 0x6a,
	0xed, 0xd8, 0x1e, 0x98, 0x25, 0xf3, 0x9d, 0x0c, 0x5d, 0x18, 0x07, 0x59, 0x8d, 0x98, 0x7c, 0x04,
	0x0c, 0x6d, 0xc4, 0xe4, 0x23, 0x01, 0xda, 0xeb, 0x79, 0xe1, 0xba, 0x66, 0x42, 0x9f, 0xdb, 0xa0,
	0x3d, 0xbb, 0xbf, 0xaf, 0x31, 0xbd, 0x7b, 0x14, 0x6e, 0x73, 0x6e, 0xfa, 0x5f, 0x06, 0xd9, 0x8d,
	0x1a, 0xed, 0xfd, 0xbc, 0x70, 0xef, 0xe8, 0x98, 0x87, 0x7b, 0x44, 0x42, 0xd3, 0x5f, 0x97, 0x7d,
	0x06, 0xc7, 0xc1, 0x5a, 0x1b, 0xe1, 0x8c, 0xd5, 0x96, 0x58, 0xcf, 0x77, 0xfe, 0xbc, 0x85, 0x2e,
	0x1e, 0x82, 0x3d, 0xce, 0x55, 0xff, 0x38, 0xa0, 0xb5, 0xe8, 0x1d, 0x0f, 0x9a, 0xbc, 0xef, 0xe4,
	0x85, 0xfb, 0x5e, 0x23, 0xe0, 0x6a, 0xf8, 0x84, 0xa5, 0x12, 0xd0, 0xe6, 0x8f, 0x26, 0x46, 0x5f,
	0x7f, 0x11, 0x82, 0xc1, 0x4a, 0x99, 0xc1, 0x61, 0xca, 0x24, 0x79, 0x23, 0xba, 0x86, 0x25, 0x70,
	0x7e, 0xe9, 0xb7, 0x4f, 0x7f, 0xde, 0x6a, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0x4a,
	0xad, 0x31, 0xba, 0x2c, 0x00, 0x00,
}
