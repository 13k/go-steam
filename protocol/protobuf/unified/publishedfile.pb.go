// Code generated by protoc-gen-go.
// source: steammessages_publishedfile.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package unified is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package unified to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PublishedFileDetails_EPublishedFileForSaleStatus int32

const (
	PublishedFileDetails_k_PFFSS_NotForSale        PublishedFileDetails_EPublishedFileForSaleStatus = 0
	PublishedFileDetails_k_PFFSS_PendingApproval   PublishedFileDetails_EPublishedFileForSaleStatus = 1
	PublishedFileDetails_k_PFFSS_ApprovedForSale   PublishedFileDetails_EPublishedFileForSaleStatus = 2
	PublishedFileDetails_k_PFFSS_RejectedForSale   PublishedFileDetails_EPublishedFileForSaleStatus = 3
	PublishedFileDetails_k_PFFSS_NoLongerForSale   PublishedFileDetails_EPublishedFileForSaleStatus = 4
	PublishedFileDetails_k_PFFSS_TentativeApproval PublishedFileDetails_EPublishedFileForSaleStatus = 5
)

var PublishedFileDetails_EPublishedFileForSaleStatus_name = map[int32]string{
	0: "k_PFFSS_NotForSale",
	1: "k_PFFSS_PendingApproval",
	2: "k_PFFSS_ApprovedForSale",
	3: "k_PFFSS_RejectedForSale",
	4: "k_PFFSS_NoLongerForSale",
	5: "k_PFFSS_TentativeApproval",
}
var PublishedFileDetails_EPublishedFileForSaleStatus_value = map[string]int32{
	"k_PFFSS_NotForSale":        0,
	"k_PFFSS_PendingApproval":   1,
	"k_PFFSS_ApprovedForSale":   2,
	"k_PFFSS_RejectedForSale":   3,
	"k_PFFSS_NoLongerForSale":   4,
	"k_PFFSS_TentativeApproval": 5,
}

func (x PublishedFileDetails_EPublishedFileForSaleStatus) Enum() *PublishedFileDetails_EPublishedFileForSaleStatus {
	p := new(PublishedFileDetails_EPublishedFileForSaleStatus)
	*p = x
	return p
}
func (x PublishedFileDetails_EPublishedFileForSaleStatus) String() string {
	return proto.EnumName(PublishedFileDetails_EPublishedFileForSaleStatus_name, int32(x))
}
func (x *PublishedFileDetails_EPublishedFileForSaleStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PublishedFileDetails_EPublishedFileForSaleStatus_value, data, "PublishedFileDetails_EPublishedFileForSaleStatus")
	if err != nil {
		return err
	}
	*x = PublishedFileDetails_EPublishedFileForSaleStatus(value)
	return nil
}
func (PublishedFileDetails_EPublishedFileForSaleStatus) EnumDescriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{9, 0}
}

type CPublishedFile_Subscribe_Request struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType         *uint32 `protobuf:"varint,2,opt,name=list_type,json=listType" json:"list_type,omitempty"`
	Appid            *int32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient     *bool   `protobuf:"varint,4,opt,name=notify_client,json=notifyClient" json:"notify_client,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Subscribe_Request) Reset()         { *m = CPublishedFile_Subscribe_Request{} }
func (m *CPublishedFile_Subscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{0}
}

func (m *CPublishedFile_Subscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Subscribe_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Subscribe_Response) Reset()         { *m = CPublishedFile_Subscribe_Response{} }
func (m *CPublishedFile_Subscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{1}
}

type CPublishedFile_Unsubscribe_Request struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType         *uint32 `protobuf:"varint,2,opt,name=list_type,json=listType" json:"list_type,omitempty"`
	Appid            *int32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient     *bool   `protobuf:"varint,4,opt,name=notify_client,json=notifyClient" json:"notify_client,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Request) Reset()         { *m = CPublishedFile_Unsubscribe_Request{} }
func (m *CPublishedFile_Unsubscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{2}
}

func (m *CPublishedFile_Unsubscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Unsubscribe_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Response) Reset()         { *m = CPublishedFile_Unsubscribe_Response{} }
func (m *CPublishedFile_Unsubscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{3}
}

type CPublishedFile_CanSubscribe_Request struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_CanSubscribe_Request) Reset()         { *m = CPublishedFile_CanSubscribe_Request{} }
func (m *CPublishedFile_CanSubscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_CanSubscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_CanSubscribe_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{4}
}

func (m *CPublishedFile_CanSubscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

type CPublishedFile_CanSubscribe_Response struct {
	CanSubscribe     *bool  `protobuf:"varint,1,opt,name=can_subscribe,json=canSubscribe" json:"can_subscribe,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_CanSubscribe_Response) Reset()         { *m = CPublishedFile_CanSubscribe_Response{} }
func (m *CPublishedFile_CanSubscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_CanSubscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_CanSubscribe_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{5}
}

func (m *CPublishedFile_CanSubscribe_Response) GetCanSubscribe() bool {
	if m != nil && m.CanSubscribe != nil {
		return *m.CanSubscribe
	}
	return false
}

type CPublishedFile_Publish_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ConsumerAppid        *uint32  `protobuf:"varint,2,opt,name=consumer_appid,json=consumerAppid" json:"consumer_appid,omitempty"`
	Cloudfilename        *string  `protobuf:"bytes,3,opt,name=cloudfilename" json:"cloudfilename,omitempty"`
	PreviewCloudfilename *string  `protobuf:"bytes,4,opt,name=preview_cloudfilename,json=previewCloudfilename" json:"preview_cloudfilename,omitempty"`
	Title                *string  `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	FileDescription      *string  `protobuf:"bytes,6,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	FileType             *uint32  `protobuf:"varint,7,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	ConsumerShortcutName *string  `protobuf:"bytes,8,opt,name=consumer_shortcut_name,json=consumerShortcutName" json:"consumer_shortcut_name,omitempty"`
	YoutubeUsername      *string  `protobuf:"bytes,9,opt,name=youtube_username,json=youtubeUsername" json:"youtube_username,omitempty"`
	YoutubeVideoid       *string  `protobuf:"bytes,10,opt,name=youtube_videoid,json=youtubeVideoid" json:"youtube_videoid,omitempty"`
	Visibility           *uint32  `protobuf:"varint,11,opt,name=visibility" json:"visibility,omitempty"`
	RedirectUri          *string  `protobuf:"bytes,12,opt,name=redirect_uri,json=redirectUri" json:"redirect_uri,omitempty"`
	Tags                 []string `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	CollectionType       *string  `protobuf:"bytes,14,opt,name=collection_type,json=collectionType" json:"collection_type,omitempty"`
	GameType             *string  `protobuf:"bytes,15,opt,name=game_type,json=gameType" json:"game_type,omitempty"`
	Url                  *string  `protobuf:"bytes,16,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CPublishedFile_Publish_Request) Reset()                    { *m = CPublishedFile_Publish_Request{} }
func (m *CPublishedFile_Publish_Request) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Request) ProtoMessage()               {}
func (*CPublishedFile_Publish_Request) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{6} }

func (m *CPublishedFile_Publish_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetCloudfilename() string {
	if m != nil && m.Cloudfilename != nil {
		return *m.Cloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetPreviewCloudfilename() string {
	if m != nil && m.PreviewCloudfilename != nil {
		return *m.PreviewCloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerShortcutName() string {
	if m != nil && m.ConsumerShortcutName != nil {
		return *m.ConsumerShortcutName
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeUsername() string {
	if m != nil && m.YoutubeUsername != nil {
		return *m.YoutubeUsername
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeVideoid() string {
	if m != nil && m.YoutubeVideoid != nil {
		return *m.YoutubeVideoid
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Publish_Request) GetCollectionType() string {
	if m != nil && m.CollectionType != nil {
		return *m.CollectionType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetGameType() string {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CPublishedFile_Publish_Response struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	RedirectUri      *string `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri" json:"redirect_uri,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Publish_Response) Reset()                    { *m = CPublishedFile_Publish_Response{} }
func (m *CPublishedFile_Publish_Response) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Response) ProtoMessage()               {}
func (*CPublishedFile_Publish_Response) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{7} }

func (m *CPublishedFile_Publish_Response) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Publish_Response) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

type CPublishedFile_GetDetails_Request struct {
	Publishedfileids          []uint64 `protobuf:"fixed64,1,rep,name=publishedfileids" json:"publishedfileids,omitempty"`
	Includetags               *bool    `protobuf:"varint,2,opt,name=includetags" json:"includetags,omitempty"`
	Includeadditionalpreviews *bool    `protobuf:"varint,3,opt,name=includeadditionalpreviews" json:"includeadditionalpreviews,omitempty"`
	Includechildren           *bool    `protobuf:"varint,4,opt,name=includechildren" json:"includechildren,omitempty"`
	Includekvtags             *bool    `protobuf:"varint,5,opt,name=includekvtags" json:"includekvtags,omitempty"`
	Includevotes              *bool    `protobuf:"varint,6,opt,name=includevotes" json:"includevotes,omitempty"`
	ShortDescription          *bool    `protobuf:"varint,8,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	Includeforsaledata        *bool    `protobuf:"varint,10,opt,name=includeforsaledata" json:"includeforsaledata,omitempty"`
	Includemetadata           *bool    `protobuf:"varint,11,opt,name=includemetadata" json:"includemetadata,omitempty"`
	Language                  *int32   `protobuf:"varint,12,opt,name=language,def=0" json:"language,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *CPublishedFile_GetDetails_Request) Reset()         { *m = CPublishedFile_GetDetails_Request{} }
func (m *CPublishedFile_GetDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Request) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{8}
}

const Default_CPublishedFile_GetDetails_Request_Language int32 = 0

func (m *CPublishedFile_GetDetails_Request) GetPublishedfileids() []uint64 {
	if m != nil {
		return m.Publishedfileids
	}
	return nil
}

func (m *CPublishedFile_GetDetails_Request) GetIncludetags() bool {
	if m != nil && m.Includetags != nil {
		return *m.Includetags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludeadditionalpreviews() bool {
	if m != nil && m.Includeadditionalpreviews != nil {
		return *m.Includeadditionalpreviews
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludechildren() bool {
	if m != nil && m.Includechildren != nil {
		return *m.Includechildren
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludekvtags() bool {
	if m != nil && m.Includekvtags != nil {
		return *m.Includekvtags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludevotes() bool {
	if m != nil && m.Includevotes != nil {
		return *m.Includevotes
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetShortDescription() bool {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludeforsaledata() bool {
	if m != nil && m.Includeforsaledata != nil {
		return *m.Includeforsaledata
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludemetadata() bool {
	if m != nil && m.Includemetadata != nil {
		return *m.Includemetadata
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_CPublishedFile_GetDetails_Request_Language
}

type PublishedFileDetails struct {
	Result                *uint32                           `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Publishedfileid       *uint64                           `protobuf:"varint,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Creator               *uint64                           `protobuf:"fixed64,3,opt,name=creator" json:"creator,omitempty"`
	CreatorAppid          *uint32                           `protobuf:"varint,4,opt,name=creator_appid,json=creatorAppid" json:"creator_appid,omitempty"`
	ConsumerAppid         *uint32                           `protobuf:"varint,5,opt,name=consumer_appid,json=consumerAppid" json:"consumer_appid,omitempty"`
	ConsumerShortcutid    *uint32                           `protobuf:"varint,6,opt,name=consumer_shortcutid,json=consumerShortcutid" json:"consumer_shortcutid,omitempty"`
	Filename              *string                           `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	FileSize              *uint64                           `protobuf:"varint,8,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	PreviewFileSize       *uint64                           `protobuf:"varint,9,opt,name=preview_file_size,json=previewFileSize" json:"preview_file_size,omitempty"`
	FileUrl               *string                           `protobuf:"bytes,10,opt,name=file_url,json=fileUrl" json:"file_url,omitempty"`
	PreviewUrl            *string                           `protobuf:"bytes,11,opt,name=preview_url,json=previewUrl" json:"preview_url,omitempty"`
	Youtubevideoid        *string                           `protobuf:"bytes,12,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	Url                   *string                           `protobuf:"bytes,13,opt,name=url" json:"url,omitempty"`
	HcontentFile          *uint64                           `protobuf:"fixed64,14,opt,name=hcontent_file,json=hcontentFile" json:"hcontent_file,omitempty"`
	HcontentPreview       *uint64                           `protobuf:"fixed64,15,opt,name=hcontent_preview,json=hcontentPreview" json:"hcontent_preview,omitempty"`
	Title                 *string                           `protobuf:"bytes,16,opt,name=title" json:"title,omitempty"`
	FileDescription       *string                           `protobuf:"bytes,17,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	ShortDescription      *string                           `protobuf:"bytes,18,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	TimeCreated           *uint32                           `protobuf:"varint,19,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeUpdated           *uint32                           `protobuf:"varint,20,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	Visibility            *uint32                           `protobuf:"varint,21,opt,name=visibility" json:"visibility,omitempty"`
	Flags                 *uint32                           `protobuf:"varint,22,opt,name=flags" json:"flags,omitempty"`
	WorkshopFile          *bool                             `protobuf:"varint,23,opt,name=workshop_file,json=workshopFile" json:"workshop_file,omitempty"`
	WorkshopAccepted      *bool                             `protobuf:"varint,24,opt,name=workshop_accepted,json=workshopAccepted" json:"workshop_accepted,omitempty"`
	ShowSubscribeAll      *bool                             `protobuf:"varint,25,opt,name=show_subscribe_all,json=showSubscribeAll" json:"show_subscribe_all,omitempty"`
	NumCommentsDeveloper  *int32                            `protobuf:"varint,26,opt,name=num_comments_developer,json=numCommentsDeveloper" json:"num_comments_developer,omitempty"`
	NumCommentsPublic     *int32                            `protobuf:"varint,27,opt,name=num_comments_public,json=numCommentsPublic" json:"num_comments_public,omitempty"`
	Banned                *bool                             `protobuf:"varint,28,opt,name=banned" json:"banned,omitempty"`
	BanReason             *string                           `protobuf:"bytes,29,opt,name=ban_reason,json=banReason" json:"ban_reason,omitempty"`
	Banner                *uint64                           `protobuf:"fixed64,30,opt,name=banner" json:"banner,omitempty"`
	CanBeDeleted          *bool                             `protobuf:"varint,31,opt,name=can_be_deleted,json=canBeDeleted" json:"can_be_deleted,omitempty"`
	Incompatible          *bool                             `protobuf:"varint,32,opt,name=incompatible" json:"incompatible,omitempty"`
	AppName               *string                           `protobuf:"bytes,33,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	FileType              *uint32                           `protobuf:"varint,34,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	CanSubscribe          *bool                             `protobuf:"varint,35,opt,name=can_subscribe,json=canSubscribe" json:"can_subscribe,omitempty"`
	Subscriptions         *uint32                           `protobuf:"varint,36,opt,name=subscriptions" json:"subscriptions,omitempty"`
	Favorited             *uint32                           `protobuf:"varint,37,opt,name=favorited" json:"favorited,omitempty"`
	Followers             *uint32                           `protobuf:"varint,38,opt,name=followers" json:"followers,omitempty"`
	LifetimeSubscriptions *uint32                           `protobuf:"varint,39,opt,name=lifetime_subscriptions,json=lifetimeSubscriptions" json:"lifetime_subscriptions,omitempty"`
	LifetimeFavorited     *uint32                           `protobuf:"varint,40,opt,name=lifetime_favorited,json=lifetimeFavorited" json:"lifetime_favorited,omitempty"`
	LifetimeFollowers     *uint32                           `protobuf:"varint,41,opt,name=lifetime_followers,json=lifetimeFollowers" json:"lifetime_followers,omitempty"`
	Views                 *uint32                           `protobuf:"varint,42,opt,name=views" json:"views,omitempty"`
	ImageWidth            *uint32                           `protobuf:"varint,43,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight           *uint32                           `protobuf:"varint,44,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	ImageUrl              *string                           `protobuf:"bytes,45,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	SpoilerTag            *bool                             `protobuf:"varint,46,opt,name=spoiler_tag,json=spoilerTag" json:"spoiler_tag,omitempty"`
	Shortcutid            *uint32                           `protobuf:"varint,47,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Shortcutname          *string                           `protobuf:"bytes,48,opt,name=shortcutname" json:"shortcutname,omitempty"`
	NumChildren           *uint32                           `protobuf:"varint,49,opt,name=num_children,json=numChildren" json:"num_children,omitempty"`
	NumReports            *uint32                           `protobuf:"varint,50,opt,name=num_reports,json=numReports" json:"num_reports,omitempty"`
	Previews              []*PublishedFileDetails_Preview   `protobuf:"bytes,51,rep,name=previews" json:"previews,omitempty"`
	Tags                  []*PublishedFileDetails_Tag       `protobuf:"bytes,52,rep,name=tags" json:"tags,omitempty"`
	Children              []*PublishedFileDetails_Child     `protobuf:"bytes,53,rep,name=children" json:"children,omitempty"`
	Kvtags                []*PublishedFileDetails_KVTag     `protobuf:"bytes,54,rep,name=kvtags" json:"kvtags,omitempty"`
	VoteData              *PublishedFileDetails_VoteData    `protobuf:"bytes,55,opt,name=vote_data,json=voteData" json:"vote_data,omitempty"`
	TimeSubscribed        *uint32                           `protobuf:"varint,56,opt,name=time_subscribed,json=timeSubscribed" json:"time_subscribed,omitempty"`
	ForSaleData           *PublishedFileDetails_ForSaleData `protobuf:"bytes,57,opt,name=for_sale_data,json=forSaleData" json:"for_sale_data,omitempty"`
	Metadata              *string                           `protobuf:"bytes,58,opt,name=metadata" json:"metadata,omitempty"`
	IncompatibleActor     *uint64                           `protobuf:"fixed64,59,opt,name=incompatible_actor,json=incompatibleActor" json:"incompatible_actor,omitempty"`
	IncompatibleTimestamp *uint32                           `protobuf:"varint,60,opt,name=incompatible_timestamp,json=incompatibleTimestamp" json:"incompatible_timestamp,omitempty"`
	Language              *int32                            `protobuf:"varint,61,opt,name=language,def=0" json:"language,omitempty"`
	XXX_unrecognized      []byte                            `json:"-"`
}

func (m *PublishedFileDetails) Reset()                    { *m = PublishedFileDetails{} }
func (m *PublishedFileDetails) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails) ProtoMessage()               {}
func (*PublishedFileDetails) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{9} }

const Default_PublishedFileDetails_Language int32 = 0

func (m *PublishedFileDetails) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *PublishedFileDetails) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails) GetCreator() uint64 {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return 0
}

func (m *PublishedFileDetails) GetCreatorAppid() uint32 {
	if m != nil && m.CreatorAppid != nil {
		return *m.CreatorAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerShortcutid() uint32 {
	if m != nil && m.ConsumerShortcutid != nil {
		return *m.ConsumerShortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails) GetFileSize() uint64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviewFileSize() uint64 {
	if m != nil && m.PreviewFileSize != nil {
		return *m.PreviewFileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetFileUrl() string {
	if m != nil && m.FileUrl != nil {
		return *m.FileUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetPreviewUrl() string {
	if m != nil && m.PreviewUrl != nil {
		return *m.PreviewUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

func (m *PublishedFileDetails) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails) GetHcontentFile() uint64 {
	if m != nil && m.HcontentFile != nil {
		return *m.HcontentFile
	}
	return 0
}

func (m *PublishedFileDetails) GetHcontentPreview() uint64 {
	if m != nil && m.HcontentPreview != nil {
		return *m.HcontentPreview
	}
	return 0
}

func (m *PublishedFileDetails) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PublishedFileDetails) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *PublishedFileDetails) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *PublishedFileDetails) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *PublishedFileDetails) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *PublishedFileDetails) GetWorkshopFile() bool {
	if m != nil && m.WorkshopFile != nil {
		return *m.WorkshopFile
	}
	return false
}

func (m *PublishedFileDetails) GetWorkshopAccepted() bool {
	if m != nil && m.WorkshopAccepted != nil {
		return *m.WorkshopAccepted
	}
	return false
}

func (m *PublishedFileDetails) GetShowSubscribeAll() bool {
	if m != nil && m.ShowSubscribeAll != nil {
		return *m.ShowSubscribeAll
	}
	return false
}

func (m *PublishedFileDetails) GetNumCommentsDeveloper() int32 {
	if m != nil && m.NumCommentsDeveloper != nil {
		return *m.NumCommentsDeveloper
	}
	return 0
}

func (m *PublishedFileDetails) GetNumCommentsPublic() int32 {
	if m != nil && m.NumCommentsPublic != nil {
		return *m.NumCommentsPublic
	}
	return 0
}

func (m *PublishedFileDetails) GetBanned() bool {
	if m != nil && m.Banned != nil {
		return *m.Banned
	}
	return false
}

func (m *PublishedFileDetails) GetBanReason() string {
	if m != nil && m.BanReason != nil {
		return *m.BanReason
	}
	return ""
}

func (m *PublishedFileDetails) GetBanner() uint64 {
	if m != nil && m.Banner != nil {
		return *m.Banner
	}
	return 0
}

func (m *PublishedFileDetails) GetCanBeDeleted() bool {
	if m != nil && m.CanBeDeleted != nil {
		return *m.CanBeDeleted
	}
	return false
}

func (m *PublishedFileDetails) GetIncompatible() bool {
	if m != nil && m.Incompatible != nil {
		return *m.Incompatible
	}
	return false
}

func (m *PublishedFileDetails) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *PublishedFileDetails) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *PublishedFileDetails) GetCanSubscribe() bool {
	if m != nil && m.CanSubscribe != nil {
		return *m.CanSubscribe
	}
	return false
}

func (m *PublishedFileDetails) GetSubscriptions() uint32 {
	if m != nil && m.Subscriptions != nil {
		return *m.Subscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetFavorited() uint32 {
	if m != nil && m.Favorited != nil {
		return *m.Favorited
	}
	return 0
}

func (m *PublishedFileDetails) GetFollowers() uint32 {
	if m != nil && m.Followers != nil {
		return *m.Followers
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeSubscriptions() uint32 {
	if m != nil && m.LifetimeSubscriptions != nil {
		return *m.LifetimeSubscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFavorited() uint32 {
	if m != nil && m.LifetimeFavorited != nil {
		return *m.LifetimeFavorited
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFollowers() uint32 {
	if m != nil && m.LifetimeFollowers != nil {
		return *m.LifetimeFollowers
	}
	return 0
}

func (m *PublishedFileDetails) GetViews() uint32 {
	if m != nil && m.Views != nil {
		return *m.Views
	}
	return 0
}

func (m *PublishedFileDetails) GetImageWidth() uint32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *PublishedFileDetails) GetImageHeight() uint32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

func (m *PublishedFileDetails) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetSpoilerTag() bool {
	if m != nil && m.SpoilerTag != nil {
		return *m.SpoilerTag
	}
	return false
}

func (m *PublishedFileDetails) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetShortcutname() string {
	if m != nil && m.Shortcutname != nil {
		return *m.Shortcutname
	}
	return ""
}

func (m *PublishedFileDetails) GetNumChildren() uint32 {
	if m != nil && m.NumChildren != nil {
		return *m.NumChildren
	}
	return 0
}

func (m *PublishedFileDetails) GetNumReports() uint32 {
	if m != nil && m.NumReports != nil {
		return *m.NumReports
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviews() []*PublishedFileDetails_Preview {
	if m != nil {
		return m.Previews
	}
	return nil
}

func (m *PublishedFileDetails) GetTags() []*PublishedFileDetails_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishedFileDetails) GetChildren() []*PublishedFileDetails_Child {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *PublishedFileDetails) GetKvtags() []*PublishedFileDetails_KVTag {
	if m != nil {
		return m.Kvtags
	}
	return nil
}

func (m *PublishedFileDetails) GetVoteData() *PublishedFileDetails_VoteData {
	if m != nil {
		return m.VoteData
	}
	return nil
}

func (m *PublishedFileDetails) GetTimeSubscribed() uint32 {
	if m != nil && m.TimeSubscribed != nil {
		return *m.TimeSubscribed
	}
	return 0
}

func (m *PublishedFileDetails) GetForSaleData() *PublishedFileDetails_ForSaleData {
	if m != nil {
		return m.ForSaleData
	}
	return nil
}

func (m *PublishedFileDetails) GetMetadata() string {
	if m != nil && m.Metadata != nil {
		return *m.Metadata
	}
	return ""
}

func (m *PublishedFileDetails) GetIncompatibleActor() uint64 {
	if m != nil && m.IncompatibleActor != nil {
		return *m.IncompatibleActor
	}
	return 0
}

func (m *PublishedFileDetails) GetIncompatibleTimestamp() uint32 {
	if m != nil && m.IncompatibleTimestamp != nil {
		return *m.IncompatibleTimestamp
	}
	return 0
}

func (m *PublishedFileDetails) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_PublishedFileDetails_Language
}

type PublishedFileDetails_Tag struct {
	Tag              *string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Adminonly        *bool   `protobuf:"varint,2,opt,name=adminonly" json:"adminonly,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Tag) Reset()                    { *m = PublishedFileDetails_Tag{} }
func (m *PublishedFileDetails_Tag) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Tag) ProtoMessage()               {}
func (*PublishedFileDetails_Tag) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{9, 0} }

func (m *PublishedFileDetails_Tag) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *PublishedFileDetails_Tag) GetAdminonly() bool {
	if m != nil && m.Adminonly != nil {
		return *m.Adminonly
	}
	return false
}

type PublishedFileDetails_Preview struct {
	Previewid        *uint64 `protobuf:"varint,1,opt,name=previewid" json:"previewid,omitempty"`
	Sortorder        *uint32 `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Size             *uint32 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Filename         *string `protobuf:"bytes,5,opt,name=filename" json:"filename,omitempty"`
	Youtubevideoid   *string `protobuf:"bytes,6,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Preview) Reset()                    { *m = PublishedFileDetails_Preview{} }
func (m *PublishedFileDetails_Preview) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Preview) ProtoMessage()               {}
func (*PublishedFileDetails_Preview) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{9, 1} }

func (m *PublishedFileDetails_Preview) GetPreviewid() uint64 {
	if m != nil && m.Previewid != nil {
		return *m.Previewid
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

type PublishedFileDetails_Child struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Sortorder        *uint32 `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	FileType         *uint32 `protobuf:"varint,3,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Child) Reset()                    { *m = PublishedFileDetails_Child{} }
func (m *PublishedFileDetails_Child) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Child) ProtoMessage()               {}
func (*PublishedFileDetails_Child) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{9, 2} }

func (m *PublishedFileDetails_Child) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

type PublishedFileDetails_KVTag struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_KVTag) Reset()                    { *m = PublishedFileDetails_KVTag{} }
func (m *PublishedFileDetails_KVTag) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_KVTag) ProtoMessage()               {}
func (*PublishedFileDetails_KVTag) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{9, 3} }

func (m *PublishedFileDetails_KVTag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *PublishedFileDetails_KVTag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type PublishedFileDetails_VoteData struct {
	Score            *float32 `protobuf:"fixed32,1,opt,name=score" json:"score,omitempty"`
	VotesUp          *uint32  `protobuf:"varint,2,opt,name=votes_up,json=votesUp" json:"votes_up,omitempty"`
	VotesDown        *uint32  `protobuf:"varint,3,opt,name=votes_down,json=votesDown" json:"votes_down,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PublishedFileDetails_VoteData) Reset()         { *m = PublishedFileDetails_VoteData{} }
func (m *PublishedFileDetails_VoteData) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_VoteData) ProtoMessage()    {}
func (*PublishedFileDetails_VoteData) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{9, 4}
}

func (m *PublishedFileDetails_VoteData) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesUp() uint32 {
	if m != nil && m.VotesUp != nil {
		return *m.VotesUp
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesDown() uint32 {
	if m != nil && m.VotesDown != nil {
		return *m.VotesDown
	}
	return 0
}

type PublishedFileDetails_ForSaleData struct {
	IsForSale             *bool                                             `protobuf:"varint,1,opt,name=is_for_sale,json=isForSale" json:"is_for_sale,omitempty"`
	PriceCategory         *uint32                                           `protobuf:"varint,2,opt,name=price_category,json=priceCategory" json:"price_category,omitempty"`
	Estatus               *PublishedFileDetails_EPublishedFileForSaleStatus `protobuf:"varint,3,opt,name=estatus,enum=PublishedFileDetails_EPublishedFileForSaleStatus,def=0" json:"estatus,omitempty"`
	PriceCategoryFloor    *uint32                                           `protobuf:"varint,4,opt,name=price_category_floor,json=priceCategoryFloor" json:"price_category_floor,omitempty"`
	PriceIsPayWhatYouWant *bool                                             `protobuf:"varint,5,opt,name=price_is_pay_what_you_want,json=priceIsPayWhatYouWant" json:"price_is_pay_what_you_want,omitempty"`
	DiscountPercentage    *uint32                                           `protobuf:"varint,6,opt,name=discount_percentage,json=discountPercentage" json:"discount_percentage,omitempty"`
	XXX_unrecognized      []byte                                            `json:"-"`
}

func (m *PublishedFileDetails_ForSaleData) Reset()         { *m = PublishedFileDetails_ForSaleData{} }
func (m *PublishedFileDetails_ForSaleData) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_ForSaleData) ProtoMessage()    {}
func (*PublishedFileDetails_ForSaleData) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{9, 5}
}

const Default_PublishedFileDetails_ForSaleData_Estatus PublishedFileDetails_EPublishedFileForSaleStatus = PublishedFileDetails_k_PFFSS_NotForSale

func (m *PublishedFileDetails_ForSaleData) GetIsForSale() bool {
	if m != nil && m.IsForSale != nil {
		return *m.IsForSale
	}
	return false
}

func (m *PublishedFileDetails_ForSaleData) GetPriceCategory() uint32 {
	if m != nil && m.PriceCategory != nil {
		return *m.PriceCategory
	}
	return 0
}

func (m *PublishedFileDetails_ForSaleData) GetEstatus() PublishedFileDetails_EPublishedFileForSaleStatus {
	if m != nil && m.Estatus != nil {
		return *m.Estatus
	}
	return Default_PublishedFileDetails_ForSaleData_Estatus
}

func (m *PublishedFileDetails_ForSaleData) GetPriceCategoryFloor() uint32 {
	if m != nil && m.PriceCategoryFloor != nil {
		return *m.PriceCategoryFloor
	}
	return 0
}

func (m *PublishedFileDetails_ForSaleData) GetPriceIsPayWhatYouWant() bool {
	if m != nil && m.PriceIsPayWhatYouWant != nil {
		return *m.PriceIsPayWhatYouWant
	}
	return false
}

func (m *PublishedFileDetails_ForSaleData) GetDiscountPercentage() uint32 {
	if m != nil && m.DiscountPercentage != nil {
		return *m.DiscountPercentage
	}
	return 0
}

type CPublishedFile_GetDetails_Response struct {
	Publishedfiledetails []*PublishedFileDetails `protobuf:"bytes,1,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	XXX_unrecognized     []byte                  `json:"-"`
}

func (m *CPublishedFile_GetDetails_Response) Reset()         { *m = CPublishedFile_GetDetails_Response{} }
func (m *CPublishedFile_GetDetails_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Response) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{10}
}

func (m *CPublishedFile_GetDetails_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

type CPublishedFile_GetItemInfo_Request struct {
	AppId            *uint32                                            `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	LastTimeUpdated  *uint32                                            `protobuf:"varint,2,opt,name=last_time_updated,json=lastTimeUpdated" json:"last_time_updated,omitempty"`
	WorkshopItems    []*CPublishedFile_GetItemInfo_Request_WorkshopItem `protobuf:"bytes,3,rep,name=workshop_items,json=workshopItems" json:"workshop_items,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CPublishedFile_GetItemInfo_Request) Reset()         { *m = CPublishedFile_GetItemInfo_Request{} }
func (m *CPublishedFile_GetItemInfo_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetItemInfo_Request) ProtoMessage()    {}
func (*CPublishedFile_GetItemInfo_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{11}
}

func (m *CPublishedFile_GetItemInfo_Request) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Request) GetLastTimeUpdated() uint32 {
	if m != nil && m.LastTimeUpdated != nil {
		return *m.LastTimeUpdated
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Request) GetWorkshopItems() []*CPublishedFile_GetItemInfo_Request_WorkshopItem {
	if m != nil {
		return m.WorkshopItems
	}
	return nil
}

type CPublishedFile_GetItemInfo_Request_WorkshopItem struct {
	PublishedFileId  *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
	TimeUpdated      *uint32 `protobuf:"varint,2,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetItemInfo_Request_WorkshopItem) Reset() {
	*m = CPublishedFile_GetItemInfo_Request_WorkshopItem{}
}
func (m *CPublishedFile_GetItemInfo_Request_WorkshopItem) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_GetItemInfo_Request_WorkshopItem) ProtoMessage() {}
func (*CPublishedFile_GetItemInfo_Request_WorkshopItem) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{11, 0}
}

func (m *CPublishedFile_GetItemInfo_Request_WorkshopItem) GetPublishedFileId() uint64 {
	if m != nil && m.PublishedFileId != nil {
		return *m.PublishedFileId
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Request_WorkshopItem) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

type CPublishedFile_GetItemInfo_Response struct {
	UpdateTime       *uint32                                                 `protobuf:"varint,1,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	WorkshopItems    []*CPublishedFile_GetItemInfo_Response_WorkshopItemInfo `protobuf:"bytes,2,rep,name=workshop_items,json=workshopItems" json:"workshop_items,omitempty"`
	XXX_unrecognized []byte                                                  `json:"-"`
}

func (m *CPublishedFile_GetItemInfo_Response) Reset()         { *m = CPublishedFile_GetItemInfo_Response{} }
func (m *CPublishedFile_GetItemInfo_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetItemInfo_Response) ProtoMessage()    {}
func (*CPublishedFile_GetItemInfo_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{12}
}

func (m *CPublishedFile_GetItemInfo_Response) GetUpdateTime() uint32 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Response) GetWorkshopItems() []*CPublishedFile_GetItemInfo_Response_WorkshopItemInfo {
	if m != nil {
		return m.WorkshopItems
	}
	return nil
}

type CPublishedFile_GetItemInfo_Response_WorkshopItemInfo struct {
	PublishedFileId  *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
	TimeUpdated      *uint32 `protobuf:"varint,2,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	ManifestId       *uint64 `protobuf:"fixed64,3,opt,name=manifest_id,json=manifestId" json:"manifest_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) Reset() {
	*m = CPublishedFile_GetItemInfo_Response_WorkshopItemInfo{}
}
func (m *CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) ProtoMessage() {}
func (*CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{12, 0}
}

func (m *CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) GetPublishedFileId() uint64 {
	if m != nil && m.PublishedFileId != nil {
		return *m.PublishedFileId
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *CPublishedFile_GetItemInfo_Response_WorkshopItemInfo) GetManifestId() uint64 {
	if m != nil && m.ManifestId != nil {
		return *m.ManifestId
	}
	return 0
}

type CPublishedFile_GetUserFiles_Request struct {
	Steamid                *uint64                                      `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid                  *uint32                                      `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Page                   *uint32                                      `protobuf:"varint,4,opt,name=page,def=1" json:"page,omitempty"`
	Numperpage             *uint32                                      `protobuf:"varint,5,opt,name=numperpage,def=1" json:"numperpage,omitempty"`
	Type                   *string                                      `protobuf:"bytes,6,opt,name=type,def=myfiles" json:"type,omitempty"`
	Sortmethod             *string                                      `protobuf:"bytes,7,opt,name=sortmethod,def=lastupdated" json:"sortmethod,omitempty"`
	Privacy                *uint32                                      `protobuf:"varint,9,opt,name=privacy" json:"privacy,omitempty"`
	Requiredtags           []string                                     `protobuf:"bytes,10,rep,name=requiredtags" json:"requiredtags,omitempty"`
	Excludedtags           []string                                     `protobuf:"bytes,11,rep,name=excludedtags" json:"excludedtags,omitempty"`
	RequiredKvTags         []*CPublishedFile_GetUserFiles_Request_KVTag `protobuf:"bytes,30,rep,name=required_kv_tags,json=requiredKvTags" json:"required_kv_tags,omitempty"`
	Filetype               *uint32                                      `protobuf:"varint,14,opt,name=filetype" json:"filetype,omitempty"`
	CreatorAppid           *uint32                                      `protobuf:"varint,15,opt,name=creator_appid,json=creatorAppid" json:"creator_appid,omitempty"`
	MatchCloudFilename     *string                                      `protobuf:"bytes,16,opt,name=match_cloud_filename,json=matchCloudFilename" json:"match_cloud_filename,omitempty"`
	CacheMaxAgeSeconds     *uint32                                      `protobuf:"varint,27,opt,name=cache_max_age_seconds,json=cacheMaxAgeSeconds,def=0" json:"cache_max_age_seconds,omitempty"`
	Language               *int32                                       `protobuf:"varint,29,opt,name=language,def=0" json:"language,omitempty"`
	Totalonly              *bool                                        `protobuf:"varint,17,opt,name=totalonly" json:"totalonly,omitempty"`
	IdsOnly                *bool                                        `protobuf:"varint,18,opt,name=ids_only,json=idsOnly" json:"ids_only,omitempty"`
	ReturnVoteData         *bool                                        `protobuf:"varint,19,opt,name=return_vote_data,json=returnVoteData,def=1" json:"return_vote_data,omitempty"`
	ReturnTags             *bool                                        `protobuf:"varint,20,opt,name=return_tags,json=returnTags" json:"return_tags,omitempty"`
	ReturnKvTags           *bool                                        `protobuf:"varint,21,opt,name=return_kv_tags,json=returnKvTags,def=1" json:"return_kv_tags,omitempty"`
	ReturnPreviews         *bool                                        `protobuf:"varint,22,opt,name=return_previews,json=returnPreviews" json:"return_previews,omitempty"`
	ReturnChildren         *bool                                        `protobuf:"varint,23,opt,name=return_children,json=returnChildren" json:"return_children,omitempty"`
	ReturnShortDescription *bool                                        `protobuf:"varint,24,opt,name=return_short_description,json=returnShortDescription,def=1" json:"return_short_description,omitempty"`
	ReturnForSaleData      *bool                                        `protobuf:"varint,26,opt,name=return_for_sale_data,json=returnForSaleData" json:"return_for_sale_data,omitempty"`
	ReturnMetadata         *bool                                        `protobuf:"varint,28,opt,name=return_metadata,json=returnMetadata,def=0" json:"return_metadata,omitempty"`
	XXX_unrecognized       []byte                                       `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Request) Reset()         { *m = CPublishedFile_GetUserFiles_Request{} }
func (m *CPublishedFile_GetUserFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Request) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{13}
}

const Default_CPublishedFile_GetUserFiles_Request_Page uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Numperpage uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Type string = "myfiles"
const Default_CPublishedFile_GetUserFiles_Request_Sortmethod string = "lastupdated"
const Default_CPublishedFile_GetUserFiles_Request_CacheMaxAgeSeconds uint32 = 0
const Default_CPublishedFile_GetUserFiles_Request_Language int32 = 0
const Default_CPublishedFile_GetUserFiles_Request_ReturnVoteData bool = true
const Default_CPublishedFile_GetUserFiles_Request_ReturnKvTags bool = true
const Default_CPublishedFile_GetUserFiles_Request_ReturnShortDescription bool = true
const Default_CPublishedFile_GetUserFiles_Request_ReturnMetadata bool = false

func (m *CPublishedFile_GetUserFiles_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return Default_CPublishedFile_GetUserFiles_Request_Page
}

func (m *CPublishedFile_GetUserFiles_Request) GetNumperpage() uint32 {
	if m != nil && m.Numperpage != nil {
		return *m.Numperpage
	}
	return Default_CPublishedFile_GetUserFiles_Request_Numperpage
}

func (m *CPublishedFile_GetUserFiles_Request) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CPublishedFile_GetUserFiles_Request_Type
}

func (m *CPublishedFile_GetUserFiles_Request) GetSortmethod() string {
	if m != nil && m.Sortmethod != nil {
		return *m.Sortmethod
	}
	return Default_CPublishedFile_GetUserFiles_Request_Sortmethod
}

func (m *CPublishedFile_GetUserFiles_Request) GetPrivacy() uint32 {
	if m != nil && m.Privacy != nil {
		return *m.Privacy
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetRequiredtags() []string {
	if m != nil {
		return m.Requiredtags
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Request) GetExcludedtags() []string {
	if m != nil {
		return m.Excludedtags
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Request) GetRequiredKvTags() []*CPublishedFile_GetUserFiles_Request_KVTag {
	if m != nil {
		return m.RequiredKvTags
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Request) GetFiletype() uint32 {
	if m != nil && m.Filetype != nil {
		return *m.Filetype
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetCreatorAppid() uint32 {
	if m != nil && m.CreatorAppid != nil {
		return *m.CreatorAppid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetMatchCloudFilename() string {
	if m != nil && m.MatchCloudFilename != nil {
		return *m.MatchCloudFilename
	}
	return ""
}

func (m *CPublishedFile_GetUserFiles_Request) GetCacheMaxAgeSeconds() uint32 {
	if m != nil && m.CacheMaxAgeSeconds != nil {
		return *m.CacheMaxAgeSeconds
	}
	return Default_CPublishedFile_GetUserFiles_Request_CacheMaxAgeSeconds
}

func (m *CPublishedFile_GetUserFiles_Request) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_CPublishedFile_GetUserFiles_Request_Language
}

func (m *CPublishedFile_GetUserFiles_Request) GetTotalonly() bool {
	if m != nil && m.Totalonly != nil {
		return *m.Totalonly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetIdsOnly() bool {
	if m != nil && m.IdsOnly != nil {
		return *m.IdsOnly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnVoteData() bool {
	if m != nil && m.ReturnVoteData != nil {
		return *m.ReturnVoteData
	}
	return Default_CPublishedFile_GetUserFiles_Request_ReturnVoteData
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnTags() bool {
	if m != nil && m.ReturnTags != nil {
		return *m.ReturnTags
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnKvTags() bool {
	if m != nil && m.ReturnKvTags != nil {
		return *m.ReturnKvTags
	}
	return Default_CPublishedFile_GetUserFiles_Request_ReturnKvTags
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnPreviews() bool {
	if m != nil && m.ReturnPreviews != nil {
		return *m.ReturnPreviews
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnChildren() bool {
	if m != nil && m.ReturnChildren != nil {
		return *m.ReturnChildren
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnShortDescription() bool {
	if m != nil && m.ReturnShortDescription != nil {
		return *m.ReturnShortDescription
	}
	return Default_CPublishedFile_GetUserFiles_Request_ReturnShortDescription
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnForSaleData() bool {
	if m != nil && m.ReturnForSaleData != nil {
		return *m.ReturnForSaleData
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetReturnMetadata() bool {
	if m != nil && m.ReturnMetadata != nil {
		return *m.ReturnMetadata
	}
	return Default_CPublishedFile_GetUserFiles_Request_ReturnMetadata
}

type CPublishedFile_GetUserFiles_Request_KVTag struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Request_KVTag) Reset() {
	*m = CPublishedFile_GetUserFiles_Request_KVTag{}
}
func (m *CPublishedFile_GetUserFiles_Request_KVTag) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Request_KVTag) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Request_KVTag) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{13, 0}
}

func (m *CPublishedFile_GetUserFiles_Request_KVTag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CPublishedFile_GetUserFiles_Request_KVTag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CPublishedFile_GetUserFiles_Response struct {
	Total                *uint32                                     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Startindex           *uint32                                     `protobuf:"varint,2,opt,name=startindex" json:"startindex,omitempty"`
	Publishedfiledetails []*PublishedFileDetails                     `protobuf:"bytes,3,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	Apps                 []*CPublishedFile_GetUserFiles_Response_App `protobuf:"bytes,4,rep,name=apps" json:"apps,omitempty"`
	XXX_unrecognized     []byte                                      `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response) Reset()         { *m = CPublishedFile_GetUserFiles_Response{} }
func (m *CPublishedFile_GetUserFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{14}
}

func (m *CPublishedFile_GetUserFiles_Response) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetStartindex() uint32 {
	if m != nil && m.Startindex != nil {
		return *m.Startindex
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Response) GetApps() []*CPublishedFile_GetUserFiles_Response_App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type CPublishedFile_GetUserFiles_Response_App struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Shortcutid       *uint32 `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Private          *bool   `protobuf:"varint,4,opt,name=private" json:"private,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response_App) Reset() {
	*m = CPublishedFile_GetUserFiles_Response_App{}
}
func (m *CPublishedFile_GetUserFiles_Response_App) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response_App) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response_App) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{14, 0}
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetPrivate() bool {
	if m != nil && m.Private != nil {
		return *m.Private
	}
	return false
}

type CPublishedFile_Update_Request struct {
	Appid            *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Publishedfileid  *uint64  `protobuf:"fixed64,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Title            *string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	FileDescription  *string  `protobuf:"bytes,4,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	Visibility       *uint32  `protobuf:"varint,5,opt,name=visibility" json:"visibility,omitempty"`
	Tags             []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Filename         *string  `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	PreviewFilename  *string  `protobuf:"bytes,8,opt,name=preview_filename,json=previewFilename" json:"preview_filename,omitempty"`
	ImageWidth       *uint32  `protobuf:"varint,15,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight      *uint32  `protobuf:"varint,16,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPublishedFile_Update_Request) Reset()                    { *m = CPublishedFile_Update_Request{} }
func (m *CPublishedFile_Update_Request) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Request) ProtoMessage()               {}
func (*CPublishedFile_Update_Request) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{15} }

func (m *CPublishedFile_Update_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Update_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetPreviewFilename() string {
	if m != nil && m.PreviewFilename != nil {
		return *m.PreviewFilename
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetImageWidth() uint32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetImageHeight() uint32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

type CPublishedFile_Update_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Update_Response) Reset()                    { *m = CPublishedFile_Update_Response{} }
func (m *CPublishedFile_Update_Response) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Response) ProtoMessage()               {}
func (*CPublishedFile_Update_Response) Descriptor() ([]byte, []int) { return publishedfile_fileDescriptor0, []int{16} }

type CPublishedFile_GetChangeHistoryEntry_Request struct {
	Publishedfileid  *uint64 `protobuf:"fixed64,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Language         *int32  `protobuf:"varint,3,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetChangeHistoryEntry_Request) Reset() {
	*m = CPublishedFile_GetChangeHistoryEntry_Request{}
}
func (m *CPublishedFile_GetChangeHistoryEntry_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_GetChangeHistoryEntry_Request) ProtoMessage() {}
func (*CPublishedFile_GetChangeHistoryEntry_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{17}
}

func (m *CPublishedFile_GetChangeHistoryEntry_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistoryEntry_Request) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistoryEntry_Request) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return 0
}

type CPublishedFile_GetChangeHistoryEntry_Response struct {
	ChangeDescription *string `protobuf:"bytes,1,opt,name=change_description,json=changeDescription" json:"change_description,omitempty"`
	Language          *int32  `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CPublishedFile_GetChangeHistoryEntry_Response) Reset() {
	*m = CPublishedFile_GetChangeHistoryEntry_Response{}
}
func (m *CPublishedFile_GetChangeHistoryEntry_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_GetChangeHistoryEntry_Response) ProtoMessage() {}
func (*CPublishedFile_GetChangeHistoryEntry_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{18}
}

func (m *CPublishedFile_GetChangeHistoryEntry_Response) GetChangeDescription() string {
	if m != nil && m.ChangeDescription != nil {
		return *m.ChangeDescription
	}
	return ""
}

func (m *CPublishedFile_GetChangeHistoryEntry_Response) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return 0
}

type CPublishedFile_GetChangeHistory_Request struct {
	Publishedfileid  *uint64 `protobuf:"fixed64,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	TotalOnly        *bool   `protobuf:"varint,2,opt,name=total_only,json=totalOnly" json:"total_only,omitempty"`
	Startindex       *uint32 `protobuf:"varint,3,opt,name=startindex" json:"startindex,omitempty"`
	Count            *uint32 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Language         *int32  `protobuf:"varint,5,opt,name=language,def=0" json:"language,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetChangeHistory_Request) Reset() {
	*m = CPublishedFile_GetChangeHistory_Request{}
}
func (m *CPublishedFile_GetChangeHistory_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetChangeHistory_Request) ProtoMessage()    {}
func (*CPublishedFile_GetChangeHistory_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{19}
}

const Default_CPublishedFile_GetChangeHistory_Request_Language int32 = 0

func (m *CPublishedFile_GetChangeHistory_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistory_Request) GetTotalOnly() bool {
	if m != nil && m.TotalOnly != nil {
		return *m.TotalOnly
	}
	return false
}

func (m *CPublishedFile_GetChangeHistory_Request) GetStartindex() uint32 {
	if m != nil && m.Startindex != nil {
		return *m.Startindex
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistory_Request) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistory_Request) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_CPublishedFile_GetChangeHistory_Request_Language
}

type CPublishedFile_GetChangeHistory_Response struct {
	Changes          []*CPublishedFile_GetChangeHistory_Response_ChangeLog `protobuf:"bytes,1,rep,name=changes" json:"changes,omitempty"`
	Total            *uint32                                               `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CPublishedFile_GetChangeHistory_Response) Reset() {
	*m = CPublishedFile_GetChangeHistory_Response{}
}
func (m *CPublishedFile_GetChangeHistory_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetChangeHistory_Response) ProtoMessage()    {}
func (*CPublishedFile_GetChangeHistory_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{20}
}

func (m *CPublishedFile_GetChangeHistory_Response) GetChanges() []*CPublishedFile_GetChangeHistory_Response_ChangeLog {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *CPublishedFile_GetChangeHistory_Response) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

type CPublishedFile_GetChangeHistory_Response_ChangeLog struct {
	Timestamp         *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	ChangeDescription *string `protobuf:"bytes,2,opt,name=change_description,json=changeDescription" json:"change_description,omitempty"`
	Language          *int32  `protobuf:"varint,3,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CPublishedFile_GetChangeHistory_Response_ChangeLog) Reset() {
	*m = CPublishedFile_GetChangeHistory_Response_ChangeLog{}
}
func (m *CPublishedFile_GetChangeHistory_Response_ChangeLog) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_GetChangeHistory_Response_ChangeLog) ProtoMessage() {}
func (*CPublishedFile_GetChangeHistory_Response_ChangeLog) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{20, 0}
}

func (m *CPublishedFile_GetChangeHistory_Response_ChangeLog) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CPublishedFile_GetChangeHistory_Response_ChangeLog) GetChangeDescription() string {
	if m != nil && m.ChangeDescription != nil {
		return *m.ChangeDescription
	}
	return ""
}

func (m *CPublishedFile_GetChangeHistory_Response_ChangeLog) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return 0
}

type CPublishedFile_RefreshVotingQueue_Request struct {
	Appid            *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	MatchingFileType *uint32  `protobuf:"varint,2,opt,name=matching_file_type,json=matchingFileType" json:"matching_file_type,omitempty"`
	Tags             []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	MatchAllTags     *bool    `protobuf:"varint,4,opt,name=match_all_tags,json=matchAllTags,def=1" json:"match_all_tags,omitempty"`
	ExcludedTags     []string `protobuf:"bytes,5,rep,name=excluded_tags,json=excludedTags" json:"excluded_tags,omitempty"`
	DesiredQueueSize *uint32  `protobuf:"varint,6,opt,name=desired_queue_size,json=desiredQueueSize" json:"desired_queue_size,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Request) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Request{}
}
func (m *CPublishedFile_RefreshVotingQueue_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_RefreshVotingQueue_Request) ProtoMessage()    {}
func (*CPublishedFile_RefreshVotingQueue_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{21}
}

const Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags bool = true

func (m *CPublishedFile_RefreshVotingQueue_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchingFileType() uint32 {
	if m != nil && m.MatchingFileType != nil {
		return *m.MatchingFileType
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchAllTags() bool {
	if m != nil && m.MatchAllTags != nil {
		return *m.MatchAllTags
	}
	return Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetExcludedTags() []string {
	if m != nil {
		return m.ExcludedTags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetDesiredQueueSize() uint32 {
	if m != nil && m.DesiredQueueSize != nil {
		return *m.DesiredQueueSize
	}
	return 0
}

type CPublishedFile_RefreshVotingQueue_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Response) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Response{}
}
func (m *CPublishedFile_RefreshVotingQueue_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_RefreshVotingQueue_Response) ProtoMessage() {}
func (*CPublishedFile_RefreshVotingQueue_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{22}
}

type CPublishedFile_QueryFiles_Request struct {
	QueryType              *uint32                                    `protobuf:"varint,1,opt,name=query_type,json=queryType" json:"query_type,omitempty"`
	Page                   *uint32                                    `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Numperpage             *uint32                                    `protobuf:"varint,3,opt,name=numperpage,def=1" json:"numperpage,omitempty"`
	CreatorAppid           *uint32                                    `protobuf:"varint,4,opt,name=creator_appid,json=creatorAppid" json:"creator_appid,omitempty"`
	Appid                  *uint32                                    `protobuf:"varint,5,opt,name=appid" json:"appid,omitempty"`
	Requiredtags           []string                                   `protobuf:"bytes,6,rep,name=requiredtags" json:"requiredtags,omitempty"`
	Excludedtags           []string                                   `protobuf:"bytes,7,rep,name=excludedtags" json:"excludedtags,omitempty"`
	MatchAllTags           *bool                                      `protobuf:"varint,8,opt,name=match_all_tags,json=matchAllTags,def=1" json:"match_all_tags,omitempty"`
	RequiredFlags          []string                                   `protobuf:"bytes,9,rep,name=required_flags,json=requiredFlags" json:"required_flags,omitempty"`
	OmittedFlags           []string                                   `protobuf:"bytes,10,rep,name=omitted_flags,json=omittedFlags" json:"omitted_flags,omitempty"`
	SearchText             *string                                    `protobuf:"bytes,11,opt,name=search_text,json=searchText" json:"search_text,omitempty"`
	Filetype               *uint32                                    `protobuf:"varint,12,opt,name=filetype" json:"filetype,omitempty"`
	ChildPublishedfileid   *uint64                                    `protobuf:"fixed64,13,opt,name=child_publishedfileid,json=childPublishedfileid" json:"child_publishedfileid,omitempty"`
	Days                   *uint32                                    `protobuf:"varint,14,opt,name=days" json:"days,omitempty"`
	IncludeRecentVotesOnly *bool                                      `protobuf:"varint,15,opt,name=include_recent_votes_only,json=includeRecentVotesOnly" json:"include_recent_votes_only,omitempty"`
	CacheMaxAgeSeconds     *uint32                                    `protobuf:"varint,31,opt,name=cache_max_age_seconds,json=cacheMaxAgeSeconds,def=0" json:"cache_max_age_seconds,omitempty"`
	Language               *int32                                     `protobuf:"varint,33,opt,name=language,def=0" json:"language,omitempty"`
	RequiredKvTags         []*CPublishedFile_QueryFiles_Request_KVTag `protobuf:"bytes,34,rep,name=required_kv_tags,json=requiredKvTags" json:"required_kv_tags,omitempty"`
	Totalonly              *bool                                      `protobuf:"varint,16,opt,name=totalonly" json:"totalonly,omitempty"`
	ReturnVoteData         *bool                                      `protobuf:"varint,17,opt,name=return_vote_data,json=returnVoteData" json:"return_vote_data,omitempty"`
	ReturnTags             *bool                                      `protobuf:"varint,18,opt,name=return_tags,json=returnTags" json:"return_tags,omitempty"`
	ReturnKvTags           *bool                                      `protobuf:"varint,19,opt,name=return_kv_tags,json=returnKvTags" json:"return_kv_tags,omitempty"`
	ReturnPreviews         *bool                                      `protobuf:"varint,20,opt,name=return_previews,json=returnPreviews" json:"return_previews,omitempty"`
	ReturnChildren         *bool                                      `protobuf:"varint,21,opt,name=return_children,json=returnChildren" json:"return_children,omitempty"`
	ReturnShortDescription *bool                                      `protobuf:"varint,22,opt,name=return_short_description,json=returnShortDescription" json:"return_short_description,omitempty"`
	ReturnForSaleData      *bool                                      `protobuf:"varint,30,opt,name=return_for_sale_data,json=returnForSaleData" json:"return_for_sale_data,omitempty"`
	ReturnMetadata         *bool                                      `protobuf:"varint,32,opt,name=return_metadata,json=returnMetadata,def=0" json:"return_metadata,omitempty"`
	XXX_unrecognized       []byte                                     `json:"-"`
}

func (m *CPublishedFile_QueryFiles_Request) Reset()         { *m = CPublishedFile_QueryFiles_Request{} }
func (m *CPublishedFile_QueryFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_QueryFiles_Request) ProtoMessage()    {}
func (*CPublishedFile_QueryFiles_Request) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{23}
}

const Default_CPublishedFile_QueryFiles_Request_Numperpage uint32 = 1
const Default_CPublishedFile_QueryFiles_Request_MatchAllTags bool = true
const Default_CPublishedFile_QueryFiles_Request_CacheMaxAgeSeconds uint32 = 0
const Default_CPublishedFile_QueryFiles_Request_Language int32 = 0
const Default_CPublishedFile_QueryFiles_Request_ReturnMetadata bool = false

func (m *CPublishedFile_QueryFiles_Request) GetQueryType() uint32 {
	if m != nil && m.QueryType != nil {
		return *m.QueryType
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetNumperpage() uint32 {
	if m != nil && m.Numperpage != nil {
		return *m.Numperpage
	}
	return Default_CPublishedFile_QueryFiles_Request_Numperpage
}

func (m *CPublishedFile_QueryFiles_Request) GetCreatorAppid() uint32 {
	if m != nil && m.CreatorAppid != nil {
		return *m.CreatorAppid
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetRequiredtags() []string {
	if m != nil {
		return m.Requiredtags
	}
	return nil
}

func (m *CPublishedFile_QueryFiles_Request) GetExcludedtags() []string {
	if m != nil {
		return m.Excludedtags
	}
	return nil
}

func (m *CPublishedFile_QueryFiles_Request) GetMatchAllTags() bool {
	if m != nil && m.MatchAllTags != nil {
		return *m.MatchAllTags
	}
	return Default_CPublishedFile_QueryFiles_Request_MatchAllTags
}

func (m *CPublishedFile_QueryFiles_Request) GetRequiredFlags() []string {
	if m != nil {
		return m.RequiredFlags
	}
	return nil
}

func (m *CPublishedFile_QueryFiles_Request) GetOmittedFlags() []string {
	if m != nil {
		return m.OmittedFlags
	}
	return nil
}

func (m *CPublishedFile_QueryFiles_Request) GetSearchText() string {
	if m != nil && m.SearchText != nil {
		return *m.SearchText
	}
	return ""
}

func (m *CPublishedFile_QueryFiles_Request) GetFiletype() uint32 {
	if m != nil && m.Filetype != nil {
		return *m.Filetype
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetChildPublishedfileid() uint64 {
	if m != nil && m.ChildPublishedfileid != nil {
		return *m.ChildPublishedfileid
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetDays() uint32 {
	if m != nil && m.Days != nil {
		return *m.Days
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Request) GetIncludeRecentVotesOnly() bool {
	if m != nil && m.IncludeRecentVotesOnly != nil {
		return *m.IncludeRecentVotesOnly
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetCacheMaxAgeSeconds() uint32 {
	if m != nil && m.CacheMaxAgeSeconds != nil {
		return *m.CacheMaxAgeSeconds
	}
	return Default_CPublishedFile_QueryFiles_Request_CacheMaxAgeSeconds
}

func (m *CPublishedFile_QueryFiles_Request) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return Default_CPublishedFile_QueryFiles_Request_Language
}

func (m *CPublishedFile_QueryFiles_Request) GetRequiredKvTags() []*CPublishedFile_QueryFiles_Request_KVTag {
	if m != nil {
		return m.RequiredKvTags
	}
	return nil
}

func (m *CPublishedFile_QueryFiles_Request) GetTotalonly() bool {
	if m != nil && m.Totalonly != nil {
		return *m.Totalonly
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnVoteData() bool {
	if m != nil && m.ReturnVoteData != nil {
		return *m.ReturnVoteData
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnTags() bool {
	if m != nil && m.ReturnTags != nil {
		return *m.ReturnTags
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnKvTags() bool {
	if m != nil && m.ReturnKvTags != nil {
		return *m.ReturnKvTags
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnPreviews() bool {
	if m != nil && m.ReturnPreviews != nil {
		return *m.ReturnPreviews
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnChildren() bool {
	if m != nil && m.ReturnChildren != nil {
		return *m.ReturnChildren
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnShortDescription() bool {
	if m != nil && m.ReturnShortDescription != nil {
		return *m.ReturnShortDescription
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnForSaleData() bool {
	if m != nil && m.ReturnForSaleData != nil {
		return *m.ReturnForSaleData
	}
	return false
}

func (m *CPublishedFile_QueryFiles_Request) GetReturnMetadata() bool {
	if m != nil && m.ReturnMetadata != nil {
		return *m.ReturnMetadata
	}
	return Default_CPublishedFile_QueryFiles_Request_ReturnMetadata
}

type CPublishedFile_QueryFiles_Request_KVTag struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_QueryFiles_Request_KVTag) Reset() {
	*m = CPublishedFile_QueryFiles_Request_KVTag{}
}
func (m *CPublishedFile_QueryFiles_Request_KVTag) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_QueryFiles_Request_KVTag) ProtoMessage()    {}
func (*CPublishedFile_QueryFiles_Request_KVTag) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{23, 0}
}

func (m *CPublishedFile_QueryFiles_Request_KVTag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CPublishedFile_QueryFiles_Request_KVTag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CPublishedFile_QueryFiles_Response struct {
	Total                *uint32                 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Publishedfiledetails []*PublishedFileDetails `protobuf:"bytes,2,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	XXX_unrecognized     []byte                  `json:"-"`
}

func (m *CPublishedFile_QueryFiles_Response) Reset()         { *m = CPublishedFile_QueryFiles_Response{} }
func (m *CPublishedFile_QueryFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_QueryFiles_Response) ProtoMessage()    {}
func (*CPublishedFile_QueryFiles_Response) Descriptor() ([]byte, []int) {
	return publishedfile_fileDescriptor0, []int{24}
}

func (m *CPublishedFile_QueryFiles_Response) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CPublishedFile_QueryFiles_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

func init() {
	proto.RegisterType((*CPublishedFile_Subscribe_Request)(nil), "CPublishedFile_Subscribe_Request")
	proto.RegisterType((*CPublishedFile_Subscribe_Response)(nil), "CPublishedFile_Subscribe_Response")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Request)(nil), "CPublishedFile_Unsubscribe_Request")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Response)(nil), "CPublishedFile_Unsubscribe_Response")
	proto.RegisterType((*CPublishedFile_CanSubscribe_Request)(nil), "CPublishedFile_CanSubscribe_Request")
	proto.RegisterType((*CPublishedFile_CanSubscribe_Response)(nil), "CPublishedFile_CanSubscribe_Response")
	proto.RegisterType((*CPublishedFile_Publish_Request)(nil), "CPublishedFile_Publish_Request")
	proto.RegisterType((*CPublishedFile_Publish_Response)(nil), "CPublishedFile_Publish_Response")
	proto.RegisterType((*CPublishedFile_GetDetails_Request)(nil), "CPublishedFile_GetDetails_Request")
	proto.RegisterType((*PublishedFileDetails)(nil), "PublishedFileDetails")
	proto.RegisterType((*PublishedFileDetails_Tag)(nil), "PublishedFileDetails.Tag")
	proto.RegisterType((*PublishedFileDetails_Preview)(nil), "PublishedFileDetails.Preview")
	proto.RegisterType((*PublishedFileDetails_Child)(nil), "PublishedFileDetails.Child")
	proto.RegisterType((*PublishedFileDetails_KVTag)(nil), "PublishedFileDetails.KVTag")
	proto.RegisterType((*PublishedFileDetails_VoteData)(nil), "PublishedFileDetails.VoteData")
	proto.RegisterType((*PublishedFileDetails_ForSaleData)(nil), "PublishedFileDetails.ForSaleData")
	proto.RegisterType((*CPublishedFile_GetDetails_Response)(nil), "CPublishedFile_GetDetails_Response")
	proto.RegisterType((*CPublishedFile_GetItemInfo_Request)(nil), "CPublishedFile_GetItemInfo_Request")
	proto.RegisterType((*CPublishedFile_GetItemInfo_Request_WorkshopItem)(nil), "CPublishedFile_GetItemInfo_Request.WorkshopItem")
	proto.RegisterType((*CPublishedFile_GetItemInfo_Response)(nil), "CPublishedFile_GetItemInfo_Response")
	proto.RegisterType((*CPublishedFile_GetItemInfo_Response_WorkshopItemInfo)(nil), "CPublishedFile_GetItemInfo_Response.WorkshopItemInfo")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Request)(nil), "CPublishedFile_GetUserFiles_Request")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Request_KVTag)(nil), "CPublishedFile_GetUserFiles_Request.KVTag")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response)(nil), "CPublishedFile_GetUserFiles_Response")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response_App)(nil), "CPublishedFile_GetUserFiles_Response.App")
	proto.RegisterType((*CPublishedFile_Update_Request)(nil), "CPublishedFile_Update_Request")
	proto.RegisterType((*CPublishedFile_Update_Response)(nil), "CPublishedFile_Update_Response")
	proto.RegisterType((*CPublishedFile_GetChangeHistoryEntry_Request)(nil), "CPublishedFile_GetChangeHistoryEntry_Request")
	proto.RegisterType((*CPublishedFile_GetChangeHistoryEntry_Response)(nil), "CPublishedFile_GetChangeHistoryEntry_Response")
	proto.RegisterType((*CPublishedFile_GetChangeHistory_Request)(nil), "CPublishedFile_GetChangeHistory_Request")
	proto.RegisterType((*CPublishedFile_GetChangeHistory_Response)(nil), "CPublishedFile_GetChangeHistory_Response")
	proto.RegisterType((*CPublishedFile_GetChangeHistory_Response_ChangeLog)(nil), "CPublishedFile_GetChangeHistory_Response.ChangeLog")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Request)(nil), "CPublishedFile_RefreshVotingQueue_Request")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Response)(nil), "CPublishedFile_RefreshVotingQueue_Response")
	proto.RegisterType((*CPublishedFile_QueryFiles_Request)(nil), "CPublishedFile_QueryFiles_Request")
	proto.RegisterType((*CPublishedFile_QueryFiles_Request_KVTag)(nil), "CPublishedFile_QueryFiles_Request.KVTag")
	proto.RegisterType((*CPublishedFile_QueryFiles_Response)(nil), "CPublishedFile_QueryFiles_Response")
	proto.RegisterEnum("PublishedFileDetails_EPublishedFileForSaleStatus", PublishedFileDetails_EPublishedFileForSaleStatus_name, PublishedFileDetails_EPublishedFileForSaleStatus_value)
}

func init() { proto.RegisterFile("steammessages_publishedfile.steamclient.proto", publishedfile_fileDescriptor0) }

var publishedfile_fileDescriptor0 = []byte{
	// 5774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x7c, 0xcb, 0x73, 0x1c, 0x47,
	0x72, 0xf7, 0x37, 0x78, 0xa3, 0x00, 0x90, 0x60, 0x0b, 0xe0, 0x0e, 0x87, 0x2b, 0xb2, 0x39, 0x24,
	0x45, 0x90, 0x02, 0x5b, 0x7c, 0x88, 0x2b, 0x89, 0xd2, 0xee, 0x27, 0x00, 0x24, 0x24, 0x88, 0x22,
	0x09, 0x35, 0x40, 0x72, 0xa5, 0x95, 0xd4, 0x6a, 0xcc, 0x14, 0x80, 0x16, 0x7b, 0xa6, 0x47, 0xdd,
	0x3d, 0x00, 0xa1, 0xd8, 0x50, 0xac, 0x37, 0xbc, 0xde, 0x8d, 0xb0, 0x1d, 0xe1, 0x08, 0x47, 0x6c,
	0xf8, 0x64, 0x1f, 0xbc, 0xb6, 0xc3, 0x27, 0x9f, 0x7c, 0xf7, 0x71, 0x6f, 0x0e, 0x87, 0x0f, 0xbe,
	0xd9, 0xff, 0x89, 0xc3, 0xf9, 0xa8, 0xea, 0x37, 0x1e, 0x14, 0x65, 0xad, 0x0f, 0xbb, 0x44, 0xd7,
	0x23, 0x33, 0xab, 0x2a, 0x2b, 0xf3, 0x97, 0x99, 0x35, 0x12, 0x57, 0xa3, 0x58, 0xba, 0x9d, 0x8e,
	0x8c, 0x22, 0x77, 0x4b, 0x46, 0x4e, 0xaf, 0xbf, 0xe1, 0x7b, 0xd1, 0xb6, 0x6c, 0x6f, 0x7a, 0xbe,
	0xb4, 0xa8, 0xaf, 0xe5, 0x7b, 0xb2, 0x1b, 0x5b, 0xbd, 0x30, 0x88, 0x83, 0xc6, 0x7c, 0x7e, 0x78,
	0xbf, 0xeb, 0x6d, 0x7a, 0xb2, 0xed, 0x6c, 0xb8, 0x51, 0xc5, 0xe8, 0xe6, 0xef, 0x6a, 0xc2, 0x5c,
	0x5a, 0xd5, 0x24, 0x97, 0x81, 0xa4, 0xb3, 0xd6, 0xdf, 0x88, 0x5a, 0xa1, 0xb7, 0x21, 0x1d, 0x5b,
	0x7e, 0xd5, 0x97, 0x51, 0x6c, 0xcc, 0x89, 0xe3, 0x39, 0xae, 0x5e, 0xbb, 0x5e, 0x33, 0x6b, 0x73,
	0x43, 0x76, 0xb1, 0xd9, 0x38, 0x2d, 0xc6, 0xe1, 0x3b, 0x76, 0xe2, 0xbd, 0x9e, 0xac, 0x0f, 0xc0,
	0x98, 0x29, 0x7b, 0x0c, 0x1b, 0xd6, 0xe1, 0xdb, 0x98, 0x11, 0xc3, 0x6e, 0xaf, 0x07, 0x93, 0x07,
	0xa1, 0x63, 0xd8, 0xe6, 0x0f, 0xe3, 0xbc, 0x98, 0xea, 0x06, 0xb1, 0xb7, 0xb9, 0xe7, 0xb0, 0x60,
	0xf5, 0x21, 0xe8, 0x1d, 0xb3, 0x27, 0xb9, 0x71, 0x89, 0xda, 0x9a, 0xe7, 0xc5, 0xb9, 0x03, 0xa4,
	0x8c, 0x7a, 0x41, 0x37, 0x92, 0xcd, 0xbf, 0xaf, 0x89, 0x66, 0x61, 0xd4, 0xa3, 0x6e, 0xf4, 0x7f,
	0x70, 0x35, 0x17, 0xc5, 0xf9, 0x03, 0xe5, 0x54, 0xeb, 0x79, 0x58, 0x1a, 0xb6, 0xe4, 0x76, 0x5f,
	0xe0, 0x74, 0x9a, 0xf7, 0xc4, 0x85, 0x83, 0x09, 0x32, 0x63, 0x5c, 0x44, 0xcb, 0xed, 0x3a, 0x89,
	0x48, 0x44, 0x0f, 0x16, 0xd1, 0xca, 0x8c, 0x6e, 0xfe, 0xf5, 0xa4, 0x38, 0x53, 0xa0, 0xa6, 0xbe,
	0x12, 0xc9, 0x96, 0xf4, 0x16, 0xe1, 0xfc, 0xa9, 0xc5, 0xab, 0xbf, 0xfc, 0xe7, 0xfa, 0xe5, 0x85,
	0x5e, 0xcf, 0x5c, 0x69, 0x9b, 0xf1, 0xb6, 0x17, 0x99, 0x28, 0x96, 0x09, 0xff, 0x6e, 0x48, 0xaf,
	0xbb, 0x65, 0x26, 0xd2, 0x9a, 0xcb, 0xf6, 0xc3, 0xfb, 0x96, 0xde, 0x51, 0x5b, 0x1c, 0x6b, 0x81,
	0x54, 0xfd, 0x8e, 0x0c, 0x1d, 0xa6, 0x46, 0x27, 0xb1, 0xf8, 0x2a, 0x50, 0xbb, 0x74, 0x14, 0x6a,
	0xeb, 0x0f, 0x2d, 0x7b, 0x4a, 0x93, 0x58, 0x20, 0x9a, 0x9f, 0xc0, 0x02, 0xfd, 0xa0, 0x4f, 0xfb,
	0xd2, 0x75, 0x3b, 0x92, 0xce, 0x70, 0x7c, 0xf1, 0x75, 0x20, 0x79, 0xed, 0x01, 0x7c, 0x9b, 0xc1,
	0x26, 0xd0, 0x94, 0x4c, 0x32, 0x0e, 0x34, 0x31, 0xd3, 0xeb, 0x52, 0x73, 0x3f, 0x92, 0xe1, 0xa5,
	0xc8, 0x24, 0x12, 0x48, 0x3b, 0x4b, 0xca, 0xf8, 0x4a, 0xcc, 0xf6, 0x42, 0xb9, 0xe3, 0xc9, 0x5d,
	0x27, 0xcf, 0x63, 0x88, 0x78, 0xbc, 0x03, 0x3c, 0xde, 0xac, 0xe2, 0x01, 0x44, 0x4d, 0x37, 0xa2,
	0xa6, 0x54, 0x76, 0xec, 0x04, 0x4e, 0x8a, 0xa0, 0x65, 0xcf, 0xa8, 0xbf, 0x96, 0x72, 0x2c, 0xdf,
	0x11, 0xc3, 0xb1, 0x17, 0xfb, 0xb2, 0x3e, 0x4c, 0x2c, 0x5e, 0x01, 0x16, 0xcd, 0x75, 0xf9, 0x2c,
	0x36, 0xa9, 0xd5, 0xdc, 0x0c, 0xc2, 0x0a, 0xb2, 0xb0, 0xc1, 0xd4, 0x6d, 0x3c, 0x11, 0xd3, 0xf8,
	0xed, 0xb4, 0x25, 0x9e, 0x6c, 0x2f, 0xf6, 0x82, 0x6e, 0x7d, 0x84, 0x08, 0xcd, 0x03, 0xa1, 0x39,
	0x22, 0x94, 0xe9, 0xdb, 0x97, 0xdc, 0x71, 0xfc, 0xe7, 0x4e, 0x3a, 0xd0, 0x78, 0x2c, 0xc6, 0x89,
	0x30, 0x5d, 0x9f, 0x51, 0x3a, 0xb4, 0xb7, 0x80, 0xe2, 0xad, 0xb9, 0xbb, 0x4f, 0x82, 0xf0, 0x69,
	0xb4, 0x1d, 0xf4, 0x50, 0x6b, 0xf0, 0x32, 0x5d, 0x36, 0xf1, 0xff, 0x71, 0x47, 0x74, 0x4f, 0x71,
	0xeb, 0x2d, 0x7b, 0x6c, 0x53, 0x0d, 0x36, 0x1c, 0x71, 0x32, 0xd1, 0x08, 0x18, 0x1b, 0xc6, 0xad,
	0x7e, 0xec, 0xd0, 0x16, 0x8f, 0x91, 0xd8, 0x97, 0x81, 0xc9, 0xc5, 0x35, 0xd5, 0x61, 0x62, 0xc7,
	0xbe, 0x32, 0xcf, 0x68, 0x42, 0x7a, 0x38, 0x9e, 0x0c, 0xa8, 0xc7, 0xf4, 0x5e, 0xd0, 0x8f, 0xfb,
	0x70, 0x27, 0xf0, 0xa8, 0x89, 0xf4, 0x38, 0x91, 0x7e, 0x0d, 0x48, 0xbf, 0x3a, 0xf7, 0x90, 0xd6,
	0xe7, 0xfa, 0x97, 0xcd, 0x47, 0xac, 0x09, 0x1f, 0x07, 0xfd, 0x75, 0x18, 0x6d, 0xba, 0xad, 0x56,
	0xd0, 0xef, 0xc6, 0xa6, 0x9e, 0x05, 0x9b, 0xa2, 0x08, 0x3d, 0x52, 0x2d, 0x86, 0x2f, 0x74, 0x93,
	0xb3, 0xe3, 0xb5, 0x65, 0x00, 0xfa, 0x2c, 0x88, 0xf4, 0x12, 0x90, 0xfe, 0xff, 0x19, 0xd2, 0x8f,
	0xb1, 0x17, 0x95, 0x1b, 0x76, 0xc5, 0x4d, 0x38, 0xd0, 0x1c, 0xb5, 0x1c, 0xd0, 0xf5, 0xe2, 0x7a,
	0x8e, 0x29, 0xda, 0x8f, 0x99, 0xb4, 0xf1, 0xe7, 0x35, 0x21, 0x76, 0xbc, 0xc8, 0xdb, 0xf0, 0x7c,
	0x2f, 0xde, 0xab, 0x4f, 0xd0, 0x21, 0x74, 0x80, 0x93, 0x37, 0x77, 0xd7, 0x96, 0x9d, 0x20, 0x96,
	0x6b, 0x71, 0x10, 0x82, 0xa3, 0xc8, 0x5d, 0xe4, 0xc7, 0xc9, 0x0c, 0x14, 0x43, 0xff, 0xad, 0x15,
	0x36, 0xcf, 0xd3, 0x9c, 0xeb, 0x85, 0xde, 0x8e, 0x1b, 0xcb, 0x79, 0x73, 0x33, 0x04, 0xeb, 0xd6,
	0x8e, 0xe6, 0x79, 0x44, 0x6b, 0xde, 0x94, 0x71, 0xcb, 0xba, 0x6c, 0x67, 0x04, 0x30, 0x9e, 0x89,
	0xc9, 0x50, 0xb6, 0xbd, 0x50, 0xb6, 0x62, 0xa7, 0x1f, 0x7a, 0xf5, 0x49, 0x5a, 0xfa, 0x23, 0x10,
	0xe8, 0xa3, 0xcc, 0xd2, 0x57, 0x36, 0xcd, 0xa8, 0xdf, 0xeb, 0x81, 0xb1, 0x6c, 0xcf, 0x13, 0xcb,
	0x50, 0x46, 0x7d, 0x3f, 0xce, 0x5f, 0x6b, 0x75, 0x35, 0x60, 0x83, 0x60, 0x1f, 0xc0, 0x30, 0x00,
	0x6b, 0x68, 0x05, 0x8d, 0xc1, 0x09, 0x8f, 0xec, 0x15, 0xcb, 0x9e, 0xd0, 0xac, 0x1e, 0x85, 0x9e,
	0xf1, 0x81, 0x18, 0x8a, 0xdd, 0xad, 0xa8, 0x3e, 0x65, 0x0e, 0x02, 0xc7, 0x1f, 0x01, 0xc7, 0x1b,
	0x0b, 0x61, 0xe8, 0xf2, 0xaa, 0xe8, 0xae, 0x40, 0x2f, 0x4e, 0x07, 0x52, 0xfe, 0x9e, 0xa6, 0x53,
	0xdc, 0x5f, 0xa2, 0x61, 0x78, 0xe2, 0x78, 0x2b, 0xf0, 0x7d, 0xa0, 0x0c, 0x02, 0xb3, 0x7a, 0x1f,
	0xa3, 0x85, 0xbc, 0x0b, 0x64, 0xdf, 0xc9, 0x2c, 0x44, 0x6b, 0x75, 0x3a, 0xba, 0x6a, 0x07, 0x43,
	0x09, 0xb7, 0x3a, 0x02, 0xc7, 0x10, 0xc1, 0x01, 0xa6, 0x43, 0x49, 0xd7, 0x9f, 0x88, 0xf1, 0x2d,
	0x50, 0x1b, 0x66, 0x72, 0x9c, 0x98, 0xdc, 0x06, 0x26, 0x3f, 0xaa, 0x60, 0x82, 0xe3, 0x0e, 0x23,
	0x3f, 0x86, 0x83, 0x88, 0xf0, 0x17, 0x62, 0xb0, 0x1f, 0xfa, 0xf5, 0x69, 0x22, 0xf9, 0x00, 0x48,
	0x7e, 0x90, 0x3f, 0x00, 0x52, 0xaf, 0x74, 0x2a, 0xa8, 0x20, 0x4e, 0x9d, 0xe7, 0x76, 0x2f, 0x52,
	0xbb, 0xfc, 0x21, 0x6f, 0x94, 0x1b, 0x53, 0x2f, 0x5a, 0x2a, 0xd0, 0x25, 0xcb, 0x46, 0xd2, 0xcd,
	0xae, 0x38, 0xbb, 0xaf, 0x7f, 0x50, 0x8e, 0xe6, 0xe8, 0xae, 0xf8, 0x5c, 0x41, 0x71, 0xd0, 0x07,
	0x8c, 0xe7, 0x4e, 0xb8, 0xf9, 0xdb, 0xb1, 0x12, 0x48, 0x78, 0x4f, 0xc6, 0x77, 0x64, 0xec, 0x7a,
	0x7e, 0x94, 0xf8, 0xa4, 0x0d, 0x31, 0x5d, 0xa0, 0x1d, 0x01, 0xcf, 0xc1, 0xb9, 0x11, 0xd6, 0x89,
	0x35, 0x19, 0xe3, 0x5e, 0x16, 0xb6, 0x70, 0xa5, 0x4d, 0xaa, 0x11, 0xca, 0x18, 0x54, 0x7c, 0x47,
	0x82, 0x39, 0x24, 0xa2, 0x78, 0x0f, 0x2d, 0xbb, 0x44, 0xcf, 0xf8, 0x5c, 0x4c, 0x78, 0xdd, 0x96,
	0xdf, 0xc7, 0x61, 0xa0, 0x72, 0x28, 0xeb, 0x18, 0x1b, 0x7e, 0xdc, 0xd8, 0xb0, 0x0f, 0xdb, 0x08,
	0xa4, 0xfa, 0x61, 0x17, 0x95, 0x0e, 0x9c, 0x0a, 0x90, 0xe9, 0xb8, 0xa4, 0x1d, 0xca, 0xc1, 0x70,
	0x2f, 0x70, 0x57, 0x8c, 0x40, 0x97, 0x33, 0x04, 0x8d, 0x6f, 0xc4, 0x29, 0xf5, 0xe9, 0xb6, 0xdb,
	0x1e, 0x1f, 0x9a, 0x72, 0x0c, 0x11, 0xb9, 0xb2, 0x31, 0xd6, 0xc4, 0x22, 0x37, 0x35, 0xe6, 0x68,
	0x1c, 0xf7, 0x67, 0x01, 0x06, 0xf8, 0xb8, 0xea, 0x6c, 0x6d, 0x7b, 0x7e, 0x3b, 0x94, 0x5d, 0x86,
	0x39, 0x8b, 0xb7, 0x80, 0xeb, 0xf5, 0x22, 0x57, 0x3d, 0x66, 0x7f, 0x56, 0x45, 0x6a, 0x86, 0x2b,
	0xa6, 0x54, 0xd3, 0xd3, 0x1d, 0xda, 0xc2, 0x61, 0x22, 0xff, 0x36, 0x90, 0x7f, 0xa3, 0x48, 0xfe,
	0xa9, 0xdc, 0x33, 0x77, 0x5c, 0xbf, 0x2f, 0xf9, 0x06, 0xef, 0xcb, 0x24, 0x4f, 0x11, 0x6c, 0xfc,
	0xa4, 0x6a, 0xd8, 0x01, 0x2b, 0x18, 0x91, 0xc7, 0x1b, 0x63, 0x1d, 0x28, 0x72, 0xc0, 0x01, 0x66,
	0xdb, 0x8d, 0xdd, 0xfd, 0x89, 0xe7, 0x68, 0x19, 0x7d, 0x71, 0x82, 0xfc, 0x52, 0xce, 0xa5, 0x8e,
	0x11, 0x83, 0xf7, 0x81, 0xc1, 0x9d, 0x22, 0x03, 0xd7, 0xa4, 0xe1, 0x39, 0x2f, 0xeb, 0x75, 0x11,
	0xac, 0xb7, 0x13, 0x94, 0xd0, 0xf7, 0xfd, 0x6c, 0x3f, 0xa8, 0x1d, 0xcd, 0xc9, 0xfa, 0xdb, 0x2f,
	0x84, 0xa1, 0xc4, 0x80, 0xe3, 0x8d, 0x5c, 0x5f, 0xa2, 0xcc, 0xe4, 0x5d, 0xc6, 0x16, 0xaf, 0x01,
	0xdf, 0xf9, 0xb2, 0x3e, 0x78, 0x2d, 0x34, 0xaa, 0x38, 0x6e, 0xde, 0xf4, 0x36, 0xc9, 0xf6, 0x79,
	0x2d, 0x77, 0x03, 0x4d, 0x5d, 0x05, 0x2d, 0x63, 0x2d, 0x39, 0xf8, 0x0e, 0xac, 0x9c, 0xc8, 0x4f,
	0x10, 0x79, 0x72, 0xb9, 0x09, 0xf9, 0x5e, 0xd0, 0xeb, 0xfb, 0xe0, 0x12, 0x48, 0x72, 0x3d, 0x12,
	0x6e, 0x92, 0xf4, 0xdb, 0xe9, 0x61, 0xeb, 0x76, 0xd0, 0xa6, 0x31, 0xdf, 0xed, 0x6e, 0xf5, 0xc1,
	0x72, 0x90, 0x3f, 0x18, 0xbe, 0x5d, 0xbb, 0xc6, 0xfa, 0xbb, 0xd6, 0x93, 0x2d, 0x8c, 0x5e, 0xd8,
	0xda, 0xf8, 0x41, 0xcb, 0xf5, 0xbd, 0xaf, 0xd1, 0xc8, 0x93, 0xbd, 0x0e, 0xd4, 0x32, 0x2c, 0xf3,
	0x8e, 0xdc, 0x74, 0xc1, 0x3f, 0xd0, 0x1d, 0xbd, 0xdb, 0xdd, 0x52, 0x78, 0x41, 0x13, 0x6d, 0xfe,
	0xf7, 0x69, 0x31, 0x93, 0xb3, 0x0b, 0xca, 0x26, 0x18, 0x27, 0xc5, 0x08, 0x7b, 0x16, 0x06, 0xa8,
	0xb6, 0xfa, 0xaa, 0x32, 0x4b, 0x03, 0xd5, 0x66, 0xa9, 0x2e, 0x46, 0x5b, 0xa1, 0x74, 0xc1, 0x87,
	0xd2, 0xbd, 0x1b, 0xb1, 0xf5, 0x27, 0x61, 0x68, 0xfe, 0x53, 0xa1, 0xd6, 0x21, 0x62, 0x31, 0xa9,
	0x1a, 0x19, 0x87, 0x5e, 0x2c, 0x61, 0xdb, 0x61, 0x1a, 0x55, 0x80, 0xab, 0xaf, 0x89, 0x97, 0x4a,
	0x80, 0x07, 0xc6, 0x8e, 0xd0, 0x58, 0xa3, 0x08, 0x61, 0x60, 0x42, 0x43, 0x8c, 0x25, 0xb0, 0x73,
	0x94, 0x2c, 0x65, 0xf2, 0x8d, 0x41, 0x0d, 0xa1, 0xb2, 0x08, 0xb6, 0x92, 0x94, 0x72, 0x88, 0x3b,
	0xd7, 0xe0, 0xdb, 0xb8, 0x22, 0x4e, 0x68, 0xf0, 0x9a, 0x0e, 0x1a, 0x57, 0x6b, 0xe7, 0x8e, 0x65,
	0x3d, 0xf6, 0x14, 0x33, 0x71, 0xd0, 0x8d, 0x10, 0x84, 0xb1, 0x47, 0xf1, 0xfb, 0x51, 0xe8, 0x1b,
	0x67, 0xc5, 0x84, 0x26, 0x83, 0xbd, 0x13, 0xd4, 0x2b, 0x54, 0x13, 0x0e, 0x78, 0x45, 0x68, 0xa4,
	0xa2, 0x41, 0x10, 0x21, 0x01, 0xbb, 0xd0, 0x6a, 0x4c, 0xb3, 0x97, 0x9a, 0xa2, 0x4e, 0xfc, 0x13,
	0xf7, 0x75, 0x1b, 0x56, 0x1c, 0x83, 0x53, 0x22, 0x11, 0xc9, 0xf3, 0x8e, 0xd8, 0x93, 0xba, 0x11,
	0xc5, 0x33, 0x2e, 0x8b, 0xe9, 0x64, 0x90, 0xe2, 0x4a, 0xce, 0x73, 0xc4, 0x3e, 0xae, 0xdb, 0x57,
	0xb9, 0x19, 0xc3, 0x38, 0xc6, 0xce, 0xe4, 0x09, 0x35, 0x26, 0xbe, 0x5c, 0x81, 0x89, 0x4f, 0xd0,
	0x80, 0x12, 0xca, 0x7d, 0xb5, 0xea, 0xb2, 0x1b, 0x34, 0xb6, 0x7c, 0x45, 0xc1, 0x8d, 0xc5, 0x1e,
	0xb8, 0x73, 0xd2, 0x02, 0xd9, 0xae, 0xbf, 0x44, 0x47, 0x38, 0x81, 0x6d, 0x4b, 0xdc, 0x94, 0x0c,
	0xe9, 0xf7, 0xda, 0x34, 0x64, 0x26, 0x1d, 0xf2, 0x88, 0x9b, 0x8c, 0x33, 0x39, 0x50, 0x37, 0x4b,
	0x03, 0xb2, 0x28, 0x0b, 0xd6, 0xb4, 0xe9, 0xa3, 0xd9, 0x3c, 0x49, 0x5d, 0xfc, 0x81, 0x3b, 0xb7,
	0xab, 0xd0, 0x35, 0xef, 0xdc, 0x0f, 0x38, 0xaa, 0xdb, 0xcd, 0x80, 0x71, 0x5c, 0x4d, 0x32, 0x08,
	0xd0, 0xac, 0xec, 0xa1, 0x08, 0x75, 0x1a, 0x38, 0xad, 0x3b, 0x16, 0x54, 0xbb, 0x31, 0x2f, 0x0c,
	0xf8, 0xde, 0x4d, 0x03, 0x45, 0xc7, 0xf5, 0xfd, 0xfa, 0x29, 0x1e, 0x8d, 0x3d, 0x49, 0xb4, 0xb8,
	0xe0, 0xfb, 0xc6, 0xeb, 0xe2, 0x64, 0xb7, 0xdf, 0x71, 0x5a, 0x41, 0xa7, 0x83, 0x88, 0x02, 0xf6,
	0x6b, 0x47, 0xfa, 0x41, 0x4f, 0x86, 0xf5, 0x06, 0x45, 0xd0, 0x33, 0xd0, 0xbb, 0xa4, 0x3a, 0xef,
	0xe8, 0x3e, 0xc3, 0x12, 0x2f, 0xe5, 0x66, 0x31, 0xb6, 0xac, 0x9f, 0xa6, 0x29, 0x27, 0x32, 0x53,
	0xe8, 0x86, 0xb7, 0xf0, 0x4e, 0x6f, 0xb8, 0x5d, 0x30, 0xce, 0xf5, 0x1f, 0x92, 0x1c, 0xea, 0xcb,
	0x78, 0x59, 0x08, 0xf8, 0xcb, 0x81, 0x4d, 0x8e, 0xe0, 0x7c, 0x5e, 0xa6, 0xf3, 0x19, 0x87, 0x16,
	0x9b, 0x1a, 0x92, 0x69, 0x61, 0xfd, 0x0c, 0xe9, 0x89, 0xfa, 0x32, 0x2e, 0xc0, 0x0d, 0x85, 0x69,
	0x1b, 0xa8, 0x0a, 0xbe, 0xc4, 0xcd, 0x38, 0x9b, 0xc4, 0xc2, 0x8b, 0xa0, 0x07, 0xd4, 0x66, 0x34,
	0xc9, 0x99, 0x04, 0x9d, 0x1e, 0xf8, 0x54, 0x30, 0x9e, 0x75, 0x93, 0xc7, 0x64, 0xdb, 0xf0, 0xba,
	0xc0, 0x15, 0xe7, 0x38, 0xe5, 0x1c, 0x5f, 0x17, 0xf8, 0x7e, 0x90, 0xbd, 0x92, 0x04, 0xf2, 0x9a,
	0x9c, 0x67, 0x48, 0xa2, 0x9d, 0x52, 0x30, 0x7e, 0xbe, 0x1c, 0x8c, 0x83, 0x98, 0x53, 0x6a, 0x00,
	0xe9, 0x59, 0x54, 0xbf, 0xc0, 0x76, 0x24, 0xd7, 0x68, 0xfc, 0x10, 0xf8, 0xb8, 0x3b, 0x41, 0xe8,
	0xe1, 0x3a, 0x2e, 0xd2, 0x88, 0xb4, 0x81, 0x7a, 0x01, 0x7c, 0x06, 0xbb, 0x32, 0x8c, 0xea, 0xaf,
	0xa8, 0x5e, 0xdd, 0x60, 0xdc, 0x12, 0x27, 0x7d, 0x6f, 0x53, 0x92, 0x6a, 0xe6, 0x59, 0x5d, 0xa2,
	0xa1, 0xb3, 0xba, 0x77, 0x2d, 0xc7, 0xf2, 0xaa, 0x30, 0x92, 0x69, 0x29, 0xef, 0x39, 0x9a, 0x72,
	0x42, 0xf7, 0x2c, 0x27, 0x32, 0xe4, 0x86, 0x27, 0xc2, 0x5c, 0x2e, 0x0c, 0x4f, 0x84, 0x02, 0x45,
	0x67, 0xd0, 0x73, 0x85, 0x15, 0x9d, 0xe1, 0x09, 0x58, 0x1f, 0xaf, 0x03, 0x86, 0xdf, 0xd9, 0xf5,
	0xda, 0xf1, 0x76, 0xfd, 0x55, 0xbe, 0x1f, 0xd4, 0xf4, 0x04, 0x5b, 0xf0, 0x8a, 0xf1, 0x80, 0x6d,
	0xe9, 0x6d, 0x6d, 0xc7, 0xf5, 0x79, 0xbe, 0x62, 0xd4, 0xf6, 0x3e, 0x35, 0xe1, 0x91, 0xf0, 0x10,
	0x34, 0x3f, 0x57, 0xd9, 0x84, 0x52, 0x83, 0x32, 0x6f, 0x00, 0x60, 0xe1, 0x80, 0x42, 0x07, 0xb0,
	0x44, 0xdd, 0xa2, 0x03, 0x11, 0xaa, 0x69, 0xdd, 0xdd, 0xc2, 0x0b, 0x9a, 0xb1, 0xd3, 0xaf, 0xb1,
	0x00, 0x69, 0x0b, 0xea, 0x8b, 0xfe, 0x22, 0x7d, 0xb8, 0x46, 0x0c, 0x72, 0x6d, 0x28, 0x24, 0x29,
	0xbe, 0x46, 0x58, 0xd7, 0x59, 0x48, 0xd4, 0x78, 0x0d, 0x93, 0x40, 0x0e, 0x1c, 0x02, 0x28, 0x1d,
	0xe6, 0x45, 0xf5, 0x1b, 0xcc, 0x07, 0x9a, 0x6c, 0x6e, 0x31, 0xde, 0x12, 0x63, 0x09, 0x2e, 0xbc,
	0x09, 0x20, 0x77, 0xe2, 0xc6, 0xcb, 0x56, 0x95, 0x27, 0xb4, 0x94, 0x35, 0xb4, 0x93, 0xe1, 0x70,
	0x12, 0x1c, 0x2f, 0xbd, 0x4e, 0xd3, 0x4e, 0x55, 0x4f, 0x83, 0xb5, 0xaa, 0x90, 0xe8, 0x0d, 0x31,
	0x96, 0x48, 0x7a, 0x8b, 0xa6, 0x9c, 0xae, 0x9e, 0x42, 0xc2, 0xdb, 0xc9, 0x60, 0xe3, 0xa6, 0x18,
	0x51, 0x18, 0xef, 0x47, 0x07, 0x4d, 0xbb, 0xf7, 0x18, 0x79, 0xa9, 0xa1, 0xc6, 0xdb, 0x62, 0x1c,
	0x91, 0x96, 0x43, 0x08, 0xe4, 0x0d, 0x58, 0xf6, 0xc4, 0x8d, 0x33, 0xd5, 0xf3, 0x1e, 0xc3, 0xb0,
	0x3b, 0x30, 0xca, 0x1e, 0xdb, 0x51, 0x7f, 0x19, 0xbf, 0xac, 0x89, 0xe3, 0x59, 0x35, 0xde, 0x00,
	0x85, 0x7c, 0x93, 0x02, 0xe3, 0x8f, 0x01, 0x74, 0x3c, 0x7a, 0xd8, 0xf5, 0x09, 0x50, 0x7a, 0x6d,
	0x84, 0x7b, 0x39, 0xa2, 0x16, 0xc4, 0x13, 0x18, 0xc8, 0xe3, 0xdf, 0x10, 0x11, 0x75, 0xdb, 0x66,
	0x37, 0x88, 0xe1, 0x7f, 0x80, 0xa5, 0xfd, 0xf2, 0x48, 0x16, 0xc1, 0x04, 0xd0, 0xe2, 0x47, 0xf6,
	0xb1, 0xcc, 0xd5, 0x00, 0x86, 0x46, 0x57, 0x4c, 0x01, 0xb0, 0x72, 0x10, 0x59, 0xf1, 0x2a, 0xde,
	0xa2, 0x55, 0x9c, 0xab, 0x5e, 0xc5, 0x72, 0x10, 0xae, 0xc1, 0x48, 0x14, 0x7f, 0xf1, 0x12, 0x08,
	0x79, 0x7e, 0x55, 0x21, 0xb7, 0x0c, 0x92, 0x2f, 0x01, 0xb8, 0x89, 0xcd, 0x74, 0x96, 0xb1, 0x20,
	0xc6, 0x12, 0xc8, 0x76, 0x9b, 0x62, 0xbe, 0x8b, 0x40, 0xe7, 0xdc, 0x7d, 0x0d, 0xce, 0xdc, 0x28,
	0x0a, 0x5a, 0x1e, 0x7a, 0x17, 0x73, 0xd7, 0x8b, 0xb7, 0x09, 0x70, 0xc1, 0x8d, 0xec, 0xd8, 0xc9,
	0x34, 0xbc, 0x9b, 0x59, 0x83, 0x06, 0xee, 0x01, 0x61, 0xcf, 0xdb, 0x64, 0x2e, 0x4f, 0x64, 0x7b,
	0x16, 0xb0, 0x03, 0x0d, 0x46, 0x6e, 0x38, 0x6e, 0x40, 0x14, 0xbb, 0x9d, 0x5e, 0xfd, 0x1d, 0x36,
	0x18, 0xd9, 0xde, 0x75, 0xdd, 0x69, 0xdc, 0xcf, 0xa0, 0xc1, 0x1f, 0x6b, 0x34, 0x68, 0x81, 0xac,
	0x57, 0xd6, 0x11, 0x03, 0xaa, 0x2e, 0x0d, 0x8b, 0x39, 0xc1, 0x85, 0x27, 0x91, 0xc3, 0xc6, 0x09,
	0x89, 0xc6, 0x2d, 0x31, 0x88, 0x17, 0x12, 0x70, 0x04, 0xde, 0xd4, 0x1a, 0xe3, 0x08, 0xf8, 0x13,
	0xad, 0x9d, 0xdb, 0xee, 0x78, 0xdd, 0x00, 0x8e, 0x9b, 0x23, 0x34, 0x3b, 0x6d, 0x68, 0xfc, 0x53,
	0x4d, 0x8c, 0x6a, 0x84, 0x00, 0x23, 0xd5, 0xad, 0x48, 0xc2, 0xd3, 0xb4, 0x01, 0x7b, 0x23, 0xb8,
	0x6b, 0x41, 0xd8, 0x06, 0xdf, 0xc1, 0x39, 0xe2, 0xb4, 0x41, 0xe3, 0x97, 0xc1, 0x14, 0xbf, 0x18,
	0x62, 0x88, 0x40, 0x15, 0xc3, 0x41, 0xfa, 0x3b, 0x07, 0xd7, 0x86, 0x0b, 0x70, 0xad, 0x8c, 0x94,
	0x46, 0xaa, 0x90, 0x52, 0xc3, 0x17, 0xc3, 0x74, 0xb5, 0x9e, 0x23, 0xa6, 0x3e, 0x58, 0xf4, 0x9c,
	0x53, 0x1a, 0xcc, 0x3b, 0xa5, 0xc6, 0x6b, 0x62, 0x98, 0x6e, 0x24, 0x2e, 0x10, 0x02, 0x30, 0xbd,
	0xb1, 0xf0, 0x27, 0xd9, 0x64, 0x0c, 0xc7, 0x54, 0x88, 0xce, 0x1f, 0x8d, 0x4f, 0xc4, 0x98, 0xbe,
	0x8a, 0x38, 0x22, 0x6a, 0x05, 0x21, 0xa7, 0x95, 0x07, 0x6c, 0xfe, 0x40, 0xff, 0x48, 0xd1, 0x13,
	0x00, 0x1f, 0x25, 0xcc, 0x28, 0x7d, 0x3f, 0xea, 0xa1, 0xef, 0xe6, 0xae, 0x76, 0xb0, 0xdb, 0x55,
	0xb2, 0x90, 0x01, 0x88, 0xee, 0x40, 0x43, 0xe3, 0xdf, 0x07, 0xc4, 0x44, 0xe6, 0x86, 0x80, 0xf5,
	0x9d, 0xf0, 0x22, 0x47, 0x5f, 0x2f, 0x95, 0xbc, 0x1e, 0xf7, 0x22, 0x35, 0x06, 0x51, 0x37, 0x46,
	0x3e, 0x80, 0xc2, 0x40, 0xdf, 0xb7, 0x82, 0x70, 0x4f, 0xf1, 0x9b, 0xa2, 0xd6, 0x25, 0xd5, 0x08,
	0x71, 0xc9, 0x28, 0xea, 0x64, 0xdc, 0xe7, 0x98, 0xfa, 0xd8, 0x8d, 0xeb, 0xd5, 0x97, 0xf3, 0x6e,
	0xae, 0x55, 0x31, 0x59, 0xa3, 0x89, 0xb7, 0x8d, 0xa7, 0xce, 0xea, 0xf2, 0xf2, 0xda, 0x9a, 0xf3,
	0x20, 0x88, 0x55, 0x8f, 0xad, 0xa9, 0x1a, 0xd7, 0xc4, 0x4c, 0x5e, 0x0e, 0x67, 0xd3, 0x0f, 0xe0,
	0x4a, 0xb1, 0x6a, 0x18, 0x39, 0x69, 0x96, 0xb1, 0x07, 0xec, 0x79, 0x83, 0x67, 0xc0, 0xfa, 0x7a,
	0xee, 0x9e, 0xb3, 0xbb, 0xed, 0xc6, 0x0e, 0x28, 0x82, 0xb3, 0xeb, 0x76, 0x63, 0x0e, 0x92, 0xed,
	0x59, 0x1a, 0xb1, 0x12, 0xad, 0xba, 0x7b, 0x4f, 0xa0, 0xfb, 0xe3, 0xa0, 0xff, 0x04, 0x3a, 0x31,
	0x86, 0x68, 0x7b, 0x11, 0xa5, 0x27, 0x1d, 0xc0, 0x55, 0x2d, 0x80, 0x4c, 0x78, 0xc5, 0x54, 0x0c,
	0xa1, 0xbb, 0x56, 0x93, 0x9e, 0xe6, 0xef, 0x6b, 0xe2, 0xf4, 0x01, 0x4b, 0x03, 0xc4, 0x54, 0xb1,
	0xb8, 0xe9, 0xff, 0x07, 0x7a, 0xf3, 0x03, 0xdd, 0xbe, 0x2a, 0xbb, 0x6d, 0xb0, 0x52, 0x10, 0xc4,
	0x84, 0x01, 0xa8, 0xc1, 0x74, 0x2d, 0xdb, 0xc9, 0xad, 0x40, 0x59, 0xcd, 0x1c, 0xc8, 0x76, 0xda,
	0xf2, 0x4b, 0xd9, 0x8a, 0xd3, 0xce, 0xc1, 0x6c, 0xe7, 0x83, 0xe0, 0xc3, 0xa0, 0xbb, 0x05, 0x66,
	0x58, 0x75, 0x0e, 0x81, 0x82, 0x9c, 0xd2, 0x9d, 0xeb, 0x28, 0x7e, 0xec, 0xed, 0xc8, 0x84, 0xeb,
	0x70, 0x33, 0x28, 0xd5, 0x85, 0x72, 0x89, 0x21, 0x95, 0x8c, 0x5a, 0x81, 0xe3, 0xc8, 0xde, 0x10,
	0x15, 0xdc, 0x53, 0x76, 0x68, 0xe2, 0xc6, 0x6c, 0xe5, 0xe1, 0xdb, 0x95, 0x53, 0x9a, 0x7f, 0x33,
	0x50, 0xc5, 0x71, 0x05, 0xec, 0xe9, 0x0a, 0x18, 0xec, 0x24, 0x17, 0x35, 0x2b, 0x46, 0x10, 0x12,
	0xea, 0x02, 0x09, 0x55, 0x3c, 0x56, 0xda, 0x18, 0x84, 0xf9, 0x2e, 0x96, 0x9d, 0xb2, 0x61, 0x00,
	0xab, 0xe8, 0x71, 0xec, 0x58, 0xcf, 0x84, 0x02, 0x4f, 0xc4, 0xb1, 0x04, 0xaf, 0xa3, 0xbd, 0x46,
	0x5d, 0x45, 0x71, 0xaf, 0x59, 0x87, 0xf3, 0xb7, 0x74, 0xb2, 0x1d, 0x3b, 0xec, 0x24, 0x38, 0xc0,
	0xaf, 0xa8, 0xf1, 0x99, 0x98, 0xcc, 0x76, 0x53, 0x64, 0xa8, 0x09, 0x72, 0x6c, 0xa8, 0xc4, 0x1e,
	0xc9, 0x18, 0x16, 0xe4, 0xb4, 0x52, 0x0e, 0x61, 0x06, 0x4a, 0x21, 0x4c, 0xf3, 0x1f, 0x07, 0x4a,
	0xc5, 0xad, 0xbc, 0x84, 0xea, 0x50, 0x00, 0xe2, 0x30, 0x15, 0xda, 0x0d, 0xb5, 0x4f, 0x82, 0x9b,
	0x70, 0x1f, 0x8c, 0x4f, 0x4b, 0x1b, 0x30, 0x40, 0x1b, 0x70, 0xcb, 0x3a, 0x02, 0xf9, 0xdc, 0x0e,
	0x60, 0x4f, 0x71, 0x17, 0x00, 0x2b, 0x4c, 0x17, 0xc7, 0x7c, 0xc7, 0x5b, 0x81, 0x4b, 0xec, 0xb8,
	0x5d, 0xc0, 0xb6, 0x70, 0xe4, 0xaa, 0x9c, 0x38, 0x62, 0x0b, 0xdd, 0xb4, 0xd2, 0x6e, 0xfe, 0xeb,
	0x4b, 0x55, 0x7b, 0x95, 0x00, 0x91, 0x44, 0x9d, 0xd6, 0xc4, 0x28, 0x15, 0x78, 0xb5, 0x34, 0x5c,
	0x6d, 0x59, 0xc3, 0x26, 0x73, 0xe5, 0x8e, 0x76, 0x99, 0x58, 0x9b, 0x30, 0x77, 0xb7, 0x83, 0x88,
	0x4b, 0x4f, 0x80, 0x63, 0x42, 0xa9, 0x6a, 0x66, 0x21, 0x13, 0x92, 0x6d, 0xcb, 0xd6, 0x94, 0xc0,
	0x1f, 0x0f, 0x67, 0xab, 0x6e, 0x6f, 0x00, 0xc9, 0x9b, 0xaa, 0xea, 0xa6, 0x08, 0x42, 0x37, 0xa7,
	0x80, 0x75, 0x35, 0x2b, 0x32, 0x01, 0x9c, 0x67, 0xd3, 0xd0, 0x71, 0x90, 0x54, 0xf3, 0xde, 0x15,
	0x43, 0x98, 0x22, 0x66, 0x1b, 0x77, 0xbb, 0x76, 0x9d, 0x33, 0x47, 0x99, 0xd4, 0x33, 0x58, 0x97,
	0x90, 0x33, 0xfd, 0xe8, 0xe6, 0xb1, 0xd0, 0xc1, 0x49, 0x99, 0xc8, 0xb2, 0x69, 0x26, 0x1c, 0x38,
	0x22, 0x5c, 0x30, 0x61, 0x44, 0x67, 0x58, 0xd3, 0xe1, 0xca, 0x52, 0x26, 0x2b, 0x0e, 0xc2, 0xc0,
	0xb8, 0x0d, 0x58, 0x2c, 0xc8, 0xa9, 0x68, 0xcc, 0x9b, 0x30, 0x8f, 0x29, 0xa7, 0xe9, 0x23, 0x3b,
	0x43, 0x0f, 0x8c, 0xc0, 0x10, 0x39, 0x3c, 0x72, 0xb2, 0xb7, 0x47, 0x3b, 0x7b, 0xb4, 0x20, 0xae,
	0x84, 0x55, 0xe4, 0xdc, 0x79, 0xb9, 0x40, 0x6b, 0x23, 0xcd, 0x0a, 0x62, 0x95, 0x00, 0x03, 0x37,
	0x09, 0x41, 0x00, 0x78, 0x53, 0xc0, 0x4f, 0xdb, 0x41, 0x9b, 0xd3, 0x30, 0xb7, 0x27, 0xf0, 0xfe,
	0x2a, 0x5d, 0x58, 0x7c, 0x13, 0x88, 0xbe, 0x9e, 0x5d, 0x7a, 0xc0, 0x2b, 0xe7, 0x19, 0xba, 0x26,
	0x18, 0x74, 0xd3, 0x7c, 0x23, 0xf9, 0x52, 0xd8, 0x89, 0x0c, 0x61, 0xe3, 0x8e, 0x18, 0xa5, 0x0a,
	0x4c, 0x6b, 0x8f, 0x12, 0x35, 0x53, 0x8b, 0x57, 0x80, 0xec, 0x2b, 0x73, 0x41, 0x42, 0x16, 0x94,
	0x24, 0x86, 0x55, 0x6f, 0xec, 0x99, 0x6a, 0x9c, 0x19, 0xc9, 0x18, 0x19, 0x01, 0x21, 0x3d, 0xd5,
	0xd8, 0xc1, 0xfc, 0xfa, 0x57, 0x7d, 0x2f, 0x94, 0x6d, 0x02, 0xe3, 0x82, 0xca, 0x24, 0x36, 0x90,
	0x7a, 0x90, 0x5d, 0x36, 0xd5, 0x48, 0xf0, 0xac, 0x3b, 0xfd, 0x28, 0xc6, 0x45, 0xab, 0xfa, 0x00,
	0x4a, 0xe9, 0x16, 0xb3, 0xe6, 0xb0, 0x80, 0x08, 0x4c, 0x71, 0xb4, 0xb9, 0x47, 0xaa, 0x01, 0xba,
	0x15, 0xee, 0x59, 0x76, 0x8e, 0x8f, 0xf1, 0xb5, 0x98, 0x94, 0xcf, 0x28, 0x1f, 0xc8, 0x7c, 0x27,
	0x88, 0xef, 0x63, 0xe0, 0x6b, 0xef, 0xcf, 0xf7, 0xc1, 0xc3, 0xf5, 0x6f, 0xc9, 0x3b, 0xcb, 0xcb,
	0xf8, 0x46, 0x4c, 0x6b, 0x59, 0x9c, 0xa7, 0x3b, 0x0e, 0xf1, 0x3f, 0x43, 0xc6, 0xe3, 0x8a, 0x75,
	0x84, 0xfb, 0xc6, 0x31, 0xc9, 0xe2, 0x1c, 0xc8, 0x7a, 0xc1, 0x56, 0x74, 0x30, 0x1b, 0x7d, 0x35,
	0x93, 0x8d, 0x06, 0x31, 0x00, 0x9d, 0xb7, 0xb6, 0x4d, 0x44, 0xa5, 0xc7, 0x34, 0xb7, 0x7b, 0x3b,
	0xb8, 0x20, 0xe3, 0x3d, 0x86, 0x7d, 0x49, 0xfd, 0x48, 0xd5, 0xb4, 0x33, 0xeb, 0x5e, 0xa6, 0xa5,
	0xa0, 0xae, 0x25, 0x84, 0xb4, 0xc6, 0xa9, 0x82, 0x28, 0x69, 0x5a, 0x50, 0xcc, 0x35, 0x1e, 0x27,
	0x6a, 0x1f, 0x00, 0xb5, 0xe5, 0x7d, 0xee, 0x6a, 0xe6, 0x72, 0xea, 0x5b, 0x3b, 0x6f, 0x22, 0xf4,
	0x65, 0x36, 0xd0, 0x0e, 0xd1, 0x44, 0xa4, 0xf2, 0xaf, 0xa0, 0xd2, 0xf9, 0xbc, 0xe5, 0x67, 0x62,
	0x86, 0x86, 0x71, 0x85, 0xdb, 0x49, 0xc0, 0x2b, 0x57, 0x93, 0x68, 0x15, 0xf7, 0x49, 0x5a, 0xaa,
	0x16, 0xd1, 0x20, 0x53, 0x0f, 0x2a, 0x10, 0x36, 0x88, 0x10, 0xd5, 0xb3, 0x97, 0x35, 0xe6, 0xfd,
	0x46, 0xcc, 0xb6, 0x5c, 0x10, 0xc2, 0xe9, 0xb8, 0xcf, 0x1c, 0x0c, 0xc2, 0x23, 0xd9, 0x0a, 0xba,
	0xed, 0x88, 0xb2, 0x3e, 0x53, 0x18, 0x10, 0x50, 0x1a, 0x7d, 0x01, 0xd3, 0x00, 0x26, 0x80, 0x29,
	0x5f, 0xa5, 0xe7, 0xf3, 0xf7, 0x30, 0x29, 0xfa, 0x26, 0xdc, 0x32, 0x06, 0x41, 0x51, 0x04, 0xfe,
	0xc4, 0xe9, 0xbe, 0xfb, 0x6c, 0x61, 0x4b, 0xae, 0x71, 0x63, 0x2e, 0x23, 0xfd, 0xf2, 0xff, 0x42,
	0x46, 0xda, 0x88, 0xc5, 0x78, 0x1c, 0x80, 0xdc, 0x14, 0x7c, 0x9c, 0xa0, 0x0c, 0x7a, 0x51, 0xe5,
	0x93, 0x64, 0x3a, 0x1d, 0x8a, 0x2e, 0x17, 0x61, 0xc8, 0x83, 0x13, 0x33, 0x2b, 0x51, 0x0a, 0x81,
	0x87, 0x9a, 0x6a, 0x3c, 0xec, 0xba, 0x52, 0xf9, 0x94, 0x91, 0xb1, 0x2b, 0xc6, 0xbc, 0x76, 0xe4,
	0x10, 0x53, 0x83, 0x98, 0x7e, 0x0a, 0x4c, 0x7f, 0x7a, 0x14, 0xa6, 0x85, 0xdb, 0x05, 0x64, 0x8e,
	0xc0, 0x7a, 0x14, 0x86, 0x61, 0x34, 0x0d, 0x26, 0x6a, 0x9a, 0x69, 0x39, 0x69, 0xd4, 0x8e, 0x99,
	0xcf, 0xb1, 0xdb, 0x43, 0xc8, 0x6e, 0x71, 0x06, 0xc4, 0x98, 0xb6, 0x0b, 0xc5, 0x16, 0xbc, 0x2e,
	0xd8, 0x92, 0x84, 0x0d, 0x77, 0xc4, 0x84, 0xa2, 0x42, 0x37, 0x75, 0x86, 0x56, 0x70, 0x1e, 0xa6,
	0x9e, 0xb5, 0x93, 0x62, 0x5a, 0x52, 0xff, 0x21, 0x31, 0x15, 0x1c, 0xb3, 0x05, 0xcf, 0xa3, 0x4b,
	0xf7, 0xb1, 0x50, 0x74, 0x93, 0x2b, 0x3f, 0x9b, 0x91, 0x84, 0x9e, 0xa8, 0xd8, 0x49, 0x61, 0xe9,
	0x6a, 0xb9, 0xb0, 0x94, 0x23, 0x3c, 0xc9, 0xa4, 0xd4, 0x7d, 0xde, 0x12, 0xc7, 0x15, 0xe9, 0x24,
	0xe9, 0x72, 0x92, 0x84, 0xfc, 0x09, 0x50, 0xbd, 0x6d, 0x17, 0x6a, 0x70, 0x98, 0x4c, 0xa2, 0xc8,
	0x95, 0x4b, 0xfa, 0xba, 0xa4, 0x58, 0xc5, 0x46, 0x49, 0xbc, 0xaa, 0x73, 0x33, 0x8f, 0x13, 0x46,
	0x49, 0xce, 0x85, 0x72, 0xb9, 0x39, 0xf1, 0xa9, 0x8b, 0x62, 0x78, 0x3a, 0xae, 0x03, 0xe8, 0x26,
	0xf9, 0xa4, 0x3f, 0xae, 0x89, 0xba, 0x22, 0x5c, 0x4e, 0x69, 0xd7, 0x33, 0xdb, 0x74, 0x07, 0xf8,
	0xbc, 0xbb, 0x9a, 0xad, 0xf2, 0x94, 0xc6, 0x73, 0xb9, 0x27, 0x5b, 0xc6, 0x2a, 0x26, 0xd4, 0xed,
	0x93, 0xcc, 0x6b, 0xad, 0x98, 0x24, 0xff, 0x5c, 0xcc, 0x28, 0x29, 0xf2, 0x29, 0x92, 0x46, 0x69,
	0x8d, 0xbd, 0x43, 0xd3, 0x20, 0xf6, 0x09, 0x26, 0x95, 0x8d, 0x0f, 0x1f, 0x26, 0xdb, 0x97, 0xa4,
	0x44, 0x28, 0x57, 0x7c, 0x7b, 0x78, 0xd3, 0xf5, 0x23, 0xb9, 0x78, 0x16, 0x38, 0x9c, 0x5e, 0xdd,
	0xbf, 0x86, 0xa5, 0xf7, 0x4d, 0x27, 0x4f, 0x9e, 0x3b, 0x1a, 0x6e, 0xfe, 0xdb, 0x40, 0xe9, 0x25,
	0x56, 0xc1, 0xc3, 0x28, 0xf8, 0x8b, 0xd5, 0x09, 0xbc, 0xbf, 0x3a, 0x40, 0xa0, 0x0f, 0x4a, 0x2f,
	0x32, 0x4c, 0x6a, 0xcb, 0x67, 0x0a, 0x52, 0x66, 0x5a, 0xf6, 0x8d, 0x64, 0x06, 0x9f, 0x3b, 0x92,
	0x31, 0x7e, 0x2c, 0x86, 0x60, 0x33, 0x23, 0xc0, 0x6b, 0x38, 0xf5, 0xb2, 0x75, 0x14, 0xa9, 0x2d,
	0x70, 0x12, 0x36, 0x4d, 0x6b, 0x78, 0x62, 0x10, 0x3e, 0xd2, 0xb7, 0x72, 0x69, 0x9c, 0x03, 0x5e,
	0xc4, 0x10, 0x43, 0xe4, 0x35, 0x78, 0x6b, 0xe8, 0xef, 0x42, 0xe6, 0x74, 0xb0, 0x94, 0x39, 0xad,
	0x2b, 0xb4, 0x13, 0x4b, 0xf5, 0xb2, 0x4e, 0x7f, 0x36, 0x7f, 0x3d, 0x2a, 0x5e, 0x2e, 0xbe, 0xaa,
	0xe3, 0xc8, 0x41, 0xe3, 0xe3, 0x77, 0xf3, 0xcf, 0xd1, 0x08, 0x27, 0x65, 0x1f, 0x90, 0x15, 0x8c,
	0xdc, 0x86, 0x04, 0xb3, 0xb9, 0x15, 0x65, 0xd1, 0xeb, 0x67, 0xd5, 0x85, 0xc1, 0x91, 0xc5, 0x9b,
	0x40, 0xeb, 0xb5, 0xd5, 0xa2, 0x91, 0xcc, 0x3d, 0xf1, 0xda, 0x95, 0x97, 0xda, 0xa6, 0xef, 0x3d,
	0x05, 0x04, 0x4e, 0x62, 0x59, 0xe5, 0x84, 0xcc, 0x82, 0xae, 0x45, 0x0d, 0xa6, 0x7e, 0x34, 0x8b,
	0x82, 0x28, 0xd9, 0x55, 0xf9, 0x0a, 0x27, 0x79, 0xcc, 0xf5, 0x69, 0x45, 0xe1, 0x8a, 0x1f, 0x9e,
	0x5d, 0x07, 0x6a, 0x57, 0x33, 0xd4, 0x32, 0x37, 0x6e, 0x3f, 0x9a, 0xa5, 0x5a, 0xd7, 0x6a, 0xae,
	0xf0, 0x44, 0xd8, 0x9b, 0x2b, 0xcb, 0xb9, 0x77, 0x4b, 0x07, 0x3f, 0x18, 0xb2, 0x72, 0xa5, 0xaa,
	0x65, 0x95, 0x66, 0x1e, 0x21, 0xdc, 0x77, 0x03, 0x68, 0x59, 0x59, 0x44, 0xcc, 0xaf, 0x31, 0xc8,
	0xfe, 0xee, 0xf7, 0x84, 0x8b, 0xf3, 0xcf, 0xf7, 0x8a, 0x15, 0xcf, 0xd2, 0x53, 0x2d, 0x8d, 0x2e,
	0xf6, 0x25, 0x94, 0xe6, 0xdc, 0xf0, 0x8d, 0x48, 0xa6, 0x0a, 0x9a, 0x79, 0x5a, 0x46, 0xe1, 0x4f,
	0x86, 0xa8, 0x32, 0xc9, 0x29, 0xb8, 0xd9, 0xf7, 0x71, 0x5c, 0xa6, 0x7a, 0x4a, 0x3c, 0xbe, 0xcc,
	0x17, 0x29, 0x18, 0xb1, 0xad, 0x00, 0xf9, 0xbb, 0x15, 0xef, 0x70, 0xf0, 0x85, 0x53, 0x57, 0xb9,
	0x0c, 0xa4, 0x37, 0x6f, 0xee, 0x05, 0x7d, 0xb3, 0x05, 0x6d, 0x8c, 0x6d, 0x18, 0xe4, 0x72, 0x3f,
	0xd1, 0xb3, 0x72, 0xf5, 0x8e, 0x4e, 0xa1, 0xde, 0x31, 0x9d, 0xc2, 0xc3, 0x17, 0x64, 0xc6, 0x04,
	0xad, 0x5c, 0xed, 0xa4, 0x69, 0x96, 0x1e, 0x86, 0x26, 0x17, 0x51, 0xbd, 0x6c, 0xfd, 0xcf, 0x9a,
	0x98, 0x2f, 0x5b, 0x92, 0xa5, 0x6d, 0xc0, 0x47, 0xf2, 0x7d, 0x2f, 0x02, 0x9c, 0xb9, 0x77, 0xb7,
	0x1b, 0x87, 0x7b, 0xc9, 0xd5, 0x8d, 0xab, 0x93, 0x9a, 0x23, 0xbc, 0x88, 0xa3, 0x5e, 0x3c, 0x00,
	0x63, 0x5b, 0x92, 0xe3, 0xd4, 0x16, 0xf1, 0x32, 0xb7, 0x99, 0x19, 0x3f, 0xe4, 0xa9, 0x4a, 0x90,
	0xa6, 0x59, 0x6b, 0x95, 0x20, 0x4d, 0x1a, 0x30, 0x6b, 0x9b, 0xa0, 0x44, 0x7e, 0x03, 0x9c, 0x3e,
	0x39, 0xf8, 0x5a, 0x5c, 0x3d, 0xe2, 0xfa, 0x94, 0xa1, 0xbf, 0x2a, 0x0c, 0x16, 0x29, 0x77, 0x73,
	0xd9, 0x91, 0x9c, 0xe0, 0x9e, 0xec, 0x45, 0xcc, 0xf2, 0x1e, 0x28, 0xf0, 0xfe, 0x8f, 0x01, 0x71,
	0xe9, 0x10, 0xe6, 0x7f, 0xe0, 0x7d, 0xbd, 0x27, 0x04, 0x39, 0x32, 0x27, 0x4d, 0xbe, 0x73, 0x84,
	0x6d, 0xef, 0x0f, 0x73, 0x99, 0x70, 0x44, 0xc8, 0x54, 0xa3, 0x5a, 0x02, 0x97, 0x79, 0x67, 0x38,
	0x58, 0x72, 0x86, 0xe0, 0x7b, 0x28, 0xb5, 0xa9, 0xd2, 0xaa, 0xfc, 0x61, 0xdc, 0xcc, 0x6c, 0xe0,
	0xb0, 0x86, 0xf8, 0x84, 0x43, 0x61, 0x9b, 0x29, 0x92, 0xd3, 0xdd, 0x99, 0x9d, 0xfd, 0xd5, 0x80,
	0x98, 0x3b, 0x7c, 0x67, 0xd5, 0x89, 0xde, 0x17, 0xa3, 0x4a, 0x66, 0x95, 0x41, 0xbc, 0x69, 0x1d,
	0x75, 0xae, 0xc5, 0xcd, 0x1f, 0x06, 0x5b, 0xb6, 0xa6, 0x91, 0x22, 0x81, 0x81, 0x0c, 0x12, 0x68,
	0x40, 0x20, 0x91, 0x8c, 0xcd, 0xab, 0x6b, 0xad, 0xa8, 0xae, 0xd5, 0x1a, 0x36, 0x70, 0x14, 0x0d,
	0x2b, 0x6a, 0xf7, 0x6f, 0x86, 0xc5, 0xe5, 0xc2, 0x5a, 0x6c, 0xb9, 0x09, 0xd1, 0xf8, 0x36, 0x80,
	0x75, 0xc0, 0x63, 0x1f, 0xf5, 0x65, 0x3f, 0x75, 0xbb, 0xd5, 0xce, 0x7f, 0x5d, 0x70, 0xe4, 0x07,
	0xc3, 0x9d, 0xb4, 0xce, 0xc0, 0x49, 0x26, 0x7a, 0xc0, 0x9c, 0xcf, 0x3d, 0x63, 0xe2, 0xed, 0xbe,
	0x1a, 0xaf, 0x5f, 0x0d, 0xdb, 0xd3, 0x9d, 0x42, 0x8b, 0x11, 0x2a, 0x77, 0x32, 0x48, 0xee, 0xe4,
	0x73, 0xa0, 0xf3, 0xc9, 0x0a, 0x3f, 0x37, 0xca, 0x06, 0x2b, 0xdb, 0xee, 0x0e, 0x40, 0x6f, 0xdf,
	0x67, 0x45, 0x43, 0xe7, 0x02, 0x56, 0xdb, 0xed, 0x26, 0x0e, 0x8b, 0xf1, 0xfe, 0x26, 0x87, 0xc2,
	0xf8, 0xa6, 0xc1, 0xe1, 0x96, 0x08, 0x33, 0x27, 0xa8, 0xed, 0x84, 0x13, 0xb5, 0xeb, 0xf9, 0xdb,
	0x9a, 0x38, 0x96, 0x1f, 0xc9, 0xd0, 0x44, 0x61, 0xe5, 0x5d, 0x10, 0x22, 0x4a, 0x02, 0x2b, 0x20,
	0xdf, 0x55, 0xa2, 0x50, 0x2a, 0xa3, 0x2c, 0x4a, 0x1a, 0x1b, 0x9b, 0x68, 0x92, 0x89, 0x95, 0x9a,
	0x97, 0x99, 0x11, 0x9b, 0xbe, 0x74, 0x23, 0xcc, 0x7d, 0xc8, 0x9c, 0xd4, 0xd9, 0x90, 0x9d, 0x84,
	0x82, 0x20, 0x99, 0x82, 0x93, 0x27, 0x62, 0x4a, 0x27, 0x3f, 0x1c, 0xf5, 0xa4, 0x2e, 0xf1, 0xb8,
	0x77, 0xb9, 0x83, 0xb6, 0xa0, 0xb4, 0x4d, 0xc9, 0xb6, 0x44, 0xcc, 0x22, 0x93, 0x45, 0x21, 0xc2,
	0x3f, 0x17, 0x46, 0x9b, 0xaf, 0x8c, 0xf3, 0x15, 0x9d, 0x3b, 0x95, 0xb7, 0xa8, 0xae, 0xc0, 0xef,
	0x4a, 0xf5, 0x85, 0x4a, 0xef, 0x32, 0xe5, 0x69, 0x75, 0x44, 0xb2, 0x43, 0x2a, 0x63, 0xd2, 0x5c,
	0x58, 0xf2, 0x7d, 0x77, 0x0f, 0x83, 0xf8, 0x96, 0x0f, 0x3a, 0x0b, 0x93, 0x36, 0xd8, 0xdb, 0x00,
	0xc6, 0xdc, 0x91, 0xa1, 0x3d, 0xad, 0x38, 0x91, 0x82, 0xe1, 0x23, 0xa4, 0xe6, 0xbc, 0xb8, 0x72,
	0x14, 0x4d, 0x54, 0x7e, 0xe7, 0xbf, 0x66, 0x4b, 0x4f, 0x44, 0x3f, 0xc2, 0x58, 0x35, 0x9f, 0x47,
	0x7d, 0x22, 0x04, 0x45, 0xb0, 0xac, 0x92, 0x0c, 0x16, 0x29, 0x57, 0x27, 0xbb, 0xf8, 0xce, 0x8a,
	0xdf, 0x4d, 0xe6, 0xd5, 0x93, 0xa8, 0x50, 0x52, 0x10, 0x56, 0xc5, 0xbf, 0xfc, 0xc0, 0xc1, 0x91,
	0xb5, 0x6d, 0x8f, 0x7f, 0xa5, 0xfb, 0x8c, 0x0b, 0x2a, 0xf9, 0xc9, 0x5a, 0x3e, 0x0d, 0x24, 0x27,
	0x97, 0xfa, 0x61, 0x88, 0x39, 0x2c, 0x6c, 0xaf, 0x4c, 0x70, 0x0e, 0x7e, 0xc7, 0x09, 0xce, 0xa5,
	0xca, 0x77, 0x69, 0x8b, 0x67, 0x80, 0x7a, 0x63, 0x41, 0x67, 0x87, 0xd4, 0xf3, 0xa4, 0x34, 0x37,
	0x54, 0xc8, 0xff, 0xdc, 0xd2, 0x57, 0x9a, 0x21, 0x20, 0x05, 0x4c, 0xe9, 0x64, 0x7e, 0x8f, 0x16,
	0x65, 0x66, 0xab, 0x3b, 0xff, 0x69, 0x21, 0xc9, 0xc8, 0xa0, 0x8f, 0xb6, 0x76, 0xbd, 0x98, 0x2d,
	0x03, 0xec, 0x27, 0x8b, 0x17, 0xb0, 0xe7, 0x86, 0x00, 0x9d, 0x28, 0x99, 0x09, 0xd8, 0x7c, 0xf7,
	0x90, 0x54, 0xe2, 0xe8, 0xf7, 0x98, 0x4a, 0xfc, 0xab, 0xb2, 0x0d, 0x18, 0xcb, 0xd8, 0x00, 0x1f,
	0x84, 0xd8, 0xce, 0xdb, 0x00, 0xbe, 0x03, 0x87, 0xd9, 0x80, 0x79, 0x33, 0x80, 0xc6, 0x70, 0xd7,
	0x8b, 0x28, 0x10, 0xdd, 0x3b, 0x82, 0x09, 0x28, 0x5e, 0xfc, 0x2f, 0x44, 0x92, 0x77, 0x74, 0xf8,
	0x55, 0xd8, 0x38, 0x6d, 0x0c, 0xe9, 0x53, 0x92, 0xb7, 0xa4, 0x9e, 0x7c, 0x6a, 0x17, 0x6d, 0x1d,
	0xee, 0x47, 0x77, 0x2f, 0x4d, 0xa9, 0x91, 0xd4, 0xf6, 0x94, 0x26, 0xb8, 0xec, 0x73, 0x4a, 0x65,
	0x2a, 0xe8, 0x78, 0x71, 0x9c, 0x30, 0xe0, 0xe4, 0x31, 0xfd, 0x9a, 0x66, 0xb9, 0x40, 0x17, 0x1f,
	0x4c, 0x1c, 0x48, 0x7b, 0x52, 0x91, 0x62, 0xd2, 0x8f, 0xc4, 0x44, 0x24, 0xdd, 0x10, 0xf6, 0x15,
	0x33, 0x6c, 0xfc, 0x90, 0x90, 0x09, 0xaf, 0xab, 0x8c, 0x1b, 0x2b, 0x8c, 0xb2, 0x25, 0x48, 0xe2,
	0x52, 0xa4, 0x5e, 0x05, 0x80, 0x4d, 0xcf, 0x66, 0x1b, 0x04, 0x13, 0xc2, 0x79, 0xc6, 0x62, 0x26,
	0xf3, 0x3a, 0xf9, 0x5c, 0x2e, 0x27, 0x4d, 0xba, 0x6e, 0x8a, 0x59, 0x4a, 0xb1, 0x38, 0x45, 0x00,
	0x35, 0x45, 0x00, 0x8a, 0xc2, 0xad, 0x65, 0x80, 0x20, 0x74, 0xb2, 0x7c, 0xda, 0xb4, 0x0d, 0xa1,
	0xdc, 0x94, 0x70, 0xe5, 0x5b, 0x9c, 0x59, 0xd8, 0xf2, 0x76, 0x94, 0x32, 0xe0, 0x8f, 0x51, 0x90,
	0xde, 0x6a, 0x01, 0x2c, 0xfd, 0xa6, 0x26, 0x86, 0xda, 0xee, 0x5e, 0xa4, 0x52, 0xc4, 0x31, 0xd0,
	0xed, 0x81, 0x2a, 0xa5, 0x16, 0x0a, 0xfd, 0xd2, 0x53, 0xa7, 0xda, 0x1c, 0x39, 0xb6, 0xdb, 0x7d,
	0x2a, 0xdb, 0x8b, 0x7b, 0xeb, 0xc0, 0xb2, 0xad, 0x54, 0x2f, 0xfb, 0x84, 0x3f, 0xb5, 0x20, 0xc8,
	0x43, 0x23, 0x39, 0xaa, 0xad, 0x53, 0x2c, 0xf3, 0xb3, 0xeb, 0xf3, 0x6f, 0x7c, 0x06, 0x9e, 0x0e,
	0x7b, 0x8d, 0xdf, 0xd7, 0x92, 0x87, 0xe7, 0x4e, 0x28, 0xb1, 0x50, 0xec, 0x70, 0x5d, 0x9e, 0x70,
	0xdc, 0x71, 0xc2, 0x71, 0x7f, 0x56, 0x03, 0x01, 0x7f, 0x5d, 0x7b, 0x31, 0x09, 0x7d, 0x0f, 0x94,
	0x40, 0xd9, 0x34, 0xd2, 0x95, 0x2f, 0x51, 0x77, 0x40, 0xb8, 0xcc, 0x3e, 0xd2, 0x25, 0x60, 0x41,
	0xf1, 0xc5, 0x8a, 0xd2, 0x00, 0x90, 0xd3, 0x0c, 0x09, 0x82, 0xd2, 0xce, 0xda, 0x27, 0x95, 0xbc,
	0x36, 0x89, 0x8b, 0xb9, 0x44, 0x4e, 0x49, 0xee, 0x9b, 0x62, 0x3e, 0xfb, 0xfd, 0xa4, 0x98, 0xbf,
	0xcc, 0xc0, 0xab, 0x73, 0x1a, 0x7f, 0xde, 0x03, 0x96, 0xef, 0x7d, 0xa8, 0x9f, 0xb8, 0xa0, 0xdd,
	0x21, 0x95, 0x45, 0xed, 0x76, 0x49, 0x91, 0xa2, 0xc0, 0xdc, 0xa5, 0x1f, 0x5b, 0xc8, 0x38, 0x4a,
	0xeb, 0x4d, 0x87, 0x65, 0x9b, 0x7f, 0x5e, 0x51, 0xe7, 0x68, 0x12, 0x24, 0x9d, 0xb3, 0x0e, 0xf5,
	0x86, 0x2f, 0x5c, 0xe5, 0xc8, 0xe5, 0xba, 0xa7, 0xbf, 0xaf, 0x5c, 0xf7, 0x4f, 0x2a, 0x52, 0xce,
	0x9c, 0x68, 0xff, 0x56, 0xc9, 0x66, 0xe3, 0xdb, 0x25, 0x9b, 0xd7, 0x4a, 0xc9, 0xe6, 0x97, 0x4a,
	0x39, 0xcc, 0xef, 0x22, 0xcd, 0x3c, 0xf3, 0x7d, 0xa5, 0x99, 0x67, 0xbf, 0x8b, 0x34, 0xf3, 0x37,
	0x07, 0x64, 0x99, 0x39, 0x61, 0xfe, 0x87, 0xc9, 0x2f, 0x9f, 0xf9, 0x8e, 0xf2, 0xcb, 0x2b, 0xe5,
	0xfc, 0xb2, 0x99, 0xcd, 0x2f, 0x9f, 0x02, 0x0e, 0xb3, 0x95, 0xf9, 0xe5, 0x17, 0xcf, 0x2c, 0xff,
	0x43, 0xf9, 0xe5, 0x49, 0xee, 0x4e, 0xab, 0xe0, 0xf4, 0x67, 0xb9, 0xbc, 0xf2, 0xe2, 0x5d, 0x90,
	0x68, 0xe1, 0x41, 0x72, 0xcd, 0xb8, 0x04, 0x88, 0x0e, 0xa0, 0x8f, 0x26, 0x99, 0x1e, 0x39, 0x82,
	0xfd, 0x8c, 0x22, 0x37, 0xf4, 0xe0, 0x82, 0x16, 0x81, 0xbc, 0x36, 0x44, 0x3a, 0x3d, 0x0d, 0x01,
	0x51, 0x75, 0xfe, 0x79, 0xe0, 0x80, 0xfc, 0xf3, 0xe2, 0x4f, 0x41, 0x86, 0xf5, 0xbb, 0xae, 0x2a,
	0x71, 0x26, 0x8a, 0xba, 0xeb, 0x81, 0xfb, 0x44, 0x84, 0xa6, 0xf6, 0x0b, 0xe4, 0x69, 0xcb, 0x1e,
	0x3f, 0x2c, 0x42, 0x08, 0xb1, 0xcb, 0x3e, 0x95, 0xaf, 0x33, 0x95, 0xc7, 0xf9, 0xf5, 0x41, 0xe6,
	0x2d, 0x43, 0xa5, 0x30, 0x37, 0xfe, 0xee, 0x98, 0x98, 0xca, 0x09, 0x62, 0xfc, 0x51, 0x4d, 0x8c,
	0xa7, 0x4f, 0xaa, 0xcf, 0x59, 0x87, 0xfd, 0x2e, 0xbe, 0xd1, 0xb4, 0x0e, 0xff, 0x51, 0x3a, 0xa9,
	0x53, 0xd2, 0x1e, 0xa5, 0x4f, 0x30, 0x2a, 0x7f, 0x61, 0x68, 0xfc, 0x69, 0x4d, 0x4c, 0x64, 0x7e,
	0x0c, 0x6e, 0x9c, 0xb7, 0x0e, 0xff, 0x45, 0x7b, 0xe3, 0x82, 0x75, 0x94, 0x9f, 0x93, 0x13, 0x22,
	0xc9, 0xf4, 0x64, 0x64, 0xd9, 0x0c, 0x83, 0x4e, 0x95, 0x34, 0xbf, 0xad, 0x89, 0xc9, 0xa5, 0xdc,
	0x3b, 0x73, 0xeb, 0x08, 0xbf, 0x48, 0x6f, 0x5c, 0xb4, 0x8e, 0xf2, 0x33, 0xf3, 0x26, 0x21, 0xd0,
	0xa5, 0x6d, 0xd9, 0x7a, 0x8a, 0x77, 0x2a, 0x11, 0x86, 0x32, 0x8d, 0x7a, 0xf4, 0x3e, 0xdb, 0xf4,
	0x0b, 0x7c, 0x9f, 0xc9, 0x4d, 0xc6, 0x59, 0xeb, 0xe0, 0x9f, 0xa1, 0x37, 0x4c, 0xeb, 0x90, 0xdf,
	0x21, 0x36, 0x29, 0x0a, 0xd6, 0x63, 0xf0, 0xb7, 0x8e, 0x54, 0xb2, 0x06, 0x66, 0xbc, 0x3b, 0x2a,
	0x0a, 0x40, 0x39, 0xf4, 0x63, 0x20, 0xcb, 0xf8, 0x8b, 0x9a, 0x10, 0xe9, 0x33, 0x32, 0xa3, 0x69,
	0x1d, 0xfa, 0xdb, 0xc3, 0xc6, 0x79, 0xeb, 0xf0, 0x67, 0x68, 0x4d, 0x85, 0xcb, 0xf9, 0x97, 0x86,
	0x51, 0xee, 0xb7, 0x7a, 0xee, 0x46, 0xd0, 0x8f, 0xf1, 0xd7, 0x62, 0x55, 0x3f, 0x52, 0x8c, 0x2c,
	0xe3, 0x2f, 0x41, 0x79, 0x32, 0xcf, 0x9c, 0x8c, 0xf3, 0x47, 0x78, 0x04, 0x56, 0x56, 0x9e, 0xaa,
	0x87, 0x52, 0x2f, 0x22, 0xd5, 0xaf, 0x40, 0x89, 0xb2, 0x75, 0x22, 0xe3, 0xc2, 0x51, 0x5e, 0x57,
	0x94, 0x95, 0xa8, 0xb2, 0xd6, 0xd4, 0x54, 0xc0, 0x44, 0x0b, 0xc6, 0x08, 0x21, 0x95, 0x61, 0x63,
	0x0f, 0x24, 0xc3, 0x53, 0xb4, 0x20, 0x3e, 0x1c, 0xe1, 0x3c, 0xb4, 0x71, 0xc6, 0x3a, 0xb0, 0x50,
	0xd4, 0x38, 0x6b, 0x1d, 0x92, 0xbf, 0xa6, 0xda, 0x02, 0x37, 0x56, 0xef, 0x45, 0x21, 0xfd, 0x6f,
	0xfc, 0x4b, 0x4d, 0xcc, 0x56, 0x66, 0x80, 0x8d, 0xab, 0xd6, 0xf3, 0x24, 0xc2, 0x1b, 0x96, 0xf5,
	0x5c, 0x79, 0xe5, 0x26, 0xa1, 0x58, 0xf6, 0x66, 0x11, 0x23, 0x58, 0x0a, 0x71, 0x15, 0x5e, 0x6d,
	0x15, 0xf3, 0xb5, 0x12, 0x67, 0x13, 0xaa, 0x2d, 0xae, 0xc1, 0xf8, 0x5d, 0x4d, 0x4c, 0x17, 0x99,
	0x19, 0x73, 0xd6, 0x11, 0x33, 0xcd, 0x8d, 0xcb, 0x47, 0xce, 0x7e, 0x36, 0xe9, 0x67, 0x9e, 0x45,
	0x99, 0xab, 0x93, 0xcb, 0x65, 0x31, 0x21, 0x12, 0x37, 0xca, 0x29, 0x20, 0xa3, 0xf4, 0xa2, 0x67,
	0xff, 0x84, 0x65, 0xe3, 0x55, 0xeb, 0x39, 0x52, 0x4a, 0xf4, 0x7e, 0x4d, 0x0d, 0x28, 0xe5, 0xb3,
	0x92, 0xf8, 0x00, 0x35, 0xd0, 0xf8, 0x13, 0xb0, 0x18, 0xa9, 0x33, 0x2e, 0x5b, 0x8c, 0x32, 0xf8,
	0x2e, 0x5b, 0x8c, 0x0a, 0x67, 0xce, 0xda, 0xb8, 0x2a, 0x43, 0x54, 0xc3, 0x88, 0x2e, 0x22, 0x45,
	0x0d, 0x04, 0x8a, 0x49, 0x82, 0xc2, 0x95, 0x6c, 0xf0, 0x7f, 0x3a, 0x83, 0x92, 0x6a, 0x5e, 0x8b,
	0x4c, 0x1b, 0xfe, 0xd4, 0x2b, 0x2a, 0x55, 0x40, 0x71, 0xef, 0x17, 0x07, 0x7f, 0x51, 0xab, 0xfd,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x5c, 0xbc, 0x92, 0x84, 0x46, 0x00, 0x00,
}
